// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using schliessanlagen_konfigurator.Data;

#nullable disable

namespace schliessanlagenkonfigurator.Migrations
{
    [DbContext(typeof(schliessanlagen_konfiguratorContext))]
    [Migration("20240229135607_db")]
    partial class db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Aussenzylinder_Rundzylinder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artikelnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("schliessanlagenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("schliessanlagenId");

                    b.ToTable("Aussenzylinder_Rundzylinder");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Hebelzylinder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artikelnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("schliessanlagenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("schliessanlagenId");

                    b.ToTable("Hebelzylinder");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Orders", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("CountKey")
                        .HasColumnType("int");

                    b.Property<bool>("IsOppen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen10")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen11")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen12")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen13")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen14")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen15")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen16")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen17")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen18")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen19")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen2")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen20")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen3")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen4")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen5")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen6")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen7")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen8")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOppen9")
                        .HasColumnType("bit");

                    b.Property<string>("NameKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZylinderId")
                        .HasColumnType("int");

                    b.Property<float?>("aussen")
                        .HasColumnType("real");

                    b.Property<float?>("innen")
                        .HasColumnType("real");

                    b.Property<string>("userKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.Aussen_Innen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Intern")
                        .HasColumnType("real");

                    b.Property<int>("Profil_DoppelzylinderId")
                        .HasColumnType("int");

                    b.Property<float>("aussen")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Profil_DoppelzylinderId");

                    b.ToTable("Aussen_Innen");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.Profil_Doppelzylinder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artikelnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("schliessanlagenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("schliessanlagenId");

                    b.ToTable("Profil_Doppelzylinder");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.Profil_Doppelzylinder_Options", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DoppelzylinderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoppelzylinderId");

                    b.ToTable("Profil_Doppelzylinder_Options");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.ValueOptions.NGF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OptionsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionsId");

                    b.ToTable("NGF");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.ValueOptions.NGF_Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Cost")
                        .HasColumnType("real");

                    b.Property<int?>("Knayf_OptionsId")
                        .HasColumnType("int");

                    b.Property<int?>("NGFId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Knayf_OptionsId");

                    b.HasIndex("NGFId");

                    b.ToTable("NGF_Value");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_Halbzylinder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artikelnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Außen")
                        .HasColumnType("float");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("max")
                        .HasColumnType("float");

                    b.Property<double>("min")
                        .HasColumnType("float");

                    b.Property<int>("schliessanlagenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("schliessanlagenId");

                    b.ToTable("Profil_Halbzylinder");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_KnaufzylinderZylinder.Aussen_Innen_Knauf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Intern")
                        .HasColumnType("real");

                    b.Property<int>("Profil_DoppelzylinderId")
                        .HasColumnType("int");

                    b.Property<int?>("Profil_KnaufzylinderId")
                        .HasColumnType("int");

                    b.Property<float>("aussen")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Profil_DoppelzylinderId");

                    b.HasIndex("Profil_KnaufzylinderId");

                    b.ToTable("Aussen_Innen_Knauf");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_KnaufzylinderZylinder.Profil_Knaufzylinder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artikelnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("schliessanlagenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("schliessanlagenId");

                    b.ToTable("Profil_Knaufzylinder");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_KnaufzylinderZylinder.Profil_Knaufzylinder_Options", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Profil_KnaufzylinderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Profil_KnaufzylinderId");

                    b.ToTable("Profil_Knaufzylinder_Options");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_KnaufzylinderZylinder.ValueOptions.Knayf_Options", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OptionsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionsId");

                    b.ToTable("Knayf_Options");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Schliessanlagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nameType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schliessanlagen");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Vorhangschloss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artikelnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("schliessanlagenId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Сost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("schliessanlagenId");

                    b.ToTable("Vorhangschloss");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Aussenzylinder_Rundzylinder", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.Schliessanlagen", "Schliessanlagen")
                        .WithMany("Aussenzylinder_Rundzylinder")
                        .HasForeignKey("schliessanlagenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schliessanlagen");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Hebelzylinder", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.Schliessanlagen", "Schliessanlagen")
                        .WithMany("Hebelzylinder")
                        .HasForeignKey("schliessanlagenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schliessanlagen");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.Aussen_Innen", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.Profil_Doppelzylinder", "Profil_Doppelzylinder")
                        .WithMany("Aussen_Innen")
                        .HasForeignKey("Profil_DoppelzylinderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profil_Doppelzylinder");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.Profil_Doppelzylinder", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.Schliessanlagen", "Schliessanlagen")
                        .WithMany("Profil_Doppelzylinder")
                        .HasForeignKey("schliessanlagenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schliessanlagen");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.Profil_Doppelzylinder_Options", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.Profil_Doppelzylinder", "Doppelzylinder")
                        .WithMany("Profil_Doppelzylinder_Options")
                        .HasForeignKey("DoppelzylinderId");

                    b.Navigation("Doppelzylinder");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.ValueOptions.NGF", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.Profil_Doppelzylinder_Options", "Options")
                        .WithMany("NGF")
                        .HasForeignKey("OptionsId");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.ValueOptions.NGF_Value", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.Profil_KnaufzylinderZylinder.ValueOptions.Knayf_Options", null)
                        .WithMany("NGF_Value")
                        .HasForeignKey("Knayf_OptionsId");

                    b.HasOne("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.ValueOptions.NGF", "NGF")
                        .WithMany("NGF_Value")
                        .HasForeignKey("NGFId");

                    b.Navigation("NGF");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_Halbzylinder", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.Schliessanlagen", "Schliessanlagen")
                        .WithMany("Profil_Halbzylinder")
                        .HasForeignKey("schliessanlagenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schliessanlagen");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_KnaufzylinderZylinder.Aussen_Innen_Knauf", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.Profil_Doppelzylinder", "Profil_Doppelzylinder")
                        .WithMany()
                        .HasForeignKey("Profil_DoppelzylinderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("schliessanlagen_konfigurator.Models.Profil_KnaufzylinderZylinder.Profil_Knaufzylinder", null)
                        .WithMany("Aussen_Innen_Knauf")
                        .HasForeignKey("Profil_KnaufzylinderId");

                    b.Navigation("Profil_Doppelzylinder");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_KnaufzylinderZylinder.Profil_Knaufzylinder", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.Schliessanlagen", "Schliessanlagen")
                        .WithMany("Profil_Knaufzylinder")
                        .HasForeignKey("schliessanlagenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schliessanlagen");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_KnaufzylinderZylinder.Profil_Knaufzylinder_Options", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.Profil_KnaufzylinderZylinder.Profil_Knaufzylinder", "Profil_Knaufzylinder")
                        .WithMany("Profil_Knaufzylinder_Options")
                        .HasForeignKey("Profil_KnaufzylinderId");

                    b.Navigation("Profil_Knaufzylinder");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_KnaufzylinderZylinder.ValueOptions.Knayf_Options", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.Profil_KnaufzylinderZylinder.Profil_Knaufzylinder_Options", "Options")
                        .WithMany("options")
                        .HasForeignKey("OptionsId");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Vorhangschloss", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.Schliessanlagen", "Schliessanlagen")
                        .WithMany("Vorhangschloss")
                        .HasForeignKey("schliessanlagenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schliessanlagen");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.Profil_Doppelzylinder", b =>
                {
                    b.Navigation("Aussen_Innen");

                    b.Navigation("Profil_Doppelzylinder_Options");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.Profil_Doppelzylinder_Options", b =>
                {
                    b.Navigation("NGF");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.ProfilDopelZylinder.ValueOptions.NGF", b =>
                {
                    b.Navigation("NGF_Value");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_KnaufzylinderZylinder.Profil_Knaufzylinder", b =>
                {
                    b.Navigation("Aussen_Innen_Knauf");

                    b.Navigation("Profil_Knaufzylinder_Options");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_KnaufzylinderZylinder.Profil_Knaufzylinder_Options", b =>
                {
                    b.Navigation("options");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_KnaufzylinderZylinder.ValueOptions.Knayf_Options", b =>
                {
                    b.Navigation("NGF_Value");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Schliessanlagen", b =>
                {
                    b.Navigation("Aussenzylinder_Rundzylinder");

                    b.Navigation("Hebelzylinder");

                    b.Navigation("Profil_Doppelzylinder");

                    b.Navigation("Profil_Halbzylinder");

                    b.Navigation("Profil_Knaufzylinder");

                    b.Navigation("Vorhangschloss");
                });
#pragma warning restore 612, 618
        }
    }
}
