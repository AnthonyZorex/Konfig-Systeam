// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using schliessanlagen_konfigurator.Data;

#nullable disable

namespace schliessanlagenkonfigurator.Migrations
{
    [DbContext(typeof(schliessanlagen_konfiguratorContext))]
    [Migration("20240205124147_s")]
    partial class s
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Aussenzylinder_Rundzylinder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artikelnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OptionsId")
                        .HasColumnType("int");

                    b.Property<float>("max")
                        .HasColumnType("real");

                    b.Property<float>("min")
                        .HasColumnType("real");

                    b.Property<int>("schliessanlagenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionsId");

                    b.HasIndex("schliessanlagenId");

                    b.ToTable("Aussenzylinder_Rundzylinder");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Hebelzylinder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artikelnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OptionsId")
                        .HasColumnType("int");

                    b.Property<float>("max")
                        .HasColumnType("real");

                    b.Property<float>("min")
                        .HasColumnType("real");

                    b.Property<int>("schliessanlagenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionsId");

                    b.HasIndex("schliessanlagenId");

                    b.ToTable("Hebelzylinder");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Options", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bohrschutz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bügelhöhe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Freilauf")
                        .HasColumnType("bit");

                    b.Property<string>("NG_Funktion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schließbart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schließhebel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schließweg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Witterungsschutz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zylinderfärbung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zylinderknauf")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_Doppelzylinder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artikelnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<float>("Extern")
                        .HasColumnType("real");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Intern")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OptionsId")
                        .HasColumnType("int");

                    b.Property<float>("max")
                        .HasColumnType("real");

                    b.Property<float>("min")
                        .HasColumnType("real");

                    b.Property<int>("schliessanlagenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionsId");

                    b.HasIndex("schliessanlagenId");

                    b.ToTable("Profil_Doppelzylinder");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_Halbzylinder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artikelnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Außen")
                        .HasColumnType("real");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OptionsId")
                        .HasColumnType("int");

                    b.Property<float>("max")
                        .HasColumnType("real");

                    b.Property<float>("min")
                        .HasColumnType("real");

                    b.Property<int>("schliessanlagenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionsId");

                    b.HasIndex("schliessanlagenId");

                    b.ToTable("Profil_Halbzylinder");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_Knaufzylinder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artikelnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<float>("Extern")
                        .HasColumnType("real");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Intern")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OptionsId")
                        .HasColumnType("int");

                    b.Property<float>("max")
                        .HasColumnType("real");

                    b.Property<float>("min")
                        .HasColumnType("real");

                    b.Property<int>("schliessanlagenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionsId");

                    b.HasIndex("schliessanlagenId");

                    b.ToTable("Profil_Knaufzylinder");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Schliessanlagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nameType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schliessanlagen");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Vorhangschloss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artikelnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OptionsId")
                        .HasColumnType("int");

                    b.Property<float>("max")
                        .HasColumnType("real");

                    b.Property<float>("min")
                        .HasColumnType("real");

                    b.Property<int>("schliessanlagenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionsId");

                    b.HasIndex("schliessanlagenId");

                    b.ToTable("Vorhangschloss");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Aussenzylinder_Rundzylinder", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.Options", "Options")
                        .WithMany("Aussenzylinder_Rundzylinder")
                        .HasForeignKey("OptionsId");

                    b.HasOne("schliessanlagen_konfigurator.Models.Schliessanlagen", "Schliessanlagen")
                        .WithMany("Aussenzylinder_Rundzylinder")
                        .HasForeignKey("schliessanlagenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Options");

                    b.Navigation("Schliessanlagen");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Hebelzylinder", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.Options", "Options")
                        .WithMany("Hebelzylinder")
                        .HasForeignKey("OptionsId");

                    b.HasOne("schliessanlagen_konfigurator.Models.Schliessanlagen", "Schliessanlagen")
                        .WithMany("Hebelzylinder")
                        .HasForeignKey("schliessanlagenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Options");

                    b.Navigation("Schliessanlagen");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_Doppelzylinder", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.Options", "Options")
                        .WithMany("Profil_Doppelzylinder")
                        .HasForeignKey("OptionsId");

                    b.HasOne("schliessanlagen_konfigurator.Models.Schliessanlagen", "Schliessanlagen")
                        .WithMany("Profil_Doppelzylinder")
                        .HasForeignKey("schliessanlagenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Options");

                    b.Navigation("Schliessanlagen");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_Halbzylinder", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.Options", "Options")
                        .WithMany("Profil_Halbzylinder")
                        .HasForeignKey("OptionsId");

                    b.HasOne("schliessanlagen_konfigurator.Models.Schliessanlagen", "Schliessanlagen")
                        .WithMany("Profil_Halbzylinder")
                        .HasForeignKey("schliessanlagenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Options");

                    b.Navigation("Schliessanlagen");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Profil_Knaufzylinder", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.Options", "Options")
                        .WithMany("Profil_Knaufzylinder")
                        .HasForeignKey("OptionsId");

                    b.HasOne("schliessanlagen_konfigurator.Models.Schliessanlagen", "Schliessanlagen")
                        .WithMany("Profil_Knaufzylinder")
                        .HasForeignKey("schliessanlagenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Options");

                    b.Navigation("Schliessanlagen");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Vorhangschloss", b =>
                {
                    b.HasOne("schliessanlagen_konfigurator.Models.Options", "Options")
                        .WithMany("Vorhangschloss")
                        .HasForeignKey("OptionsId");

                    b.HasOne("schliessanlagen_konfigurator.Models.Schliessanlagen", "Schliessanlagen")
                        .WithMany("Vorhangschloss")
                        .HasForeignKey("schliessanlagenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Options");

                    b.Navigation("Schliessanlagen");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Options", b =>
                {
                    b.Navigation("Aussenzylinder_Rundzylinder");

                    b.Navigation("Hebelzylinder");

                    b.Navigation("Profil_Doppelzylinder");

                    b.Navigation("Profil_Halbzylinder");

                    b.Navigation("Profil_Knaufzylinder");

                    b.Navigation("Vorhangschloss");
                });

            modelBuilder.Entity("schliessanlagen_konfigurator.Models.Schliessanlagen", b =>
                {
                    b.Navigation("Aussenzylinder_Rundzylinder");

                    b.Navigation("Hebelzylinder");

                    b.Navigation("Profil_Doppelzylinder");

                    b.Navigation("Profil_Halbzylinder");

                    b.Navigation("Profil_Knaufzylinder");

                    b.Navigation("Vorhangschloss");
                });
#pragma warning restore 612, 618
        }
    }
}
