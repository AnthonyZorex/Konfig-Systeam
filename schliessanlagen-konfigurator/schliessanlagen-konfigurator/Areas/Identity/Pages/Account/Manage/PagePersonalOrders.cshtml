@page
@model schliessanlagen_konfigurator.Areas.Identity.Pages.Account.Manage.PagePersonalOrdersModel;

@{
    ViewData["Title"] = "Profile Orders";
    ViewData["ActivePage"] = ManageNavPages.PersonalOrderNavClass;

    var orderList = (List<UserOrdersShop>)ViewData["OrderLis"];
    var orderItem = (List<ProductSysteam>)ViewData["OrderItem"];

    var countProduct = (List<int>)ViewData["CounterProduct"];

    float costed = 0;
    int ProudctItemCounter = 0;
    int UserOrderId = 0;
}
<h3>@ViewData["Title"]</h3>

<div class="row">
    <div class="col-md-6">
        <div id="AllOrderUser">
            @for (int z = 0; z < orderList.Count; z++)
            {
                <div id="AllProductUser" >

                    <div id="hederBlockOrder">
                        <h3>Artikel</h3>
                        <div id="orderCostHeader">
                            <h3>Preis</h3>
                            <h3>Menge</h3>
                        </div>
                    </div>
                <hr/>
                        <div id="producktInfo">
                        <img src="@("/Image/Schliarticle.jpg")" onclick="OpenModalInfo(@z)" height="150" width="150" />
                        <h4>@orderList[z].ProductName</h4>
                        <div id="costedInfo">
                                <div style="display:flex"><h4 id="costedI-@z">@orderList[z].OrderSum</h4><span>€</span></div>
                            <input onchange="counterCost(event.target.value,@z)" required id="countOrderSysteam" value="@orderList[z].count" type="number" pattern="[0-9]+" min="1" max="1000" />

                            <h4 id="cost-@z">@orderList[z].OrderSum €</h4>
                        </div>
                        </div>

                    <div id="myModal-@z" class="modal">

                        <div class="modal-content">

                            <span onclick="closedModal(@z)" class="close">&times;</span>

                            <img src="@("/Image/Schliarticle.jpg")" height="150" width="150" />

                            <h4>@orderList[z].ProductName</h4>

                            @for (int s = 0; s < countProduct[z]; s++)
                            {
                                <hr/>
                                <h4>Name: @orderItem[ProudctItemCounter].Name</h4>
                                <h4>aussen: @orderItem[ProudctItemCounter].Aussen</h4>
                                <h4>innen: @orderItem[ProudctItemCounter].Intern</h4>
                                <h4>Option - @orderItem[ProudctItemCounter].Option</h4> 
                                UserOrderId = @orderList[z].Id;
                                ProudctItemCounter++;
                            }
                            <hr />
                            <br />
                            <div id="paypal-button-container-@z" style="margin-left: auto;margin-right: auto;">
                            </div>
                            <input type="hidden" id="@z" value="true" />
                        </div>
                    </div>                  
                    <br />
                        <button id="removeOrder" class="btn btn-danger" onclick="(remove(@UserOrderId))">RemovaOrder</button>
                    <button id="removeOrder" class="btn btn-danger" onclick="OpenModalInfo(@z,@orderList[z].Id)">Pay</button>
                    <hr />
                   
                </div>
                costed = costed + orderList[z].OrderSum;
            }
            <br />
            <hr />
            <h2 style="color:red">Costed: @costed</h2>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
<script src="https://www.paypal.com/sdk/js?client-id=AZH15S9JkSTGxqJmoCVcNRfEkiIsWuYBLjaCnAITqmqepVQEmiHP6lAAj-3BdygEs3qh71GxqI39piYa&currency=EUR"></script>
<script>

    let removeButton = document.getElementById("removeOrder");
    let AllOrderID = document.querySelector("#OrderId");

    var span = document.getElementsByClassName("close")[0];
    let idItem = 0;

    function OpenModalInfo(id,IdOrder) 
    {
        let cost = document.getElementById("cost-" + id);

        let cheker = document.getElementById(id);

        var stringWithoutEuro = cost.innerHTML.replace("€", "");
        
        var costen = parseFloat(stringWithoutEuro);
        idItem = id;

        var modal = document.getElementById(`myModal-${id}`);
        modal.style.display = "block";
        if (cheker.value == "true") 
        {
            paypal.Buttons({
                createOrder: function (data, actions) {
                    return actions.order.create({
                        purchase_units: [{
                            amount: {
                                value: `${costen}`
                            }
                        }]
                    });
                },
                onApprove: function (data, actions) {
                    return actions.order.capture().then(function (details) {
                        alert('Transaction completed by ' + details.payer.name.given_name);
                        $.ajax({
                            type: "POST",
                            url: "/Konfigurator/endOrder",
                            data: { data: IdOrder },
                            success: function (response) {
                                console.log(response);
                            },
                            error: function (xhr, status, error) {
                                console.error(error);
                            }
                        });
                    });
                }
            }).render(`#paypal-button-container-${id}`);

            cheker.value = "false";
        }
        
    }

    function closedModal(id) 
    {
        idItem = id;
        var modal = document.getElementById(`myModal-${id}`);
        modal.style.display = "none";
    }

    window.onclick = function (event) 
    {
        var modal = document.getElementById(`myModal-${idItem}`);

        if (event.target == modal) 
        {
            modal.style.display = "none";
        }
    }

    document.addEventListener("DOMContentLoaded", function () 
    {
        let count = document.querySelectorAll("#countOrderSysteam");
        count.forEach((item) => {
            item.value = 1;
        })
    });

    function counterCost(value,id) 
    {
        let costedInfo = document.getElementById(`costedI-${id}`);
        let costed = document.getElementById(`cost-${id}`);
        let cost = parseFloat(costedInfo.innerHTML * value);
        costed.innerHTML = cost + "€";
    }

    function remove(empty) 
    {
        $.ajax({
            type: "POST",
            url: "/Konfigurator/RemoveOrder",
            data: { data: empty},
            success: function (response) {
                console.log(response);
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });

        location.reload();
    }

</script>
