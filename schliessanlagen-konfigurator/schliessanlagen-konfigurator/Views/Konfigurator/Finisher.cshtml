@model schliessanlagen_konfigurator.Models.Orders;
@using Microsoft.AspNetCore.Http;

@{
    ViewData["Title"] = $"Finisher/{Model.userKey}";

    int z = 0;
    int countFalse = 0;
}
@if (TempData["AlertMessage"] != null)
{
    <script>
        alert("@TempData["AlertMessage"]");
    </script>
}
@Html.HiddenFor(m => m.userKey)  

<div id="FinisherPage">
    <h1>Schlüssel konfigurieren</h1>
    <p>
        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur
        ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim
        justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt.
    </p>
<div>

        @foreach (var item in ViewBag.Order)
        {
            z++;
            <div id="finisherItem">
            <div id="ItemCounterOrders">
                    
                    <div id="counterKey">
                        <button class="btn btn-success">-</button>
                        <h4>@item.CountKey</h4>
                        <button class="btn btn-success">+</button>
                    </div>
                            
            </div>
            <div id="nameItem">
        <h2>@item.NameKey</h2>
        </div>
        
            <div id="numerKey">
        <h3>Schlüssel Nr.@z </h3>
         </div>
                <div id="OpenValue">

                    @for (int i = 0; i < ViewBag.DorName.Count; i++)
                    {
                        @if (ViewBag.KeyValue[countFalse] == true)
                        {
                            <h5>@ViewBag.DorName[i]</h5>
                        }
                        countFalse++;
                    }

                </div>
            </div>  
       
      
        }
        <div>
    </div>
        <div id="FinisherAnderes">
            <input type="button" class="btn btn-danger" value="SCHLIESSPLAN BEARBEITEN" />
        </div>
            <h1>Türen konfigurieren</h1>
            <p>
                Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur
                ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim
                justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt.
            </p>
    </div>
    <div>
            @if (ViewBag.Dopelzylinder != null)
            {
                int elemNum = 0;
            foreach (var item in ViewBag.Dopelzylinder)
            {
                    <div id="ExelItem">
                        <div id="productImage">
                            <img decoding="async" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="400px" height="400px" />
                        </div>
                        <div id="productMenuInfo">
                            <div id="ProductNameUndCost">
                                <div>
                                    <h3>@item.Name</h3>
                                </div>
                            </div>
                            <div>
                            <select class="form-select">
                                    <option>Doppelzylinder</option>
                                </select>
                            </div>
                            <div id="product_desciptions">
                                <h5>Zylinder Länge</h5>
                            </div>
                        @if (item.isGround == true)
                        {
                            <div id="@item.Id" class="SizeProduct">
                                <div>
                                    <select class="form-select" onchange="selectParamAussen(event.target.value,@item.Id)" id="Aussen">
                                        <option style="display:none" selected>@ViewBag.DAussen[elemNum]</option>
                                        <option>Außenlänge (A)</option>
                                        @for (int i = 0; i < ViewBag.Dopelzylinderaussen.Count; i++)
                                        {
                                            <option id="OptionA">@ViewBag.Dopelzylinderaussen[i]</option>
                                        }
                                    </select>
                                </div>
                                <div>
                                    <select class="form-select" id="Intern" onchange="selectParamIntern(event.target.value,@item.Id)">
                                        
                                        <option style="display:none" selected>@ViewBag.DInter[elemNum]</option>
                                        <option>Innenlänge (B)</option>
                                        @for (int i = 0; i < ViewBag.DopelzylinderIntern.Count; i++)
                                        {
                                            <option id="OptionI">@ViewBag.DopelzylinderIntern[i]</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div id="@item.Id" class="SizeProduct">
                                <div>
                                    <select class="form-select" id="Aussen" onchange="selectParamAussenIsGround(event.target.value,@item.Id)">
                                        <option style="display:none" selected>@ViewBag.DAussen[elemNum]</option>
                                        <option>Außenlänge (A)</option>
                                        @for (int i = 0; i < ViewBag.Dopelzylinderaussen.Count; i++)
                                        {
                                            <option id="OptionA">@ViewBag.Dopelzylinderaussen[i]</option>
                                        }
                                    </select>
                                </div>
                                <div>
                                    <select class="form-select" id="Intern" onchange="selectParamInternIsGround(event.target.value,@item.Id)">
                                        <option style="display:none" selected>@ViewBag.DInter[elemNum]</option>
                                        <option>Innenlänge (B)</option>
                                        @for (int i = 0; i < ViewBag.DopelzylinderIntern.Count; i++)
                                        {
                                            <option id="OptionI">@ViewBag.DopelzylinderIntern[i]</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        }
                       
                        <div>
                            <h3>Weitere Optionen</h3>
                            <div>
                                @{
                                    int valueCount = 0;
                                }
                                @if (ViewBag.countOptionsQuery > 0)
                                {
                                    @for (int i = 0; i < ViewBag.optionsName.Count; i++)
                                    {
                                        <input class="form-control" readonly type="text" value="@ViewBag.optionsName[i]" />
                                        <select class="form-select" id="ProductOptionsSelector" onchange="selectParamOptions(event,@valueCount,@item.Id)">
                                            @for (int j = 0; j < ViewBag.countOptionsList[i]; j++)
                                            {
                                                <option id="@valueCount">@ViewBag.optionsValue[valueCount]</option>
                                                valueCount++;
                                            }
                                        </select>
                                    }
                                }


                            </div>
                        </div>
                    </div>


                    </div>
                elemNum++;
            }
        }
        @if (ViewBag.KnayfZelinder != null)
        {
            int elemNum = 0;
            foreach (var item in ViewBag.KnayfZelinder)
            {
                <div id="ExelItem">
                    <div id="productImage">
                        <img decoding="async" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="400px" height="400px" />
                    </div>
                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">

                            <div>
                                <h3>@item.Name</h3>
                            </div>

                        </div>
                        <div>
                            <select class="form-select">
                                <option>KnayfZylinder</option>
                            </select>
                        </div>
                        <div id="product_desciptions">
                            <h5>Zylinder Länge</h5>
                        </div>
                        @if (item.isGround == true)
                        {
                            <div id="@item.Id" class="SizeProduct">
                                <div>
                                    <select class="form-select" id="Aussen" onchange="selectParamAussen(event.target.value,@item.Id)">
                                        <option style="display:none" selected>@ViewBag.KAussen[elemNum]</option>
                                        <option>Außenlänge (A)</option>
                                        @for (int i = 0; i < ViewBag.KnayfZelinderAussen.Count; i++)
                                        {
                                            <option id="OptionA">@ViewBag.KnayfZelinderAussen[i]</option>
                                        }
                                    </select>
                                </div>
                                <div>
                                    <select class="form-select" id="Intern" onchange="selectParamIntern(event.target.value,@item.Id)">
                                        <option style="display:none" selected>@ViewBag.KInter[elemNum]</option>
                                        <option>Innenlänge (B)</option>
                                        @for (int i = 0; i < ViewBag.KnayfZelinderIntern.Count; i++)
                                        {
                                            <option id="OptionI">@ViewBag.KnayfZelinderIntern[i]</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div id="@item.Id" class="SizeProduct">
                                <div>
                                    <select class="form-select" id="Aussen" onchange="selectParamAussenIsGround(event.target.value,@item.Id)">
                                        <option style="display:none" selected>@ViewBag.KAussen[elemNum]</option>
                                        <option>Außenlänge (A)</option>
                                        @for (int i = 0; i < ViewBag.KnayfZelinderAussen.Count; i++)
                                        {
                                            <option id="OptionA">@ViewBag.KnayfZelinderAussen[i]</option>
                                        }
                                    </select>
                                </div>
                                <div>
                                    <select class="form-select" id="Intern" onchange="selectParamInternIsGround(event.target.value,@item.Id)">
                                        <option style="display:none" selected>@ViewBag.KInter[elemNum]</option>
                                        <option>Innenlänge (B)</option>
                                        @for (int i = 0; i < ViewBag.KnayfZelinderIntern.Count; i++)
                                        {
                                            <option id="OptionI">@ViewBag.KnayfZelinderIntern[i]</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        }
                        <div>
                            <h3>Weitere Optionen</h3>
                            <div >
                                @{
                                    int valueCount = 0;
                                }
                                @if (ViewBag.countOptionsQueryKnayf > 0)
                                {
                                    @for (int i = 0; i < ViewBag.optionsNameKnayf.Count; i++)
                                    {
                                        <input class="form-control" readonly type="text" value="@ViewBag.optionsNameKnayf[i]" />
         
                                        <select class="form-select" onchange="selectParamOptions(event,@valueCount,@item.Id)" id="ProductOptionsSelector">
                                            @for (int j = 0; j < ViewBag.countOptionsListKnayf[i]; j++)
                                            {
                                                <option id="@valueCount">@ViewBag.optionsValueKnayf[valueCount]</option>
                                                valueCount++;
                                            }
                                        </select>
                                    }
                                }


                            </div>
                        </div>
                    </div>


                </div>
            }
        }
        @if (ViewBag.Halb != null)
        {
            int elemNum = 0;
            foreach (var item in ViewBag.Halb)
            {
                <div id="ExelItem">
                    <div id="productImage">
                        <img decoding="async" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="400px" height="400px" />
                    </div>
                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">

                            <div>
                                <h3>@item.Name</h3>
                            </div>

                        </div>
                        <div>
                            <select class="form-select">
                                <option>Halbzylinder</option>
                            </select>
                        </div>
                        <div id="product_desciptions">
                            <h5>Zylinder Länge</h5>
                        </div>
                        <div >
                            <div>
                                <select class="form-select">
                                    <option style="display:none" selected>@ViewBag.HalbOrderAussen[elemNum]</option>
                                    <option>Außenlänge (A)</option>
                                    @for (int i = 0; i < ViewBag.AussenHalb.Count; i++)
                                    {
                                        <option>@ViewBag.AussenHalb[i]</option>
                                    }
                                </select>
                            </div>
                            
                        </div>
                        <div>
                            <h3>Weitere Optionen</h3>
                            <div>
                                @{
                                    int valueCount = 0;
                                }
                                @if (ViewBag.countOptionsQueryHalb > 0)
                                {
                                    @for (int i = 0; i < ViewBag.HalbOptionsName.Count; i++)
                                    {
                                     <input class="form-control" readonly type="text" value="@ViewBag.HalbOptionsName[i]" />

                                        <select class="form-select" id="ProductOptionsSelector">
                                            @for (int j = 0; j < ViewBag.HalbOptionsValueCount[i]; j++)
                                            {
                                                <option id="@valueCount">@ViewBag.HalbOptionsValue[valueCount]</option>
                                                valueCount++;
                                            }
                                        </select>
                                    }
                                }
                            </div> 
                        </div>
                    </div>
                </div>
                elemNum++;
            }
        }
        @if (ViewBag.HelbZ != null)
        {
            foreach (var item in ViewBag.HelbZ)
            {
                <div id="ExelItem">
                    <div id="productImage">
                        <img decoding="async" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="400px" height="400px" />
                    </div>
                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">

                            <div>
                                <h3>@item.Name</h3>
                            </div>

                        </div>
                        <div>
                            <select class="form-select">
                                <option>Hebelzylinder</option>
                            </select>
                        </div>
                        <div id="product_desciptions">
                            <h5>Zylinder Länge</h5>
                        </div>
                     
                        <div>
                            <h3>Weitere Optionen</h3>
                         <div>
                            @{
                            int valueCount = 0;
                            }
                    @if (ViewBag.CountOptionsHebel > 0)
                    {
                        @for (int i = 0; i < ViewBag.OptionHebelName.Count; i++)
                        {
                          <input class="form-control" readonly type="text" value="@ViewBag.OptionHebelName[i]" />

                           <select class="form-select" id="ProductOptionsSelector">
                               @for (int j = 0; j < ViewBag.CountValueHebel[i]; j++)
                               {
                                <option id="@valueCount">@ViewBag.ValueHebel[valueCount]</option>
                                valueCount++;
                               }
                           </select>
                        }
                    }


                    </div> 
                        </div>
                    </div>


                </div>
            }
        }
        @if (ViewBag.Vorhanschlos != null)
        {
            int elemNum = 0;
            foreach (var item in ViewBag.Vorhanschlos)
            {
                <div id="ExelItem">
                    <div id="productImage">
                        <img decoding="async" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="400px" height="400px" />
                    </div>
                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">

                            <div>
                                <h3>@item.Name</h3>
                            </div>

                        </div>
                        <div>
                            <select class="form-select">
                                <option>Vorhangschloss</option>
                            </select>
                        </div>
                        <div id="product_desciptions">
                            <h5>Zylinder Länge</h5>
                        </div>
                        <div>
                            <div>
                            
                                <select class="form-select">
                                    <option style="display:none" selected>@ViewBag.VorhanOrderAussen[elemNum]</option>
                                    <option>Außenlänge (A)</option>
                                    @for (int i = 0; i < ViewBag.VorhanSize.Count; i++)
                                    {
                                        <option>@ViewBag.VorhanSize[i]</option>
                                    }
                                </select>
                            </div>

                        </div>
                        <div>
                            <h3>Weitere Optionen</h3>
                            <div>
                        @{
                        int valueCount = 0;
                        }

                        @if (ViewBag.VorhanschlossCount > 0)
                        {
                            @for (int i = 0; i < ViewBag.VorhanschlossOptionCount; i++)
                            {
                                <input type="text" class="form-control" readonly value="@ViewBag.VorhanschlossOptionName[i]" />

                                <select class="form-select" id="ProductOptionsSelector">
                                @for (int j = 0; j < ViewBag.VorhanOptionCount[i]; j++)
                                {
                                  <option id="@valueCount">@ViewBag.VorhanValue[valueCount]</option>
                                    valueCount++;
                                }

                                </select>
                            }
                        }
                    </div> 
                        </div>
                    </div>


                </div>
            }
        }
        @if (ViewBag.Aussenzylinder != null)
        {
            foreach (var item in ViewBag.Aussenzylinder)
            {
                <div id="ExelItem">
                    <div id="productImage">
                        <img decoding="async" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="400px" height="400px" />
                    </div>
                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">

                            <div>
                                <h3>@item.Name</h3>
                            </div>

                        </div>
                        <div>
                            <select class="form-select">
                                <option>Aussenzylinder_Rundzylinder</option>
                            </select>
                        </div>
                        <div id="product_desciptions">
                            <h5>Zylinder Länge</h5>
                        </div>
                       
                        <div>
                            <h3>Weitere Optionen</h3>
                             <div>
                                @{
                                    int valueCount = 0;
                                }
                                @if (ViewBag.AussenCountOption > 0)
                                {
                                    @for (int i = 0; i < ViewBag.AussenName.Count; i++)
                                    {
                                        <input class="form-control" readonly type="text" value="@ViewBag.AussenName[i]" />
                                        
                                        <select class="form-select" id="ProductOptionsSelector">
                                            @for (int j = 0; j < ViewBag.AussenValue[i]; j++)
                                            {
                                                <option id="@valueCount">@ViewBag.AussenValue[valueCount]</option>
                                                valueCount++;
                                            }
                                        </select>
                                    }
                                }


                            </div> 
                        </div>
                    </div>


                </div>
            }
        }
        <div id="FinisherAnderes">
            <input type="button" class="btn btn-danger" value="ANDERES SYSTEM WÄHLEN" />
        </div>
        <div id="orderCost">
            <h1 id="cost">@ViewBag.Cost €</h1>
        </div>
        
      <div id="buttonActionFinishBlock">
          <div id="FinisherLeft">
                <button id="chekProduct" class="btn btn-dark"> <a href="@Url.Action("System_Auswählen", "Konfigurator")">ZURÜCK</a></button>
            </div>
            <div id="FinisherRight">
                <button id="chekProduct" class="btn btn-danger"> <a href="@Url.Action("FinischerProductSelect", "Konfigurator", new {VorhanAussen = @ViewBag.VorhanOrderAussen,HablAussen = @ViewBag.HalbOrderAussen,Aussen = @ViewBag.AussenzylinderItem,Vorhan = @ViewBag.VorhanschlosItem,Halb = @ViewBag.HalbItem, Helb = @ViewBag.HalbItem,userInfo = @ViewBag.UserNameItem,SumCosted = @ViewBag.Cost,DopelItem = @ViewBag.DopelzylinderIdList,DopelOption = @ViewBag.optionsName,DAussen = @ViewBag.DAussen,DIntern=@ViewBag.DInter, Knayf=@ViewBag.KnayfItemId,user = @ViewBag.User,KnayfAusse = @ViewBag.KAussen,KnayfIntern = @ViewBag.KInter})">WEITER</a></button>
            </div>
      </div>
    </div>
</div>
<script>

    // let OptionPrice = @Html.Raw(@ViewBag.optionsPrise);

    // console.log(OptionPrice);

    let AllPrice = document.getElementById("cost");

    localStorage.setItem("cost", AllPrice.innerHTML);
    localStorage.sInnen = 0;
    localStorage.sAussen = 0;
    localStorage.options = 0;

    let AussenCost = 0;
    let InternCost = 0;
    let OptionCost = 0;

    function selectParamAussenIsGround(value, idBlock) 
    {
        let iterations = 0;
        let serchedItem = 0;

        let BlockTur = document.getElementById(idBlock);

        let Aussen = BlockTur.querySelector("#Aussen");
        let Aitems = Aussen.querySelectorAll("#OptionA");

        let Intern = BlockTur.querySelector("#Intern");

        console.log(Intern);

        let Iitems = Intern.querySelectorAll("#OptionI");

        console.log(Iitems);
        Aitems.forEach(function (items) {

            if (serchedItem == 1) {
                return;
            }
            else {
                let ItemValue = Number(items.innerHTML);
                if (ItemValue > 31) {
                    iterations++;

                    if (ItemValue == value) {
                        serchedItem++;
                        return;
                    }
                }
                else {
                    if (ItemValue == value) {
                        AussenCost = 0;
                        let a = Number(localStorage.sInnen);
                        let b = Number(localStorage.sAussen);
                        let c = Number(localStorage.options);

                        let sum = parseFloat(localStorage.getItem("cost").replace(',', '.')) + a + b + c;
                        AllPrice.innerHTML = String(sum);
                        console.log(cost.innerHTML);
                        serchedItem++;
                        return;
                    }
                }

            }

        });

        AussenCost = 0;

        for (let i = 0; i < iterations; i++) {
            AussenCost = AussenCost + 5;
        }


        localStorage.sAussen = AussenCost;
        let a = Number(localStorage.sInnen);
        let b = Number(localStorage.sAussen);
        let c = Number(localStorage.options);

        let sum = parseFloat(localStorage.getItem("cost").replace(',', '.')) + a + b + c;
        AllPrice.innerHTML = String(sum);

        iterations = 0;
        serchedItem = 0;

    }
    function selectParamInternIsGround(value, idBlock) 
    {
        let Iiterations = 0;
        let IserchedItem = 0;

        let BlockTur = document.getElementById(idBlock);

        let Intern = BlockTur.querySelector("#Intern");
        let Iitems = Intern.querySelectorAll("#OptionI");

        Iitems.forEach(function (items) {
            if (IserchedItem == 1) {
                return;
            }
            else {
                let ItemValue = Number(items.innerHTML);

                if (ItemValue > 31) {
                    Iiterations++;

                    if (ItemValue == value) {
                        IserchedItem++;
                        return;
                    }
                }
                else {
                    if (ItemValue == value) {
                        InternCost = 0;
                        let a = Number(localStorage.sInnen);
                        let b = Number(localStorage.sAussen);
                        let c = Number(localStorage.options);

                        let sum = parseFloat(localStorage.getItem("cost").replace(',', '.')) + a + b + c;
                        AllPrice.innerHTML = String(sum);
                        console.log(cost.innerHTML);
                        IserchedItem++;
                        return;
                    }
                }

            }

        });

        InternCost = 0;
        for (let i = 0; i < Iiterations; i++) {
            InternCost = InternCost + 5;
        }
        localStorage.sInnen = InternCost;

        let a = Number(localStorage.sInnen);
        let b = Number(localStorage.sAussen);
        let c = Number(localStorage.options);

        let sum = parseFloat(localStorage.getItem("cost").replace(',', '.')) + a + b + c;
        AllPrice.innerHTML = String(sum);
        Iiterations = 0;
        IserchedItem = 0;
    }
    function selectParamAussen(value, idBlock) 
    {
        let iterations = 0;
        let serchedItem = 0;

        let BlockTur = document.getElementById(idBlock);
        let Aussen = BlockTur.querySelector("#Aussen");
        let Aitems = Aussen.querySelectorAll("#OptionA");

        let Intern = BlockTur.querySelector("#Intern");
        let Iitems = Intern.querySelectorAll("#OptionI");

        Aitems.forEach(function (items) {
            if (serchedItem == 1) {
                return;
            }
            else {
                let ItemValue = Number(items.innerHTML);
                if (ItemValue > 31) {
                    iterations++;

                    if (ItemValue == value) {
                        serchedItem++;
                        return;
                    }
                }
                else {
                    if (ItemValue == value) {
                        AussenCost = 0;
                        let a = Number(localStorage.sInnen);
                        let b = Number(localStorage.sAussen);
                        let c = Number(localStorage.options);

                        let sum = parseFloat(localStorage.getItem("cost").replace(',', '.')) + a + b + c;
                        AllPrice.innerHTML = String(sum);
                        console.log(cost.innerHTML);
                        serchedItem++;
                        return;
                    }
                }

            }

        });



        let size = Iitems.length - iterations;

        let slicedArray = Array.prototype.slice.call(Iitems, 0, size);

        for (let i = 0; i < Iitems.length; i++) {
            Iitems[i].style.display = "none";
        }

        for (let i = 0; i < slicedArray.length; i++) {
            Iitems[i].style.display = "block";
        }
        AussenCost = 0;

        for (let i = 0; i < iterations; i++) {
            AussenCost = AussenCost + 5;
        }


        localStorage.sAussen = AussenCost;
        let a = Number(localStorage.sInnen);
        let b = Number(localStorage.sAussen);
        let c = Number(localStorage.options);

        let sum = parseFloat(localStorage.getItem("cost").replace(',', '.')) + a + b + c;
        AllPrice.innerHTML = String(sum);

        iterations = 0;
        serchedItem = 0;


    }
    function selectParamIntern(value, idBlock) 
    {
        let Iiterations = 0;
        let IserchedItem = 0;

        let BlockTur = document.getElementById(idBlock);

        let Intern = BlockTur.querySelector("#Intern");

        let Iitems = Intern.querySelectorAll("#OptionI");

        Iitems.forEach(function (items) {
            if (IserchedItem == 1) {
                return;
            }
            else {
                let ItemValue = Number(items.innerHTML);

                if (ItemValue > 31) {
                    Iiterations++;

                    if (ItemValue == value) {
                        IserchedItem++;
                        return;
                    }
                }
                else {
                    if (ItemValue == value) {
                        InternCost = 0;
                        let a = Number(localStorage.sInnen);
                        let b = Number(localStorage.sAussen);
                        let c = Number(localStorage.options);

                        let sum = parseFloat(localStorage.getItem("cost").replace(',', '.')) + a + b + c;
                        AllPrice.innerHTML = String(sum);
                        console.log(cost.innerHTML);
                        IserchedItem++;
                        return;
                    }
                }

            }

        });
        InternCost = 0;
        for (let i = 0; i < Iiterations; i++) {
            InternCost = InternCost + 5;
        }
        localStorage.sInnen = InternCost;

        let a = Number(localStorage.sInnen);
        let b = Number(localStorage.sAussen);
        let c = Number(localStorage.options);

        let sum = parseFloat(localStorage.getItem("cost").replace(',', '.')) + a + b + c;
        AllPrice.innerHTML = String(sum);
        Iiterations = 0;
        IserchedItem = 0;
    }
    function selectParamOptions(event, count,idBlock) {
        // var selectedOptionId = event.target.options[event.target.selectedIndex].id;
        // OptionCost = OptionPrice[selectedOptionId];
        // localStorage.options = OptionCost;
        // let a = Number(localStorage.sInnen);
        // let b = Number(localStorage.sAussen);
        // let c = Number(localStorage.options);

        // let sum = parseFloat(localStorage.getItem("cost").replace(',', '.')) + a + b + c;
        // AllPrice.innerHTML = String(sum);

        // OptionCost = 0;
        // console.log(OptionPrice[selectedOptionId]);
    }

</script>
