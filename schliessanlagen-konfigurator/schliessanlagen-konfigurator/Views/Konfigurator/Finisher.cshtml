@model schliessanlagen_konfigurator.Models.Orders;
@using Microsoft.AspNetCore.Http;

@{
    ViewData["Title"] = $"Finisher/{Model.userKey}";

    int z = 0;
    int countFalse = 0;
    int d = 0;
}
@using (Html.BeginForm("SaveUserOrders", "Konfigurator", FormMethod.Post))
{ 
        
    @Html.HiddenFor(m => m.userKey)

    <input type="hidden" name="user" value="@Model.userKey" />
    <div id="FinisherPage">
  

    <h1>Schlüssel konfigurieren</h1>
    <p>
        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur
        ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim
        justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt.
    </p>
    <div>

        @foreach (var item in ViewBag.Order)
        {
            z++;
            <div id="finisherItem">
                <div id="ItemCounterOrders">

                    <div id="counterKey">
                            <input onclick="minus(@z)" type="button" value="-" class="btn btn-success" />
                            <input type="text" style="border: none;max-width: 30px;" id="countKey-@z" readonly name="countKey" value="@item.CountKey" />
                            <input onclick="plus(@z)" type="button" value="+" class="btn btn-success" />
                    </div>

                </div>
                <div id="nameItem">
                        <input style="border: none;" name="key" value="@item.NameKey" />
                        <input style="border: none;" type="hidden" name="FurKey" value="@item.ForNameKey" /> 
                </div>

                <div id="numerKey">
                    <h3>Schlüssel Nr.@z </h3>
                </div>
                <div id="OpenValue">

                        @if (ViewBag.DorName.Count > ViewBag.CountKey)
                        {
                            @for (int i = 0; i < ViewBag.DorName.Count; i++)
                            {
                                @if (ViewBag.KeyValue[countFalse] == true)
                                {
                                    <input type="hidden" name="keyIsOpen" value="true" />
                                    <input name="TurName" style="border: none;max-width: 100px;" readonly type="text" id="@z-DorCount-@i" value="@ViewBag.DorName[i]" />
                                }
                                else
                                {
                                    <input type="hidden" name="keyIsOpen" value="false" />
                                }
                                countFalse++;
                            }
                            
                        }
                        else
                        {
                            @for (int i = 0; i < ViewBag.CountKey; i++)
                            {
                                @if (ViewBag.KeyValue[countFalse] == true)
                                {
                                    <input type="hidden" name="keyIsOpen" value="true" />
                                    <input name="TurName" style="border: none;max-width: 100px;" readonly type="text" id="@z-DorCount-@i" value="@ViewBag.DorName[i]" />
                                }
                                else
                                {
                                    <input type="hidden" name="keyIsOpen" value="false" />
                                }
                                countFalse++;
                            }
                        }
                   
                </div>
            </div>
        }
        <div>
        </div>
        <div id="FinisherAnderes">
                <a class="btn btn-danger" href="@Url.Action("ChangedKonfigPlan","Konfigurator",new{ userKey = @Model.userKey})">SCHLIESSPLAN BEARBEITEN</a>
        </div>
        <h1>Türen konfigurieren</h1>
        <p>
            Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur
            ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim
            justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt.
        </p>
    </div>
    <div>
        @if (ViewBag.Dopelzylinder != null)
        {
            int elemNum = 0;
         
            foreach (var item in ViewBag.Dopelzylinder)
            {
                    <input value="@item.Id" type="hidden" name="DopelItem" />
                    
                    <div id="ExelItem-@d" class="ExelItem">
                    <div id="productImage">
                        <img decoding="async" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="400px" height="400px" />
                    </div>
                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">
                            <div>
                                    <input style="border: none;" readonly type="text" name="DopelName" value="@item.Name" />
                                    <input style="border: none;" type="hidden" name="NameSystem" value="@item.NameSystem" />
                            </div>
                        </div>
                        <div>
                            <select class="form-select">
                                <option>Doppelzylinder</option>
                            </select>
                        </div>
                        <div id="product_desciptions">
                            <h5>Zylinder Länge</h5>
                            <h5>Vifile Tür</h5>
                        </div>

                        <div id="Size-@d" class="SizeProduct">  
                            <div>
                                    <select class="form-select" name="DoppelAussen" id="Aussen" onchange="selectParamAussen(event.target.value,@d,@ViewBag.DAussen[elemNum])">
                                    <option style="display:none" selected>@ViewBag.DAussen[elemNum]</option>
                                    <option>Außenlänge (A)</option>
                                    @for (int i = 0; i < ViewBag.Dopelzylinderaussen.Count; i++)
                                    {
                                        <option id="OptionA">@ViewBag.Dopelzylinderaussen[i]</option>
                                    }
                                </select>
                                    <input type="hidden" id="Aussen-@d" />
                            </div>
                            <div>
                                    <select class="form-select" name="DoppelIntern" id="Intern" onchange="selectParamIntern(event.target.value,@d,@ViewBag.DInter[elemNum])">
                                    <option style="display:none" selected>@ViewBag.DInter[elemNum]</option>
                                    <option>Innenlänge (B)</option>
                                    @for (int i = 0; i < ViewBag.DopelzylinderIntern.Count; i++)
                                    {
                                        <option id="OptionI">@ViewBag.DopelzylinderIntern[i]</option>
                                    }
                                </select>
                                    <input type="hidden" id="Innen-@d" />
                            </div>
                            <div style="gap: 10px;display: flex;margin-left: 50px;">
                                    <button type="button"  onclick="CylinderMinus(@d,@item.Cost)" class="btn btn-success">-</button>
                                    <input style="border: none;max-width: 30px;" id="countSchlusse-@d" type="text" readonly name="TurCounter" value="@ViewBag.CounterTur[@elemNum]" />
                                    <button type="button" onclick="CylinderPlus(@d,@item.Cost)" class="btn btn-success">+</button>
                            </div>
                        </div>


                        <div>
                            <h3>Weitere Optionen</h3>
                            <div>
                                @{
                                    int valueCount = 0;
                                }
                                @if (ViewBag.countOptionsQuery > 0)
                                {
                                    @for (int i = 0; i < ViewBag.optionsName.Count; i++)
                                    {
                                           <input class="form-control" id="OptionName" style="margin-top: 5px;" readonly type="text" value="@ViewBag.optionsName[i]" />

                                            <select style="margin-bottom: 10px;" name="DoppelOption" class="form-select" id="@d-Options-@i" onchange="OptionsSelect(@d,'Doppel',event.target.id,event.target.value,@valueCount,'@ViewBag.optionsName[i]',@i,@d)">

                                           @for (int j = 0; j < ViewBag.countOptionsList[i]; j++)
                                           {
                                             <option id="@valueCount">@ViewBag.optionsValue[valueCount]</option>
                                            
                                                valueCount++;
                                           }

                                        </select>
                                            <input type="hidden" id="d-@d + @i" />
                                    }
                                    
                                }


                            </div>
                        </div>
                            @if (@ViewBag.DAussen[elemNum] < 80 && @ViewBag.DInter[elemNum] < 80)
                            {
                                <h6 id="WaitTime">Lieferzeit: 5 - 7 Werktage</h6>
                            }
                            else
                            {
                                <h6 id="WaitTime">Lieferzeit: ca 20 Werktage</h6>
                            }
                    </div>
                </div>
                elemNum++;
                d++;
            }
        }
        @if (ViewBag.KnayfZelinder != null)
        {
            int elemNum = 0;
            foreach (var item in ViewBag.KnayfZelinder)
            {
               <input type="hidden" name="Knayf" value="@item.Id" />
                    <div id="ExelItem-@d" class="ExelItem">
                    <div id="productImage">
                        <img decoding="async" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="400px" height="400px" />
                    </div>
                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">

                            <div>
                                    <input style="border: none;" readonly type="text" name="KnayfName" value="@item.Name" />
                                    <input style="border: none;" type="hidden" name="NameSystem" value="@item.NameSystem" />
                            </div>

                        </div>
                        <div>
                            <select class="form-select">
                                <option>KnayfZylinder</option>
                            </select>
                        </div>
                        <div id="product_desciptions">
                            <h5>Zylinder Länge</h5>
                            <h5>Vifile Tür</h5>
                        </div>

                            <div id="Size-@d" class="SizeProduct">
                            <div>
                                    <select class="form-select" name="KnayfAussen" id="Aussen" onchange="selectParamAussen(event.target.value,@d,@ViewBag.KAussen[elemNum])">
                                    <option style="display:none" selected>@ViewBag.KAussen[elemNum]</option>
                                    <option>Außenlänge (A)</option>
                                    @for (int i = 0; i < ViewBag.KnayfZelinderAussen.Count; i++)
                                    {
                                        <option id="OptionA">@ViewBag.KnayfZelinderAussen[i]</option>
                                    }
                                </select>
                                    <input type="hidden" id="Aussen-@d" />
                            </div>
                            <div>
                                    <select class="form-select" name="KnayfIntern" id="Intern" onchange="selectParamIntern(event.target.value,@d,@ViewBag.KInter[elemNum])">
                                    <option style="display:none" selected>@ViewBag.KInter[elemNum]</option>
                                    <option>Innenlänge (B)</option>
                                    @for (int i = 0; i < ViewBag.KnayfZelinderIntern.Count; i++)
                                    {
                                            <option id="OptionI">@ViewBag.KnayfZelinderIntern[i]</option>
                                    }
                                </select>
                                 <input type="hidden" id="Innen-@d" />
                            </div>
                            <div style="gap: 10px;display: flex;margin-left: 50px;">
                                    <button type="button" onclick="CylinderMinus(@d,@item.Cost)" class="btn btn-success">-</button>
                                    <input style="border: none;max-width: 30px;" id="countSchlusse-@d" value="@ViewBag.CounterTurKnayf[@elemNum]" name="TurCounter" />
                                    <button type="button" onclick="CylinderPlus(@d,@item.Cost)" class="btn btn-success">+</button>
                            </div>
                        </div>        

                        <div>
                            <h3>Weitere Optionen</h3>
                            <div>
                                @{
                                    int valueCount = 0;
                                }
                                @if (ViewBag.countOptionsQueryKnayf > 0)
                                {
                                    @for (int i = 0; i < ViewBag.optionsNameKnayf.Count; i++)
                                    {
                                            <input class="form-control" id="OptionName" style="margin-top: 5px;" readonly type="text" value="@ViewBag.optionsNameKnayf[i]" />

                                            <select style="margin-bottom: 10px;" name="KnayfOption" class="form-select" id="@d-Options-@i" onchange="OptionsSelect(@d,'Knayf',event.target.id,event.target.value,@valueCount,'@ViewBag.optionsNameKnayf[i]',@i,@d)">

                                            @for (int j = 0; j < ViewBag.countOptionsListKnayf[i]; j++)
                                            {
                                                <option id="@valueCount">@ViewBag.optionsValueKnayf[valueCount]</option>
                                                
                                                valueCount++;
                                            }

                                        </select>
                                            <input type="hidden" id="d-@d + @i" />
                                    }
                                } 

                            </div>
                        </div>
                            @if (@ViewBag.KAussen[elemNum] < 80 && @ViewBag.KInter[elemNum] < 80)
                            {
                                <h6 id="WaitTime">Lieferzeit: 5 - 7 Werktage</h6>
                            }
                            else
                            {
                                <h6 id="WaitTime">Lieferzeit: ca 20 Werktage</h6>
                            }
                    </div>
                </div>
                d++;
                elemNum++;
            }
           
        }
        @if (ViewBag.Halb != null)
        {
            int elemNum = 0;
           
            foreach (var item in ViewBag.Halb)
            {
                    <input type="hidden" name="Halb" value="@item.Id" />
                    <div id="ExelItem-@d" class="ExelItem">
                    <div id="productImage">
                        <img decoding="async" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="400px" height="400px" />
                    </div>
                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">

                            <div>
                                    <input style="border: none;" readonly type="text" name="HalbName" value="@item.Name" />
                                    <input style="border: none;" type="hidden" name="NameSystem" value="@item.NameSystem" />
                            </div>

                        </div>
                        <div>
                            <select class="form-select">
                                <option>Halbzylinder</option>
                            </select>
                        </div>
                        <div id="product_desciptions">
                            <h5>Zylinder Länge</h5>
                            <h5>Vifile Tür</h5>
                        </div>
                            <div id="Size-@d" class="SizeProduct">
                               
                            <div>
                                    <select name="HalbAussen" id="Aussen" class="form-select" onchange="selectParamAussen(event.target.value,@d,@ViewBag.HalbOrderAussen[elemNum])">
                                    <option style="display:none" selected>@ViewBag.HalbOrderAussen[elemNum]</option>
                                    <option>Außenlänge (A)</option>
                                    @for (int i = 0; i < ViewBag.AussenHalb.Count; i++)
                                    {
                                       <option id="OptionA">@ViewBag.AussenHalb[i]</option>
                                    }
                                </select>
                                    <input type="hidden" id="Aussen-@d" />
                            </div>
                            <div style="gap: 10px;display: flex;margin-left: 50px;">
                                    <button type="button" onclick="CylinderMinus(@d,@item.Cost)" class="btn btn-success">-</button>
                                    <input style="border: none;max-width: 30px;" value="@ViewBag.CounterTurHalb[@elemNum]" name="TurCounter" id="countSchlusse-@d" />
                                    <button type="button" onclick="CylinderPlus(@d,@item.Cost)" class="btn btn-success">+</button>
                            </div>
                        </div>
                        <div>
                            <h3>Weitere Optionen</h3>
                            <div>
                                @{
                                    int valueCount = 0;
                                }
                               @if (ViewBag.countOptionsQueryHalb > 0)
                                {
                                    @for (int i = 0; i < ViewBag.HalbOptionsName.Count; i++)
                                    {
                                            <input class="form-control" id="OptionName" style="margin-top: 5px;" readonly type="text" value="@ViewBag.HalbOptionsName[i]" />

                                            <select class="form-select" name="HalbOption" id="@d-Options-@i" style="margin-bottom: 10px;" onchange="OptionsSelect(@d,'Halb',event.target.id,event.target.value,@valueCount,'@ViewBag.HalbOptionsName[i]',@i,@d)" >

                                            @for (int j = 0; j < ViewBag.HalbOptionsValueCount[i]; j++)
                                            {
                                                
                                                 <option id="@valueCount">@ViewBag.HalbOptionsValue[valueCount]</option>
                                                
                                                valueCount++;
                                            }
                                        </select>
                                            <input type="hidden" id="d-@d + @i" />
                                    }
                                } 
                            </div>
                        </div>
                            @if (@ViewBag.HalbOrderAussen[elemNum] < 75)
                            {
                                <h6 id="WaitTime" >Lieferzeit: 5 - 7 Werktage</h6>
                            }
                            else
                            {
                                <h6 id="WaitTime" >Lieferzeit: ca 20 Werktage</h6>
                            }
                    </div>
                       
                </div>
                elemNum++;
                d++;
            }
        }
        @if (ViewBag.HelbZ != null)
        {
            int elemNum = 0;
            foreach (var item in ViewBag.HelbZ)
            {
                    <input type="hidden" name="Helb" value="@item.Id" />
                    <div id="ExelItem-@d" class="ExelItem">
                    <div id="productImage">
                        <img decoding="async" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="400px" height="400px" />
                    </div>
                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">

                            <div>
                                    <input style="border: none;" readonly type="text" name="HelbName" value="@item.Name" />
                                    <input style="border: none;" type="hidden" name="NameSystem" value="@item.NameSystem" />
                            </div>

                        </div>
                        <div>
                            <select class="form-select">
                                <option>Hebelzylinder</option>
                            </select>
                        </div>
                        <div id="product_desciptions">
                            <h5>Zylinder Länge</h5>
                            <h5>Vifile Tür</h5>
                        </div>
                            <div id="@d" class="SizeProduct">
                            <div style="gap: 10px;display: flex;margin-left: 50px;">
                                    <button onclick="CylinderMinus(@d,@item.Cost)" type="button" class="btn btn-success">-</button>
                                    <input style="border: none;max-width: 30px;" name="TurCounter" value="@ViewBag.CounterTurHebel[@elemNum]" id="countSchlusse-@d" />
                                    <button onclick="CylinderPlus(@d,@item.Cost)" type="button" class="btn btn-success">+</button>
                            </div>
                        </div>
                        <div>
                            <h3>Weitere Optionen</h3>
                            <div>
                                @{
                                    int valueCount = 0;
                                }

                                @if (ViewBag.CountOptionsHebel > 0)
                                {
                                    @for (int i = 0; i < ViewBag.OptionHebelName.Count; i++)
                                    {
                                            <input style="margin-top: 5px;" id="OptionName" class="form-control" readonly type="text" value="@ViewBag.OptionHebelName[i]" />

                                            <select class="form-select" name="HebelOption" id="@d-Options-@i" style="margin-bottom: 10px;" onchange="OptionsSelect(@d,'Helb',event.target.id,event.target.value,@valueCount,'@ViewBag.OptionHebelName[i]',@i,@d)">

                                            @for (int j = 0; j < ViewBag.CountValueHebel[i]; j++)
                                            {
                                               
                                               <option id="@valueCount">@ViewBag.ValueHebel[valueCount]</option>
                                               
                                                valueCount++;
                                            }
                                        </select>
                                            <input type="hidden" id="d-@d + @i" />
                                    }
                                } 
                            </div>
                        </div>
                    </div>

                </div>
                elemNum++;
                    d++;
                }
        }
        @if (ViewBag.Vorhanschlos != null)
        {
            int elemNum = 0;
            foreach (var item in ViewBag.Vorhanschlos)
            {
                    <input type="hidden" name="Vorhan" value="@item.Id" />
                    <div id="ExelItem-@d" class="ExelItem">
                    <div id="productImage">
                        <img decoding="async" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="400px" height="400px" />
                    </div>
                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">

                            <div>
                                    <input style="border: none;" readonly type="text" name="VorhanName" value="@item.Name" />
                                    <input style="border: none;" type="hidden" name="NameSystem" value="@item.NameSystem" />
                            </div>

                        </div>
                        <div>
                            <select class="form-select">
                                <option>Vorhangschloss</option>
                            </select>
                        </div>
                        <div id="product_desciptions">
                            <h5>Zylinder Länge</h5>
                            <h5>Vifile Tür</h5>
                        </div>
                            <div id="Size-@d" class="SizeProduct">
                            <div>
                                    <select class="form-select" name="VorhanAussen" id="Aussen" onchange="VorhanSchlus(event.target.value,@d,@ViewBag.VorhanSize[elemNum])">
                                    <option style="display:none" selected>@ViewBag.VorhanOrderAussen[elemNum]</option>
                                    <option selected>Außenlänge (A)</option>
                                    @for (int i = 0; i < ViewBag.VorhanSize.Count; i++)
                                    {
                                      <option id="OptionA">@ViewBag.VorhanSize[i]</option>
                                    }
                                </select>
                                    <input type="hidden" id="Aussen-@d" />
                            </div>
                            <div style="gap: 10px;display: flex;margin-left: 50px;">
                                    <button type="button" onclick="CylinderMinus(@d,@item.Cost)" class="btn btn-success">-</button>
                                    <input name="TurCounter" style="border: none;max-width: 30px;" id="countSchlusse-@d" value="@ViewBag.CounterTurVorhan[@elemNum]" />
                                    <button type="button" onclick="CylinderPlus(@d,@item.Cost)" class="btn btn-success">+</button>
                            </div>
                        </div>
                        <div>
                            <h3>Weitere Optionen</h3>
                            <div>
                                @{
                                    int valueCount = 0;
                                }

                                @if (ViewBag.VorhanschlossCount > 0)
                                {

                                    @for (int i = 0; i < ViewBag.VorhanschlossOptionCount; i++)
                                    {

                                            <input type="text" style="margin-top: 5px;" id="OptionName" class="form-control" readonly value="@ViewBag.VorhanschlossOptionName[i]" />

                                            <select style="margin-bottom: 10px;" name="VorhnaOption" class="form-select" id="@d-Options-@i" onchange="OptionsSelect(@d,'Vorhan',event.target.id,event.target.value,@valueCount,'@ViewBag.VorhanschlossOptionName[i]',@i,@d)">

                                            @for (int j = 0; j < ViewBag.VorhanOptionCount[i]; j++)
                                            {
          
                                              <option id="@valueCount">@ViewBag.VorhanValue[valueCount]</option>

                                                valueCount++;
                                            }

                                        </select>
                                            <input type="hidden" id="d-@d + @i" />
                                    }
                                }
                            </div> 
                        </div>
                            @if (@ViewBag.CounterTurVorhan[@elemNum] < 45)
                            {
                                <h6 id="WaitTime">Lieferzeit: 5 - 7 Werktage</h6>
                            }
                            else
                            {
                                <h6 id="WaitTime">Lieferzeit: ca 20 Werktage</h6>
                            }
                    </div>
                </div>
                elemNum++;
                    d++;
                }
        }
        @if (ViewBag.Aussenzylinder != null)
        {
            int elemNum = 0;
            foreach (var item in ViewBag.Aussenzylinder)
            {
                    <input type="hidden" name="Aussen"  value="@item.Id"/>
                    <div id="ExelItem-@d" class="ExelItem">
                    <div id="productImage">
                        <img decoding="async" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="400px" height="400px" />
                    </div>
                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">

                            <div>
                                    <input style="border: none;" readonly type="text" name="AussenName" value="@item.Name" />
                                    <input style="border: none;" type="hidden" name="NameSystem" value="@item.NameSystem" />
                            </div>

                        </div>
                        <div>
                            <select class="form-select">
                                <option>Aussenzylinder_Rundzylinder</option>
                            </select>
                        </div>
                        <div >
                            <h5>Zylinder Länge</h5>
                            <h5>Vifile Tür</h5>
                        </div>
                            <div id="@d" class="SizeProduct">
                                <button type="button" onclick="CylinderMinus(@d,@item.Cost)" class="btn btn-success">-</button>
                                <input style="border: none;max-width: 30px;" name="TurCounter" value="@ViewBag.CounterTurAussen[@elemNum]" id="countSchlusse-@d" />
                                <button type="button" onclick="CylinderPlus(@d,@item.Cost)" class="btn btn-success">+</button>
                        </div>
                        <div>
                            <h3>Weitere Optionen</h3>
                            <div>
                                @{
                                    int valueCount = 0;
                                }
                                @if (ViewBag.AussenCountOption > 0)
                                {
                                    @for (int i = 0; i < ViewBag.AussenName.Count; i++)
                                    {
                                            <input class="form-control" id="OptionName" style="margin-top: 5px;" readonly type="text" value="@ViewBag.AussenName[i]" />

                                            <select style="margin-bottom: 10px;" name="AussenOption" class="form-select" id="@d-Options-@i" onchange="OptionsSelect(@d,'Aussen',event.target.id,event.target.value,@valueCount,'@ViewBag.AussenName[i]',@i,@d)">

                                            @for (int j = 0; j < ViewBag.AussenValue[i]; j++)
                                            {
                                              <option id="@valueCount">@ViewBag.AussenValue[valueCount]</option>

                                                valueCount++;
                                            }
                                        </select>
                                            <input type="hidden" id="d-@d + @i" />
                                    }
                                } 
                            </div>
                        </div>
                    </div>
                </div>
                elemNum++;
                    d++;
                }
        }
        <div id="FinisherAnderes">
            <input type="button"  onclick="goBack()" class="btn btn-danger" value="ANDERES SYSTEM WÄHLEN" />
        </div>
        <div id="orderCost">
                <input name="cost" readonly type="text" value="@ViewBag.Cost" id="cost" />
                <input name="Sum" id="costed" type="hidden" style="border:none;font-size:24px" value="@ViewBag.Cost" />
        </div>
       
        <div id="buttonActionFinishBlock">
            <div id="FinisherLeft">
                <button id="chekProduct" type="button" class="btn btn-dark"> <a href="@Url.Action("System_Auswählen", "Konfigurator")">ZURÜCK</a></button>
            </div>
            <div id="FinisherRight">
                    @if (User.IsInRole("client") || User.IsInRole("admin"))
                    {

                        <input id="chekProduct" type="submit" value="IN DEN WARENKORB" class="btn btn-danger" />
                    }
                    else
                    {
                        <a class="btn btn-danger" asp-area="Identity" asp-page="/Account/Register">IN DEN WARENKORB</a>
                    }
            </div>
        </div>
    </div>
</div>
} 
<script>

    let keyPrice = @Html.Raw(ViewBag.KeyCost);

    let DoppelOptions = @Html.Raw(ViewBag.DoppelOptionsNameJson) || null;
    let DoppelOptionsValue = @Html.Raw(ViewBag.DoppelOptionsValue) || null;
    let DoppelCostValue = @Html.Raw(ViewBag.optionsPrise) || null;

    let knayfOptionName = @Html.Raw(ViewBag.OptionsNameKnayfJson) || null;
    let KnayfOptionPrice = @Html.Raw(ViewBag.optionsPriseKnayf) || null;
    let KnayfOptionsValue = @Html.Raw(ViewBag.optionsValueKnayfJson) || null;

    let HalbOptionsName = @Html.Raw(ViewBag.HalbOptionsNameJson) || null;
    let HalbOptionsValue = @Html.Raw(ViewBag.HalbOptionsValueJson) || null;
    let HalbOptionsValueCost = @Html.Raw(ViewBag.HalbOptionsValueCostJson) || null;

    let HebelOptionsName = @Html.Raw(ViewBag.OptionsHebelNameJson) || null;
    let HebelOptionsValue = @Html.Raw(ViewBag.HebelValueJson) || null;
    let HebelOptionsCost = @Html.Raw(ViewBag.HebelValueCostJson) || null; 

    let VorhanSchloss = @Html.Raw(ViewBag.VorhanschlossOptionNameJson) || null;
    let VorhanSchlossValue = @Html.Raw(ViewBag.VorhanValueJson) || null;
    let VorhanSchlossValueCost = @Html.Raw(ViewBag.VorhanValueCostJson) || null;

    let AussenRundOptionsName = @Html.Raw(ViewBag.AussenNameJson) || null;
    let AussenRundOptionsValue = @Html.Raw(ViewBag.AussenValueJson) || null;
    let AussenRundOptionsCostValue = @Html.Raw(ViewBag.AussenValueCostJson) || null;

    let AllPrice = document.getElementById("cost");

    let pris = document.getElementById("costed");
    
    pris.value = AllPrice.innerHTML;
   
    let NoOptionCost = @Html.Raw(@ViewBag.CostProducted);
    let ParamSum = parseFloat(AllPrice.innerHTML.replace(',', '.') - NoOptionCost);
    
    localStorage.setItem("cost", ParamSum);

    localStorage.keyCost = 0;

    let hasFreilauffunktion = false;

    let hasNotUndGefahrenfunktion = false;

    function OptionsSelect(idBlock, TypeSylinder, id, optionsValue, elemNum, OptionsName, N,count) 
    {
        let countSchluss = document.getElementById("countSchlusse-" + count);

        let BlockTur = document.getElementById("ExelItem-" + idBlock);

        let QueryNameOptions = BlockTur.querySelectorAll("#OptionName");

        let Selector = document.getElementById(id);

        let selectedOption = Selector.options[Selector.selectedIndex].id;

        QueryNameOptions.forEach((item)=>
        {
            if (item.defaultValue === OptionsName ) 
            {   
                if (optionsValue != "Nein") 
                {
                    item.value = '\u2713' + OptionsName;
                    item.style.color = "green";
                    if (item.value === '\u2713' + "Freilauffunktion") 
                    {
                        hasFreilauffunktion = true;

                        if (item.value === '\u2713' + "Freilauffunktion" && hasFreilauffunktion === true && hasNotUndGefahrenfunktion === true) 
                        {
                            for (let i = 0;i <QueryNameOptions.length; i++) 
                            {
                                if (QueryNameOptions[i].value === '\u2713' + "Not- und Gefahrenfunktion") 
                                {
                                    let OptionOldCheker = document.getElementById(`d-${idBlock} + ${i}`);
                                    AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                                    QueryNameOptions[i].value = QueryNameOptions[i].defaultValue;
                                    QueryNameOptions[i].style.color = "black";
                                    var chekedSelect = document.getElementById(idBlock + "-Options-" + i);
                                    chekedSelect.value = "Nein";
                                    hasFreilauffunktion == false;
                                }
                                
                            }
                        }
                    }
                    else if (item.value === '\u2713' + "Not- und Gefahrenfunktion") 
                    {
                        hasNotUndGefahrenfunktion = true;
                        
                        if (item.value === '\u2713' + "Not- und Gefahrenfunktion" && hasFreilauffunktion === true && hasNotUndGefahrenfunktion === true) 
                        {
                            for (let i = 0; i < QueryNameOptions.length; i++) 
                            {
                                if (QueryNameOptions[i].value === '\u2713' + "Freilauffunktion") 
                                {
                                    let OptionOldCheker = document.getElementById(`d-${idBlock} + ${i}`);
                                    AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                                    QueryNameOptions[i].value = QueryNameOptions[i].defaultValue;
                                    QueryNameOptions[i].style.color = "black";
                                    var chekedSelect = document.getElementById(idBlock + "-Options-" + i);
                                    chekedSelect.value = "Nein";
                                    hasNotUndGefahrenfunktion == false;
                                }
                            }                            
                            
                        }
                    }

                    if (TypeSylinder === "Doppel") 
                    {
                            let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);
                            AllPrice.value = parseFloat(AllPrice.value) + (DoppelCostValue[selectedOption] * Number(countSchluss.value));
                            OptionOldCheker.value = DoppelCostValue[selectedOption];
                    }
                    if (TypeSylinder === "Knayf") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);
                        AllPrice.value = parseFloat(AllPrice.value) + (KnayfOptionPrice[selectedOption] * Number(countSchluss.value));
                        OptionOldCheker.value = KnayfOptionPrice[selectedOption];
                    }
                    if (TypeSylinder === "Halb")
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);
                        AllPrice.value = parseFloat(AllPrice.value) + (HalbOptionsValueCost[selectedOption] * Number(countSchluss.value));
                        OptionOldCheker.value = HalbOptionsValueCost[selectedOption];
                    }
                    if (TypeSylinder === "Helb") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);
                        AllPrice.value = parseFloat(AllPrice.value) + (HebelOptionsCost[selectedOption] * Number(countSchluss.value));
                        OptionOldCheker.value = HebelOptionsCost[selectedOption];
                    }
                    if (TypeSylinder === "Vorhan") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);
                        AllPrice.value = parseFloat(AllPrice.value) + (VorhanSchlossValueCost[selectedOption] * Number(countSchluss.value));
                        OptionOldCheker.value = VorhanSchlossValueCost[selectedOption];
                    }
                    if (TypeSylinder === "Aussen") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);
                        AllPrice.value = parseFloat(AllPrice.value) + (AussenRundOptionsCostValue[selectedOption] * Number(countSchluss.value));
                        OptionOldCheker.value = AussenRundOptionsCostValue[selectedOption];
                    }
                }
                else 
                {
                    if (TypeSylinder === "Doppel") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);
                        AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                        item.value = OptionsName;
                        item.style.color = "black";
                    }
                    if (TypeSylinder === "Knayf") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);
                        AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                        item.value = OptionsName;
                        item.style.color = "black";
                    }
                    if (TypeSylinder === "Halb") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);
                        AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                        item.value = OptionsName;
                        item.style.color = "black";
                    }
                    if (TypeSylinder === "Helb") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);
                        AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                        item.value = OptionsName;
                        item.style.color = "black";
                    }
                    if (TypeSylinder === "Vorhan") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);
                        AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                        item.value = OptionsName;
                        item.style.color = "black";
                    }
                    if (TypeSylinder === "Aussen") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);
                        AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                        item.value = OptionsName;
                        item.style.color = "black";
                    }
                }
            }
        });
       

    }

    function plus(n) 
    {
        let counter = document.getElementById("countKey-" + n);
        let value = Number(counter.value);
        value++;
        counter.value = value;
        AllPrice.value = parseFloat(AllPrice.value) + keyPrice;
    }
    function minus(n) 
    {
        let counter = document.getElementById("countKey-" + n);
        let value = Number(counter.value);
        value--;
        counter.value = value;
        AllPrice.value = parseFloat(AllPrice.value) - keyPrice;
    }
    function CylinderPlus(n, cost) 
    {
        let counter = document.getElementById("countSchlusse-" + n);
        let value = Number(counter.value);
        let oldConter = Number(counter.value);

            value++;
            counter.value = value;
            AllPrice.value = parseFloat(AllPrice.value) +  cost;
    }
    function CylinderMinus(n, cost) 
    {
        let counter = document.getElementById("countSchlusse-" + n);
        let value = Number(counter.value);
        let oldConter = Number(counter.value);
        value--;
        counter.value = value;

        AllPrice.value = parseFloat(AllPrice.value) - cost;
    }


    let iterations = 0;
    function VorhanSchlus(value, idBlock, oldSize) 
    {
        let serchedItem = 0;

        let VorhanSizeCost = @Html.Raw(ViewBag.VorhanschlosSizeCostedJson)||null;
        let VorhanSize = @Html.Raw(ViewBag.VorhanschlosSizeJson)|| null;
        let BlockTur = document.getElementById("Size-" + idBlock);
        let Aussen = BlockTur.querySelector("#Aussen");
        let Aitems = Aussen.querySelectorAll("#OptionA");

        let countSchluss = BlockTur.querySelector("#countSchlusse-" + idBlock);
        let oldAussen = BlockTur.querySelector("#Aussen-" + idBlock);
        
        if (oldAussen.value === "") 
        {
            oldAussen.value = oldSize;
        }

        AllPrice.value = parseFloat(AllPrice.value) - (VorhanSizeCost[iterations] * Number(countSchluss.value));

        Aitems.forEach(function (items) 
        {
            let ItemValue = parseFloat(items.innerHTML);
            let ItemValueOld = Number(oldAussen.value);

            if (serchedItem == 1) 
            {
                return;
            }
            else 
            {
                if (value > ItemValueOld) 
                {
                    if (ItemValue == value) 
                    {
                        oldAussen.value = ItemValue;
                        serchedItem++;

                        AllPrice.value = parseFloat(AllPrice.value) + (VorhanSizeCost[iterations] * Number(countSchluss.value));
                        
                        return;
                    }
                    else
                    {
                        iterations++;
                    }

                }

                if (ItemValueOld > value) 
                {
                    if (ItemValue == ItemValueOld) 
                    {
                        oldAussen.value = value;
                        serchedItem++;
                        AllPrice.value = parseFloat(AllPrice.value) + (VorhanSizeCost[iterations] * Number(countSchluss.value));
                        return;
                    }
                    else 
                    {
                        iterations --;
                    }
                }

            }
           
        });
       
        serchedItem = 0;
    }
    function selectParamAussen(value, idBlock, oldValue) 
    {
        let iterations = 0;
        let serchedItem = 0;

        let BlockTur = document.getElementById("Size-"+idBlock);
        let countSchluss = BlockTur.querySelector("#countSchlusse-" + idBlock);

        let ProductBlock = document.getElementById("ExelItem-" + idBlock);
        let WaitTime = ProductBlock.querySelector("#WaitTime");
        let Innen = BlockTur.querySelector("#Intern");

        let Aussen = BlockTur.querySelector("#Aussen");
        let Aitems = Aussen.querySelectorAll("#OptionA");
        let oldAussen = BlockTur.querySelector("#Aussen-" + idBlock);

        let num = Number(value);

        if (oldAussen.value === "") 
        {
            oldAussen.value = oldValue;
        }

        Aitems.forEach(function (items) 
        {
            let ItemValue = Number(items.innerHTML);

            let ItemValueOld = Number(oldAussen.value);

            if (serchedItem == 1) 
            {
                return;
            }
            else 
            {
                if ((value > 31 || value > 30) && (value > ItemValueOld)) 
                {
                    if (ItemValue == value) 
                    {
                        oldAussen.value = ItemValue;
                        serchedItem++;
                        iterations++;

                        for (let i = 0; i !== iterations; i++) 
                        {
                            AllPrice.value = parseFloat(AllPrice.value) + (5 * Number(countSchluss.value));
                        }

                        return;
                    }
                    if(ItemValue>31)
                    {
                        iterations++;
                    }
                    
                }
               
                if (ItemValueOld > value) 
                {
                    if (ItemValue == ItemValueOld) 
                    {
                        oldAussen.value = value;
                        serchedItem++;
                        return;
                    }
                    else
                    {
                        AllPrice.value = parseFloat(AllPrice.value) - (5 * Number(countSchluss.value));
                    }
                }

            }

        });

        if (Innen.value == 80 && Aussen.value == 80) 
        {
            WaitTime.innerHTML = "Lieferzeit: 14 - 20 Werktage";
            WaitTime.textContent = "Lieferzeit: 14 - 20 Werktage";
        }
        else 
        {
            WaitTime.innerHTML = "Lieferzeit: 5 - 7 Werktage";
            WaitTime.textContent = "Lieferzeit: 5 - 7 Werktage";
        }

        iterations = 0;
        serchedItem = 0;
    }
    function selectParamIntern(value, idBlock, oldValue) 
    {
        let iterations = 0;
        let serchedItem = 0;

        let ProductBlock = document.getElementById("ExelItem-" + idBlock);
        let WaitTime = ProductBlock.querySelector("#WaitTime");
        let BlockTur = document.getElementById("Size-" + idBlock);
        let countSchluss = BlockTur.querySelector("#countSchlusse-" + idBlock);

        let Aussen = BlockTur.querySelector("#Aussen");
        
        let Innen = BlockTur.querySelector("#Intern");
        let Aitems = Innen.querySelectorAll("#OptionI");
        let oldAussen = BlockTur.querySelector("#Innen-" + idBlock);

        let num = Number(value);

        if (oldAussen.value === "") 
        {
            oldAussen.value = oldValue;
        }

        Aitems.forEach(function (items) 
        {
            let ItemValue = Number(items.innerHTML);

            let ItemValueOld = Number(oldAussen.value);

            if (serchedItem == 1) 
            {
                return;
            }
            else 
            {
                if ((value > 31 || value > 30) && (value > ItemValueOld)) 
                {
                    if (ItemValue == value) 
                    {
                        oldAussen.value = ItemValue;
                        serchedItem++;
                        iterations++;
                        for (let i = 0; i !== iterations; i++) 
                        {
                            AllPrice.value = parseFloat(AllPrice.value) + (5 * Number(countSchluss.value));
                        }

                        return;
                    }
                    if (ItemValue > 31)
                    {
                        iterations++;
                    }

                }

                if (ItemValueOld > value) 
                {
                    if (ItemValue == ItemValueOld)
                    {
                        oldAussen.value = value;
                        serchedItem++;
                        return;
                    }
                    else 
                    {
                        AllPrice.value = parseFloat(AllPrice.value) - (5 * Number(countSchluss.value));
                    }
                }

            }

        });

        if (Innen.value == 80 && Aussen.value == 80) 
        {
            WaitTime.innerHTML = "Lieferzeit: 14 - 20 Werktage";
            WaitTime.textContent = "Lieferzeit: 14 - 20 Werktage";
        }
        else 
        {
            WaitTime.innerHTML = "Lieferzeit: 5 - 7 Werktage";
            WaitTime.textContent = "Lieferzeit: 5 - 7 Werktage";
        }

        iterations = 0;
        serchedItem = 0;
    }
    function goBack() 
    {
        window.history.back();
    }
    
</script>
