@using schliessanlagen_konfigurator.Models.OrdersOpen
@model Orders;
@using Microsoft.AspNetCore.Http;

@{
    ViewData["Title"] = $"Finisher/{Model.userKey}";
    int z = 0;
    int countFalse = 0;
    int d = 0;
}

<style>

    #modalDiscriptions 
    {
        gap: 50px;
        display: grid;
        grid-template-columns: auto auto;
    }
    .count_input_controll{
        border: none;
        max-width: 40px;
        outline: none;
        text-align: center;
    }
    .closeOptions {
        margin-left: auto;
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .closeOptions:hover,
        .closeOptions:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

    #Procent {
        text-align: end;
        color: red;
    }
    .count_control{
        margin-left: 50px;
    }
    .count_control_Aussen
    {
     margin-left: 125px;
    }
</style>

@using (Html.BeginForm("SaveUserOrders", "Konfigurator", FormMethod.Post))
{ 
        
    @Html.HiddenFor(m => m.userKey)

    <input type="hidden" name="user" value="@Model.userKey" />
    <div id="FinisherPage">
  
    <h5>Schlüssel konfigurieren</h5>
        <h6 id="keyInform">
            Sie können sehen, welcher Schlüssel welches Schloss öffnet, und die erforderliche Anzahl an Schlüsseln auswählen.
        </h6>
    <div>
        @foreach (var item in ViewBag.Order)
        {
            z++;
            <div id="finisherItem">
                <div id="ItemCounterOrders">

                    <div id="counterKey">
                            <input onclick="minus(@z)" type="button" value="-" class="btn btn-success" />
                            <input type="text" style="border: none;max-width: 45px;" id="countKey-@z" readonly name="countKey" value="@item.CountKey" />
                            <input onclick="plus(@z)" type="button" value="+" class="btn btn-success" />
                    </div>

                </div>
                <div id="nameItem">
                        <input style="border: none;" name="key" value="@item.NameKey" />
                        <input style="border: none;" type="hidden" name="FurKey" value="@item.ForNameKey" /> 
                </div>

                <div id="numerKey">
                    <h5>Schlüssel Nr.@z </h5>
                </div>
                <div id="OpenValue">
                            @for (int i = 0; i < ViewBag.DorName.Count; i++)
                            {
                                @if (ViewBag.KeyValue[countFalse] == true)
                                {
                                    <input type="hidden" name="keyIsOpen" value="true" />
                                    <input name="TurName" style="border: none;max-width: 100px;" readonly type="text" id="@z-DorCount-@i" value="@ViewBag.DorName[i]" />
                                }
                                else
                                {
                                    <input type="hidden" name="keyIsOpen" value="false" />
                                }
                                countFalse++;
                            }
                </div>
            </div>
        }
        <div>
        </div>
        <div id="FinisherAnderes">
            <a class="btn btn-danger" href="@Url.Action("ChangedKonfigPlan","Konfigurator",new{ userKey = @Model.userKey})">SCHLIESSPLAN BEARBEITEN</a>
        </div>
        <h5>Türen konfigurieren</h5>
        <h6 id="infoTuren">
                Unten sind die Schlösser mit Angaben zu deren Größen, Optionen und Mengen aufgeführt.
        </h6>
    </div>
    <div>
        @if (ViewBag.Dopelzylinder != null)
        {
            int elemNum = 0;
         
            foreach (var item in ViewBag.Dopelzylinder)
            {
                    <div id="ExelItem-@d" class="ExelItem shadow-lg  mb-5 bg-body-tertiary rounded">
                        <input value="@item.Id" type="hidden" name="DopelItem" />
                        <div id="productImage">
                            <img decoding="async" data-bs-toggle="modal" data-bs-target="#ModalItemDoppel-@d" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="300px" height="300px" />
                            <div>
                                @foreach(var list in ViewBag.DoppelGalery)
                                {
                                    <img src="@("/Image/"+@list.ImageName)" height="100" width="100" />
                                }
                            </div>
                        </div>
                        <div id="productMenuInfo">
                            <div id="ProductNameUndCost">
                                <div>
                                    <h3>Tür name: @ViewBag.DorName[d]</h3>
                                    <input style="border: none;width:250px" readonly type="text" name="DopelName" value="@item.Name" />
                                    <input style="border: none;width:250px" type="hidden" name="NameSystem" value="@item.NameSystem" />

                                    <input id="costItems-@d" name="ProductCosted" type="hidden" value="@item.Price" />
                                </div>
                            </div>
                            <div>
                                <select id="type-@d" class="form-select" onchange="switchTypeSylinder(@d,event.target.value,@elemNum)">
                                    <option selected>Doppelzylinder</option>
                                    @foreach (var i in ViewBag.AllType)
                                    {
                                        if (@i.nameType != "Doppelzylinder")
                                        {
                                            <option>@i.nameType</option>
                                        }
                                    }

                                </select>
                            </div>
                            <div id="textInform">
                                <h5>Zylinderlänge</h5>
                                <h5>Stück</h5>
                            </div>

                            <div id="Size-@d" class="SizeProduct">

                                <div class="btn-group" role="group" aria-label="Basic outlined example">
                                <div>
                                    <input style="border: none;" id="compName" type="hidden" value="@item.companyName" />
                                    <select class="form-select" name="DoppelAussen" id="Aussen" onchange="selectParamAussen(@d,'Doppelzylinder',event.target.selectedIndex)">
                                        <option style="display:none" selected>@ViewBag.DAussen[elemNum]</option>

                                        @for (int i = 0; i < ViewBag.Dopelzylinderaussen.Count; i++)
                                        {
                                            <option id="OptionA">@ViewBag.Dopelzylinderaussen[i]</option>
                                        }
                                    </select>
                                    <input type="hidden" id="Aussen-@d" />
                                </div>
                                <div>
                                    <select class="form-select" name="DoppelIntern" id="Intern" onchange="selectParamIntern(@d,'Doppelzylinder',event.target.selectedIndex)">
                                        <option style="display:none" selected>@ViewBag.DInter[elemNum]</option>

                                        @for (int i = 0; i < ViewBag.DopelzylinderIntern.Count; i++)
                                        {
                                            <option id="OptionI">@ViewBag.DopelzylinderIntern[i]</option>
                                        }
                                    </select>
                                    <input type="hidden" id="Innen-@d"  />
                                </div>
                                </div>

                                <div class="btn-group count_control" role="group" aria-label="Basic outlined example">
                                    <button type="button" onclick="CylinderMinus(@d)" class="btn btn-success">-</button>
                                    <input readonly class="count_input_controll" name="TurCounter" id="countSchlusse-@d" type="number" min="1" value="@ViewBag.CounterTur[@elemNum]" />
                                    <button type="button" onclick="CylinderPlus(@d)" class="btn btn-success">+</button>
                                </div>
                                    
                            </div>

                            <div id="optionsItems">
                                <h3>Weitere Optionen</h3>
                                <div>
                                    @{
                                        int valueCount = 0;
                                    }
                                    @if (ViewBag.countOptionsQuery > 0)
                                    {
                                        @for (int i = 0; i < ViewBag.optionsName.Count; i++)
                                        {

                                              <div class="input-group">
                                                <div class="input-group-text" id="btnGroupAddon">  <img data-bs-toggle="modal" data-bs-target="#myModal-@i" id="hilfeOptionsIcon" src="@("/Image/question.png")" height="20" width="20" /></div>
                                                <input type="text" class="form-control" id="OptionName" value="@ViewBag.optionsName[i].Name" readonly aria-label="Пример группы ввода" aria-describedby="btnGroupAddon">
                                              </div>

                                            <select style="margin-bottom: 10px;" class="form-select" id="@d-Options-@i" onchange="OptionsSelect(@d,'Doppel',event.target.id,event.target.value,@valueCount,'@ViewBag.optionsName[i].Name',@i,@d)">

                                                @for (int j = 0; j < ViewBag.countOptionsList[i]; j++)
                                                {
                                                    <option id="@valueCount">@ViewBag.optionsValue[valueCount]</option>

                                                    valueCount++;
                                                }
                                            </select>

                                            <div class="modal fade" id="myModal-@i" tabindex="-1">
                                                <div class="modal-dialog modal-xl">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h1 class="modal-title">@ViewBag.optionsName[i].Name</h1>
                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                                        </div>
                                                        <div class="modal-body">
                                                         
                                                                <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                                                    <div class="row g-0">
                                                                        <div class="col-md-4">
                                                                        <img src="@("/Image/"+@ViewBag.optionsName[i].ImageName)" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                                                        </div>
                                                                        <div class="col-md-8">
                                                                            <div class="card-body">

                                                                                <div class="card-text">
                                                                                @Html.Raw(@ViewBag.optionsName[i].Description)
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <input type="hidden" id="Option-@d + @i" />
                                            <input type="hidden" id="d-@d + @i" />
                                        }
                                        <input type="hidden" name="DoppelOption" id="OptionAll-@d" />
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="modal fade" id="ModalItemDoppel-@d" tabindex="-1">
                            <div class="modal-dialog modal-xl">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h1 class="modal-title">@item.Name</h1>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                    </div>
                                    <div class="modal-body">

                                        <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                            <div class="row g-0">
                                                <div class="col-md-4">
                                                    <img src="@("/image/"+@item.ImageName)" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                                </div>
                                                <div class="col-md-8">
                                                    <div class="card-body">

                                                        <div class="card-text">
                                                            @Html.Raw(@item.description)
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                </div>
                   

                    elemNum++;
                d++;
            }
        }
        @if (ViewBag.KnayfZelinder != null)
        {
            int elemNum = 0;
            foreach (var item in ViewBag.KnayfZelinder)
            {
                   <div id="ExelItem-@d" class="ExelItem shadow-lg  mb-5 bg-body-tertiary rounded">
                        <input type="hidden" name="Knayf" value="@item.Id" />
                    <div id="productImage">
                            <img decoding="async" data-bs-toggle="modal" data-bs-target="#ModalKnyf-@d" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="300px" height="300px" />
                            <div>
                                @foreach (var list in ViewBag.KnaufGalery)
                                {
                                    <img src="@("/Image/"+@list.ImageName)" height="100" width="100" />
                                }
                            </div>
                        </div>
                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">

                            <div>
                                    <h3>Tür name: @ViewBag.DorName[d]</h3>
                                    <input style="border: none;width:250px" readonly type="text" name="KnayfName" value="@item.Name" />
                                    <input style="border: none;width:250px" type="hidden" name="NameSystem" value="@item.NameSystem" />
                                    <input id="costItems-@d" name="ProductCosted" type="hidden" value="@item.Price" />
                            </div>

                        </div>
                        <div>
                                <select id="type-@d" class="form-select" onchange="switchTypeSylinder(@d,event.target.value,@elemNum)">
                                    <option selected>KnayfZylinder</option>
                                    @foreach (var i in ViewBag.AllType)
                                    {
                                        if (@i.nameType != "KnayfZylinder")
                                        {
                                            <option>@i.nameType</option>
                                        }
                                    }
                            </select>
                        </div>
                            <div id="textInform">
                                <h5>Zylinderlänge</h5>
                                <h5>Stück</h5>
                        </div>

                            <div id="Size-@d" class="SizeProduct">
                            <div class="btn-group" role="group" aria-label="Basic outlined example">
                            <div>
                                    <input style="border: none;" id="compName" type="hidden" value="@item.companyName" />
                                    <select class="form-select" name="KnayfAussen" id="Aussen" onchange="selectParamAussen(@d,'Knaufzylinder',event.target.selectedIndex)">
                                    <option style="display:none" selected>@ViewBag.KAussen[elemNum]</option>
                                    @for (int i = 0; i < ViewBag.KnayfZelinderAussen.Count; i++)
                                    {
                                        <option id="OptionA">@ViewBag.KnayfZelinderAussen[i]</option>
                                    }
                                </select>
                                    <input type="hidden" id="Aussen-@d" />
                            </div>
                            <div>
                                    <select class="form-select" name="KnayfIntern" id="Intern" onchange="selectParamIntern(@d,'Knaufzylinder',event.target.selectedIndex)">
                                    <option style="display:none" selected>@ViewBag.KInter[elemNum]</option>
                                    @for (int i = 0; i < ViewBag.KnayfZelinderIntern.Count; i++)
                                    {
                                       <option id="OptionI">@ViewBag.KnayfZelinderIntern[i]</option>
                                    }
                                </select>
                                 <input type="hidden" id="Innen-@d" />
                            </div>
                             </div>
                                <div class="btn-group count_control" role="group" aria-label="Basic outlined example">
                                    <button type="button" onclick="CylinderMinus(@d)" class="btn btn-success">-</button>
                                    <input readonly class="count_input_controll" id="countSchlusse-@d" type="number" min="1" value="@ViewBag.CounterTurKnayf[@elemNum]" name="TurCounter" />
                                    <button type="button" onclick="CylinderPlus(@d)" class="btn btn-success">+</button>
                            </div>
                            </div>
                            <div id="optionsItems">
                            <h3>Weitere Optionen</h3>
                            <div>
                                @{
                                    int valueCount = 0;
                                }
                                @if (ViewBag.countOptionsQueryKnayf > 0)
                                {
                                    @for (int i = 0; i < ViewBag.optionsNameKnayf.Count; i++)
                                    {

                                            <div class="input-group">
                                                <div class="input-group-text" id="btnGroupAddon">
                                                    <img data-bs-toggle="modal" data-bs-target="#ModalKnyfOptions-@i" id="hilfeOptionsIcon" src="@("/Image/question.png")" height="20" width="20" />
                                                    </div>
                                                <input type="text" class="form-control" id="OptionName" value="@ViewBag.optionsNameKnayf[i].Name" readonly aria-label="Пример группы ввода" aria-describedby="btnGroupAddon">
                                            </div>

                                            <select style="margin-bottom: 10px;" class="form-select" id="@d-Options-@i" onchange="OptionsSelect(@d,'Knayf',event.target.id,event.target.value,@valueCount,'@ViewBag.optionsNameKnayf[i].Name',@i,@d)">

                                            @for (int j = 0; j < ViewBag.countOptionsListKnayf[i]; j++)
                                            {
                                                <option id="@valueCount">@ViewBag.optionsValueKnayf[valueCount]</option>
                                                
                                                valueCount++;
                                            }

                                        </select>

                                            <div class="modal fade" id="ModalKnyfOptions-@i" tabindex="-1">
                                                <div class="modal-dialog modal-xl">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h1 class="modal-title">@ViewBag.optionsNameKnayf[i].Name</h1>
                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                                        </div>
                                                        <div class="modal-body">

                                                            <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                                                <div class="row g-0">
                                                                    <div class="col-md-4">
                                                                        <img src="@("/Image/"+@ViewBag.optionsNameKnayf[i].ImageName)" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                                                    </div>
                                                                    <div class="col-md-8">
                                                                        <div class="card-body">

                                                                            <div class="card-text">
                                                                                @Html.Raw(@ViewBag.optionsNameKnayf[i].Description)
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <input type="hidden"  id="Option-@d + @i" />
                                            <input type="hidden" id="d-@d + @i" />
                                    }
                                        <input type="hidden" name="KnayfOption" id="OptionAll-@d" />
                                } 

                            </div>
                        </div>
                           
                    </div>
                </div>
                    <div class="modal fade" id="ModalKnyf-@d" tabindex="-1">
                        <div class="modal-dialog modal-xl">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h1 class="modal-title">@item.Name</h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                </div>
                                <div class="modal-body">

                                    <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                        <div class="row g-0">
                                            <div class="col-md-4">
                                                <img src="@("/image/"+@item.ImageName)" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                            </div>
                                            <div class="col-md-8">
                                                <div class="card-body">

                                                    <div class="card-text">
                                                        @Html.Raw(@item.description)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    d++;
                elemNum++;
            }
           
        }
        @if (ViewBag.Halb != null)
        {
            int elemNum = 0;
           
            foreach (var item in ViewBag.Halb)
            {

                    <div id="ExelItem-@d" class="ExelItem shadow-lg  mb-5 bg-body-tertiary rounded">

                    <input type="hidden" name="Halb" value="@item.Id" />
                    <div id="productImage">
                            <img decoding="async" data-bs-toggle="modal" data-bs-target="#ModalHalb-@d" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="300px" height="300px" />
                            
                            <div>
                                @foreach (var list in ViewBag.HalbGalery)
                                {
                                    <img src="@("/Image/"+@list.ImageName)" height="100" width="100" />
                                }
                            </div>
                        </div>
                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">

                            <div>
                                    <h3>Tür name: @ViewBag.DorName[d]</h3>
                                    <input style="border: none;width:250px" readonly type="text" name="HalbName" value="@item.Name" />
                                    <input style="border: none;width:250px" type="hidden" name="NameSystem" value="@item.NameSystem" />
                                    <input id="costItems-@d" name="ProductCosted" type="hidden" value="@item.Price" />
                            </div>

                        </div>
                        <div>
                                <select id="type-@d" class="form-select" onchange="switchTypeSylinder(@d,event.target.value,@elemNum)" >
                                <option selected>Halbzylinder</option>
                                    @foreach (var i in ViewBag.AllType)
                                    {
                                        if (@i.nameType != "Halbzylinder")
                                        {
                                            <option>@i.nameType</option>
                                        }
                                    }
                            </select>
                        </div>
                            <div id="textInform">
                                <h5>Zylinderlänge</h5>
                                <h5>Stück</h5>
                        </div>
                            <div id="Size-@d" class="SizeProduct">
                            <div>
                                    <input style="border: none;" id="compName" type="hidden" value="@item.companyName" />
                                    <select name="HalbAussen" id="Aussen" class="form-select" onchange="selectParamAussen(@d,'Halbzylinder',event.target.selectedIndex)">
                                    <option style="display:none" selected>@ViewBag.HalbOrderAussen[elemNum]</option>
                                    @for (int i = 0; i < ViewBag.AussenHalb.Count; i++)
                                    {
                                       <option id="OptionA">@ViewBag.AussenHalb[i]</option>
                                    }
                                </select>
                                    <input type="hidden" id="Aussen-@d" />
                            </div>

                                <div class="btn-group count_control_Aussen" role="group" aria-label="Basic outlined example">
                                    <button type="button" onclick="CylinderMinus(@d)" class="btn btn-success">-</button>
                                    <input readonly class="count_input_controll" value="@ViewBag.CounterTurHalb[@elemNum]" type="number" min="1" name="TurCounter" id="countSchlusse-@d" />
                                    <button type="button" onclick="CylinderPlus(@d)" class="btn btn-success">+</button>
                                </div>

                        </div>
                            <div id="optionsItems">
                            <h3>Weitere Optionen</h3>
                            <div>
                                @{
                                   int  valueCount = 0;
                                }
                               @if (ViewBag.countOptionsQueryHalb > 0)
                                {
                                    @for (int i = 0; i < ViewBag.HalbOptionsName.Count; i++)
                                    {
                                            <div class="input-group">
                                                <div class="input-group-text" id="btnGroupAddon">
                                                    <img data-bs-toggle="modal" data-bs-target="#HalbOptionsDescriptions-@i" id="hilfeOptionsIcon" src="@("/Image/question.png")" height="20" width="20" />
                                                </div>
                                                <input type="text" class="form-control" id="OptionName" value="@ViewBag.HalbOptionsName[i].Name" readonly aria-label="Пример группы ввода" aria-describedby="btnGroupAddon">
                                            </div>

                                            <select class="form-select" id="@d-Options-@i" style="margin-bottom: 10px;" onchange="OptionsSelect(@d,'Halb',event.target.id,event.target.value,@valueCount,'@ViewBag.HalbOptionsName[i].Name',@i,@d)">

                                            @for (int j = 0; j < ViewBag.HalbOptionsValueCount[i]; j++)
                                            {
                                                
                                                 <option id="@valueCount">@ViewBag.HalbOptionsValue[valueCount]</option>
                                                
                                                valueCount++;
                                            }
                                            </select>

                                            <input type="hidden"  id="Option-@d + @i" />
                                            <input type="hidden" id="d-@d + @i" />

                                            <div class="modal fade" id="HalbOptionsDescriptions-@i" tabindex="-1">
                                                <div class="modal-dialog modal-xl">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h1 class="modal-title">@ViewBag.HalbOptionsName[i].Name</h1>
                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                                        </div>
                                                        <div class="modal-body">

                                                            <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                                                <div class="row g-0">
                                                                    <div class="col-md-4">
                                                                        <img src="@("/Image/"+@ViewBag.HalbOptionsName[i].ImageName)" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                                                    </div>
                                                                    <div class="col-md-8">
                                                                        <div class="card-body">

                                                                            <div class="card-text">
                                                                                @Html.Raw(@ViewBag.HalbOptionsName[i].Description)
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                           
                                    }
                                        <input type="hidden" name="HalbOption" id="OptionAll-@d" /> 
                                } 
                            </div>
                        </div>
                            
                    </div>
                       
                </div>

                    <div class="modal fade" id="ModalHalb-@d" tabindex="-1">
                        <div class="modal-dialog modal-xl">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h1 class="modal-title">@item.Name</h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                </div>
                                <div class="modal-body">

                                    <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                        <div class="row g-0">
                                            <div class="col-md-4">
                                                <img src="@("/image/"+@item.ImageName)" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                            </div>
                                            <div class="col-md-8">
                                                <div class="card-body">

                                                    <div class="card-text">
                                                        @Html.Raw(@item.description)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    elemNum++;
                d++;
            }
        }
        @if (ViewBag.HelbZ != null)
        {
            int elemNum = 0;
            foreach (var item in ViewBag.HelbZ)
            {
                    <div id="ExelItem-@d" class="ExelItem shadow-lg  mb-5 bg-body-tertiary rounded">
                        <input type="hidden" name="Helb" value="@item.Id" />

                        <div id="productImage">
                            <img decoding="async" data-bs-toggle="modal" data-bs-target="#ModalHelbZ-@d" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="300px" height="300px" />
                            <div>
                                @foreach (var list in ViewBag.HebelzylinderGalery)
                                {
                                    <img src="@("/Image/"+@list.ImageName)" height="100" width="100" />
                                }
                            </div>
                        </div>

                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">
                            <div>
                                    <h3>Tür name: @ViewBag.DorName[d]</h3>
                                    <input style="border: none;width:250px" readonly type="text" name="HelbName" value="@item.Name" />
                                    <input style="border: none;width:250px" type="hidden" name="NameSystem" value="@item.NameSystem" />
                                    <input style="border: none;" id="compName" type="hidden" value="@item.companyName" />
                                    <input id="costItems-@d" name="ProductCosted" type="hidden" value="@item.Price" />
                            </div>

                        </div>
                        <div>
                                <select id="type-@d" class="form-select" onchange="switchTypeSylinder(@d,event.target.value,@elemNum)">
                                <option>Hebelzylinder</option>
                                    @foreach (var i in ViewBag.AllType)
                                    {
                                        if (@i.nameType != "Hebelzylinder")
                                        {
                                            <option>@i.nameType</option>
                                        }
                                    }

                            </select>
                        </div>
                            <div id="textInform">
                                <h5>Stück</h5>
                        </div>
                            <div id="Size-@d" class="SizeProduct">

                           <div class="btn-group" role="group" aria-label="Basic outlined example">
                                    <button onclick="CylinderMinus(@d)" type="button" class="btn btn-success">-</button>
                                    <input readonly class="count_input_controll" name="TurCounter" type="number" min="1" value="@ViewBag.CounterTurHebel[@elemNum]" id="countSchlusse-@d" />
                                    <button onclick="CylinderPlus(@d)" type="button" class="btn btn-success">+</button>
                            </div>
                        </div>
                            <div id="optionsItems">
                            <h3>Weitere Optionen</h3>
                            <div>
                                @{
                                   int  valueCount = 0;
                                }

                                @if (ViewBag.CountOptionsHebel > 0)
                                {
                                    @for (int i = 0; i < ViewBag.OptionHebelName.Count; i++)
                                    {
                                            <input style="margin-top: 5px;" id="OptionName" class="form-control" readonly type="text" value="@ViewBag.OptionHebelName[i]" />

                                            <select class="form-select"  id="@d-Options-@i" style="margin-bottom: 10px;" onchange="OptionsSelect(@d,'Helb',event.target.id,event.target.value,@valueCount,'@ViewBag.OptionHebelName[i]',@i,@d)">

                                            @for (int j = 0; j < ViewBag.CountValueHebel[i]; j++)
                                            {
                                               <option id="@valueCount">@ViewBag.ValueHebel[valueCount]</option>
                                               
                                                valueCount++;
                                            }
                                        </select>
                                            <input type="hidden"   id="Option-@d + @i" />
                                            <input type="hidden" id="d-@d + @i" />
                                    }
                                    <input type="hidden" name="HebelOption" id="OptionAll-@d" />
                                } 
                            </div>
                        </div>
                           
                    </div>
                </div>

                    <div class="modal fade" id="ModalHelbZ-@d" tabindex="-1">
                        <div class="modal-dialog modal-xl">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h1 class="modal-title">@item.Name</h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                </div>
                                <div class="modal-body">

                                    <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                        <div class="row g-0">
                                            <div class="col-md-4">
                                                <img src="@("/image/"+@item.ImageName)" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                            </div>
                                            <div class="col-md-8">
                                                <div class="card-body">

                                                    <div class="card-text">
                                                        @Html.Raw(@item.description)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                </div>
                            </div>
                        </div>
                    </div>

                elemNum++;
                    d++;
                }
        }
        @if (ViewBag.Vorhanschlos != null)
        {
            int elemNum = 0;
            foreach (var item in ViewBag.Vorhanschlos)
            {

                    <div id="ExelItem-@d" class="ExelItem shadow-lg  mb-5 bg-body-tertiary rounded">
                        <input type="hidden" name="Vorhan" value="@item.Id" />
                    <div id="productImage">
                            <img decoding="async" data-bs-toggle="modal" data-bs-target="#ModalVorhanschlos-@d" style="border: 2px solid rgba(237,237,237,0.5);" src="@("/image/"+@item.ImageName)" asp-append-version="true" width="300px" height="300px" />
                            <div>
                                @foreach (var list in ViewBag.VorhanGalery)
                                {
                                    <img src="@("/Image/"+@list.ImageName)" height="100" width="100" />
                                }
                            </div>
                        </div>
                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">
                            <div>
                                    <h3>Tür name: @ViewBag.DorName[d]</h3>
                                    <input style="border: none;width:250px" readonly type="text" name="VorhanName" value="@item.Name" />
                                    <input style="border: none;width:250px" type="hidden" name="NameSystem" value="@item.NameSystem" />
                                    <input style="border: none;" id="compName" type="hidden" value="@item.companyName" />
                                    <input id="costItems-@d" name="ProductCosted" type="hidden" value="@item.Price" />
                            </div>

                        </div>
                        <div>
                          <select id="type-@d" class="form-select" onchange="switchTypeSylinder(@d,event.target.value,@elemNum)">
                             <option>Vorhangschloss</option>
                                    @foreach (var i in ViewBag.AllType)
                                    {
                                        if (@i.nameType != "Vorhangschloss")
                                        {
                                            <option>@i.nameType</option>
                                        }
                                    }

                            </select>
                        </div>
                        <div id="textInform">
                                <h5>Zylinderlänge</h5>
                                <h5>Stück</h5>
                        </div>
                            <div id="Size-@d" class="SizeProduct">
                            <div>
                                    <select class="form-select" name="VorhanAussen" id="Aussen" onchange="VorhanSchlus(@d,event.target.selectedIndex)">
                                    <option style="display:none" selected>@ViewBag.VorhanOrderAussen[elemNum]</option>
                                    @for (int i = 0; i < ViewBag.VorhanSize.Count; i++)
                                    {
                                      <option id="OptionA">@ViewBag.VorhanSize[i]</option>
                                    }
                                </select>
                                    <input type="hidden" id="Aussen-@d" />
                            </div>
                                <div class="btn-group count_control_Aussen" role="group" aria-label="Basic outlined example">
                                    <button type="button" onclick="CylinderMinus(@d)" class="btn btn-success">-</button>
                                    <input name="TurCounter" readonly class="count_input_controll" type="number" min="1" id="countSchlusse-@d" value="@ViewBag.CounterTurVorhan[@elemNum]" />
                                    <button type="button" onclick="CylinderPlus(@d)" class="btn btn-success">+</button>
                            </div>

                        </div>
                            <div id="optionsItems">
                            <h3>Weitere Optionen</h3>
                            <div>
                                @{
                                  int valueCount = 0;
                                }

                                @if (ViewBag.VorhanschlossCount > 0)
                                {

                                    @for (int i = 0; i < ViewBag.VorhanschlossOptionCount; i++)
                                    {

                                            <input type="text" style="margin-top: 5px;" id="OptionName" class="form-control" readonly value="@ViewBag.VorhanschlossOptionName[i]" />

                                            <select style="margin-bottom: 10px;"  class="form-select" id="@d-Options-@i" onchange="OptionsSelect(@d,'Vorhan',event.target.id,event.target.value,@valueCount,'@ViewBag.VorhanschlossOptionName[i]',@i,@d)">

                                            @for (int j = 0; j < ViewBag.VorhanOptionCount[i]; j++)
                                            {
          
                                              <option id="@valueCount">@ViewBag.VorhanValue[valueCount]</option>

                                                valueCount++;
                                            }

                                        </select>

                                            <input type="hidden" name="VorhnaOption" id="Option-@d + @i" />
                                            <input type="hidden" id="d-@d + @i" />
                                    }
                                        <input type="hidden" name="VorhnaOption" id="OptionAll-@d" />
                                }
                            </div> 
                        </div>
                           
                    </div>
                </div>

                    <div class="modal fade" id="ModalVorhanschlos-@d" tabindex="-1">
                        <div class="modal-dialog modal-xl">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h1 class="modal-title">@item.Name</h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                </div>
                                <div class="modal-body">

                                    <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                        <div class="row g-0">
                                            <div class="col-md-4">
                                                <img src="@("/image/"+@item.ImageName)" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                            </div>
                                            <div class="col-md-8">
                                                <div class="card-body">

                                                    <div class="card-text">
                                                        @Html.Raw(@item.description)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                </div>
                            </div>
                        </div>
                    </div>
                elemNum++;
                    d++;
                }
        }
        @if (ViewBag.Aussenzylinder != null)
        {
            int elemNum = 0;

            foreach (var item in ViewBag.Aussenzylinder)
            {

                    <div id="ExelItem-@d" class="ExelItem shadow-lg  mb-5 bg-body-tertiary rounded">
                        <input type="hidden" name="Aussen" value="@item.Id" />
                        <div id="productImage">
                            <img decoding="async" data-bs-toggle="modal" data-bs-target="#ModalAussenzylinder-@d" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/image/"+@item.ImageName)" asp-append-version="true" width="300px" height="300px" />
                            <div>
                                @foreach (var list in ViewBag.VorhanGalery)
                                {
                                    <img src="@("/Image/"+@list.ImageName)" height="100" width="100" />
                                }
                            </div>
                        </div>
                        <div id="productMenuInfo">
                            <div id="ProductNameUndCost">

                                <div>
                                    <h3>Tür name: @ViewBag.DorName[d]</h3>
                                    <input style="border: none;width:250px" readonly type="text" name="AussenName" value="@item.Name" />
                                    <input style="border: none;width:250px" type="hidden" name="NameSystem" value="@item.NameSystem" />
                                    <input style="border: none;" id="compName" type="hidden" value="@item.companyName" />
                                    <input id="costItems-@d" name="ProductCosted" type="hidden" value="@item.Price" />
                                </div>

                            </div>

                            <div>
                                <select id="type-@d" class="form-select" onchange="switchTypeSylinder(@d,event.target.value,@elemNum)">

                                    <option selected>Aussenzylinder</option>

                                    @foreach (var i in ViewBag.AllType)
                                    {
                                        if (@i.nameType != "Aussenzylinder")
                                        {
                                            <option>@i.nameType</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div id="textInform">
                                <h5>Stück</h5>
                            </div>
                            <div id="Size-@d" class="SizeProduct">
                                <div class="btn-group" role="group" aria-label="Basic outlined example">
                                <button type="button" onclick="CylinderMinus(@d)" class="btn btn-success">-</button>
                                    <input readonly class="count_input_controll" name="TurCounter" type="number" min="1" value="@ViewBag.CounterTurAussen[@elemNum]" id="countSchlusse-@d" />
                                <button type="button" onclick="CylinderPlus(@d)" class="btn btn-success">+</button>
                              </div>
                            </div>

                            <div id="optionsItems">
                                <h3>Weitere Optionen</h3>
                                <div>
                                    @{
                                      int   valueCount = 0;
                                    }
                                    @if (ViewBag.AussenCountOption > 0)
                                    {
                                        @for (int i = 0; i < ViewBag.AussenName.Count; i++)
                                        {
                                            <input class="form-control" id="OptionName" style="margin-top: 5px;" readonly type="text" value="@ViewBag.AussenName[i]" />

                                            <select style="margin-bottom: 10px;" class="form-select" id="@d-Options-@i" onchange="OptionsSelect(@d,'Aussen',event.target.id,event.target.value,@valueCount,'@ViewBag.AussenName[i]',@i,@d)">

                                                @for (int j = 0; j < ViewBag.AussenValue[i]; j++)
                                                {
                                                    <option id="@valueCount">@ViewBag.AussenValue[valueCount]</option>

                                                    valueCount++;
                                                }

                                            </select>
                                            <input type="hidden" id="d-@d + @i" />
                                            <input type="hidden" id="Option-@d + @i" />

                                        }
                                        <input type="hidden" name="AussenOption" id="OptionAll-@d" />
                                    }
                                </div>
                            </div>
                        </div>
                </div>
                    <div class="modal fade" id="ModalAussenzylinder-@d" tabindex="-1">
                        <div class="modal-dialog modal-xl">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h1 class="modal-title">@item.Name</h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                </div>
                                <div class="modal-body">

                                    <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                        <div class="row g-0">
                                            <div class="col-md-4">
                                                <img src="@("/image/"+@item.ImageName)" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                            </div>
                                            <div class="col-md-8">
                                                <div class="card-body">

                                                    <div class="card-text">
                                                        @Html.Raw(@item.description)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                </div>
                            </div>
                        </div>
                    </div>
                elemNum++;
                    d++;
                }
        }
        <div id="FinisherAnderes">
            <input type="button"  onclick="goBack()" class="btn btn-danger" value="ANDERES SYSTEM WÄHLEN" />
        </div>
           <div style="text-align: end;">
              @Html.Raw(ViewBag.Lieferzeit)
           </div>
        <div id="orderCost">
                <input readonly type="hidden" value="@ViewBag.Cost.ToString("C")" id="cost" />
                <input name="Sum" id="costed" type="hidden" style="border:none;font-size:24px" value="@ViewBag.Cost" />
        </div>
     
            <div id="orderCost">
                <input name="cost" readonly type="text" value="@ViewBag.Cost.ToString("C")" id="Allcost" /> 
            </div>
        <br/>
        <div id="buttonActionFinishBlock">

            <div id="FinisherRight">

                    @if (User.IsInRole("client") || User.IsInRole("admin"))
                    {

                        <input id="chekProduct" type="submit" value="IN DEN WARENKORB" class="btn btn-danger" />
                    }
                    else
                    {                       
                        <a class="btn btn-danger" asp-area="Identity" asp-page="/Account/Register">IN DEN WARENKORB</a>
                    }
            </div>
                
        </div>
    </div>
</div>
} 
<script>

    let DoppelInfo = @Html.Raw(ViewBag.DopelzylinderJson);
    let KnayfInfo = @Html.Raw(ViewBag.KnayfZelinderJson);
    let HalbInfo = @Html.Raw(ViewBag.HalbJson);
    let HelbInfo = @Html.Raw(ViewBag.HelbZJson);
    let VorhanschlosInfo = @Html.Raw(ViewBag.VorhanschlosJson);
    let AussenzylinderInfo = @Html.Raw(ViewBag.AussenzylinderJson);
    let keyPrice = @Html.Raw(ViewBag.KeyCost);

    let VorhanSizeCost = @Html.Raw(ViewBag.VorhanschlosSizeCostedJson) || null;

    let VorhanSize = @Html.Raw(ViewBag.VorhanschlosSizeJson) || null;

    let DoppelOptions = @Html.Raw(ViewBag.DoppelOptionsNameJson) || null;
    let DoppelOptionsValue = @Html.Raw(ViewBag.DoppelOptionsValue) || null;
    let DoppelCostValue = @Html.Raw(ViewBag.optionsPrise) || null;

    let knayfOptionName = @Html.Raw(ViewBag.OptionsNameKnayfJson) || null;
    let KnayfOptionPrice = @Html.Raw(ViewBag.optionsPriseKnayf) || null;
    let KnayfOptionsValue = @Html.Raw(ViewBag.optionsValueKnayfJson) || null;

    let HalbOptionsName = @Html.Raw(ViewBag.HalbOptionsNameJson) || null;
    let HalbOptionsValue = @Html.Raw(ViewBag.HalbOptionsValueJson) || null;
    let HalbOptionsValueCost = @Html.Raw(ViewBag.HalbOptionsValueCostJson) || null;

    let HebelOptionsName = @Html.Raw(ViewBag.OptionsHebelNameJson) || null;
    let HebelOptionsValue = @Html.Raw(ViewBag.HebelValueJson) || null;
    let HebelOptionsCost = @Html.Raw(ViewBag.HebelValueCostJson) || null; 

    let VorhanSchloss = @Html.Raw(ViewBag.VorhanschlossOptionNameJson) || null;
    let VorhanSchlossValue = @Html.Raw(ViewBag.VorhanValueJson) || null;
    let VorhanSchlossValueCost = @Html.Raw(ViewBag.VorhanValueCostJson) || null;

    let AussenRundOptionsName = @Html.Raw(ViewBag.AussenNameJson) || null;
    let AussenRundOptionsValue = @Html.Raw(ViewBag.AussenValueJson) || null;
    let AussenRundOptionsCostValue = @Html.Raw(ViewBag.AussenValueCostJson) || null;
     
    let kleinPrice = @Html.Raw(ViewBag.DopelzylinderInternKleinPreis)|| null;
    let normalDopelSize = @Html.Raw(ViewBag.DopelzylinderInternNormal)|| null;
    let kleinSize = @Html.Raw(ViewBag.DopelzylinderInternKlein)|| null;

    let priceDoppelInternCost = @Html.Raw(ViewBag.CostDoppelIntern);
    let priceDoppelAussenCost = @Html.Raw(ViewBag.CostDoppelAussen);
    
    let priceKnayfAussenCost = @Html.Raw(ViewBag.KnayfAussenCost);
    
    let priceKnayfInternCost = @Html.Raw(ViewBag.KnayfInternCost);
    let kleinKnayf = @Html.Raw(ViewBag.KnayfInternKlein);
    let kleinKnayfPrice = @Html.Raw(ViewBag.KnayfzylinderInternKleinPreis);
    let KnayfZiseNormal = @Html.Raw(ViewBag.KnayfzylinderInternNormal);

    let halbAussenCost = @Html.Raw(ViewBag.CostHalbSize);

    let AllPrice = document.getElementById("cost");

    let pris = document.getElementById("costed");
    
    pris.value = AllPrice.innerHTML;
   
    let NoOptionCost = @Html.Raw(@ViewBag.CostProducted);

    let ParamSum = parseFloat(AllPrice.innerHTML.replace(',', '.') - NoOptionCost);
    
    localStorage.setItem("cost", ParamSum);

    localStorage.keyCost = 0;

    let hasFreilauffunktion = false;

    let hasNotUndGefahrenfunktion = false;

    let removeButton = document.getElementById("removeOrder");
    let AllOrderID = document.querySelector("#OrderId");
    
    var span = document.getElementsByClassName("close")[0];

    let idItem = 0;
    let Dorname = @Html.Raw(ViewBag.DornameJson);


    let liferungGroz = @Html.Raw(ViewBag.LieferzeitGroz);
    let liferun = @Html.Raw(ViewBag.LieferzeitJson);

    function procent()
    {
        let proc = document.getElementById("Procent");
        let Allcost = document.getElementById("Allcost");
        Allcost.value = (parseFloat(AllPrice.value)).toLocaleString('de-DE', {
            style: 'currency',
            currency: 'EUR'
        });
    }

    function switchTypeSylinder(BlockN, value, elemNum) 
    {
        let block = document.getElementById("ExelItem-" + BlockN);

        let costedItem = block.querySelectorAll("#costItems-" + BlockN)[0].defaultValue;

        let countItems = block.querySelectorAll("#countSchlusse-" + BlockN)[0];

        let cost = Number(costedItem * countItems.value);

        AllPrice.value = (parseFloat(AllPrice.value) -  cost);

        if (value == "Doppelzylinder") 
        {
                AllPrice.value = (parseFloat(AllPrice.value) + DoppelInfo[0].Price);

                let img = DoppelInfo[0].ImageName;

                block.innerHTML = ` <input value="${DoppelInfo[0].Id}" type="hidden" name="DopelItem" />
                <div id="productImage">
                   <img  decoding="async" data-bs-toggle="modal" data-bs-target="#ModalItemDoppel-@d" style="border: 2px solid rgba(237,237,237,0.5);" src="/Image/${img}" asp-append-version="true" width="300px" height="300px" />
                </div>
                <div id="productMenuInfo">
                    <div id="ProductNameUndCost">
                        <div>
                                <h3>Tür name: ${Dorname[BlockN]}</h3>
                                    <input style="border: none;" readonly type="text" name="DopelName" value="${[DoppelInfo[0].Name]}" />
                                        <input style="border: none;" type="hidden" name="NameSystem" value="${[DoppelInfo[0].NameSystem]}" />

                                    <input id="costItems-${BlockN}" type="hidden" value="${[DoppelInfo[0].Price]}" />
                        </div>
                    </div>
                    <div>

                             <select id="type-${BlockN}" class="form-select" onchange="switchTypeSylinder(${BlockN},event.target.value,${elemNum},1)">
                            <option selected>Doppelzylinder</option>
                                @foreach (var i in ViewBag.AllType)
                                {
                                    if (@i.nameType != "Doppelzylinder")
                                    {
                                      <option>@i.nameType</option>
                                    }
                                }

                        </select>
                    </div>
                    <div id="textInform">
                            <h5>Zylinderlänge</h5>
                            <h5>Stück</h5>
                    </div>
                              <div id="Size-${BlockN}" class="SizeProduct">
                        <div>
                              <input style="border: none;" id="compName" type="hidden" value="${[DoppelInfo[0].companyName]}" />
                              <select class="form-select" name="DoppelAussen" id="Aussen" onchange="selectParamAussen(${BlockN},'Doppelzylinder',event.target.selectedIndex+1)">

                                @for (int i = 0; i < @ViewBag.Dopelzylinderaussen.Count; i++)
                                {
                                   <option  id="OptionA">@ViewBag.Dopelzylinderaussen[i]</option>
                                }
                            </select>
                                    <input type="hidden" id="Aussen-${BlockN}" />
                        </div>
                        <div>
                                      <select class="form-select" name="DoppelIntern" id="Intern" onchange="selectParamIntern(${BlockN},'Doppelzylinder',event.target.selectedIndex+1)">

                                        @for (int i = 0; i < @ViewBag.DopelzylinderIntern.Count; i++)
                                        {
                                            <option id="OptionI">@ViewBag.DopelzylinderIntern[i]</option>
                                        }
                                        </select>
                                                <input type="hidden" id="Innen-${BlockN}" />
                                    </div>

                                            <div class="btn-group count_control" role="group" aria-label="Basic outlined example">
                                        <button type="button" onclick="CylinderMinus(${BlockN})" class="btn btn-success">-</button>
                                                <input readonly  class="count_input_controll" name="TurCounter" id="countSchlusse-${BlockN}" type="number" min="1" value="1" />
                                            <button type="button" onclick="CylinderPlus(${BlockN})" class="btn btn-success">+</button>
                                    </div>
                      
                                </div>

                                <div id="optionsItems">
                                    <h3>Weitere Optionen</h3>
                                    <div>
                                        @{
                                            int value = 0;

                                            if (ViewBag.countOptionsQueryI > 0)
                                            {
                                                @for (int i = 0; i < @ViewBag.optionsNameI.Count; i++)
                                                {
                                                                       <div class="input-group">
                                                                             <div class="input-group-text" id="btnGroupAddon">
                                                                                                <img data-bs-toggle="modal" data-bs-target="#myModalOptions-@i" id="hilfeOptionsIcon" src="@("/Image/question.png")" height="20" width="20" />
                                                                             </div>
                                                                               <input class="form-control" id="OptionName" readonly type="text" value="@ViewBag.optionsNameI[i].Name" aria-label="Пример группы ввода" aria-describedby="btnGroupAddon" />
                                                                           </div>
                                                                                                                                                                                                                                                    
                                                                                                                                                                            

                                                        <select style="margin-bottom: 10px;" class="form-select" id="${BlockN}-Options-@i" onchange="OptionsSelect(${BlockN},'Doppel',event.target.id,event.target.value,@value,'@ViewBag.optionsNameI[i].Name',@i,${BlockN})">

                                                          @for (int j = 0; j < @ViewBag.countOptionsListI[i]; j++)
                                                        {
                                                            <option id="@value">@ViewBag.optionsValueI[value]</option>

                                                            value++;
                                                        }

                                                          </select>
                                                     
                                                                                                                                                                                                                                                                                                                                    <input type="hidden" id="Option-${BlockN} + @i" />
                                                    <input type="hidden" id="d-${BlockN} + @i" />

                                                     <div class="modal fade" id="myModalOptions-@i" tabindex="-1">
                                                            <div class="modal-dialog modal-xl">
                                                                <div class="modal-content">
                                                                    <div class="modal-header">
                                                                                        <h1 class="modal-title">@ViewBag.optionsNameI[i].Name</h1>
                                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                                                    </div>
                                                                    <div class="modal-body">

                                                                            <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                                                                <div class="row g-0">
                                                                                    <div class="col-md-4">
                                                                                         <img src="@("/Image/"+@ViewBag.optionsNameI[i].ImageName)" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                                                                    </div>
                                                                                    <div class="col-md-8">
                                                                                        <div class="card-body">

                                                                                            <div class="card-text">
                                                                                            @Html.Raw(@ViewBag.optionsNameI[i].Description)
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                    </div>
                                                                    <div class="modal-footer">
                                                                        <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                      

                                                }
                                                <input type="hidden" name="DoppelOption" id="OptionAll-${BlockN}" />
                                            }
                                        }
                                        

                                      </div>
                                     </div>
                                  
                                    </div>
                              <div class="modal fade" id="ModalItemDoppel-@d" tabindex="-1">
                                <div class="modal-dialog modal-xl">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                                <h1 class="modal-title">${[DoppelInfo[0].Name]}</h1>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                        </div>
                                        <div class="modal-body">

                                            <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                                <div class="row g-0">
                                                    <div class="col-md-4">
                                                            <img src="/Image/${img}" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                                    </div>
                                                    <div class="col-md-8">
                                                        <div class="card-body">
                                                            <div class="card-text">
                                                                ${DoppelInfo[0].description}
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                                        
                                        `;
        }
        if (value == "Halbzylinder") 
        {           
            AllPrice.value = (parseFloat(AllPrice.value) + HalbInfo[0].Price);

            let img = HalbInfo[0].ImageName;


            block.innerHTML = `   <input type="hidden" name="Halb" value="${HalbInfo[0].Id}" />
                        <div id="productImage">
                             <img  decoding="async" data-bs-toggle="modal" data-bs-target="#ModalHalb-@d" style="border: 2px solid rgba(237,237,237,0.5);" src="/Image/${img}" asp-append-version="true" width="300px" height="300px" />
                        </div>
                        <div id="productMenuInfo">
                            <div id="ProductNameUndCost">

                                <div>
                                            <h3>Tür name: ${Dorname[BlockN]}</h3>
                                                <input style="border: none;" readonly type="text" name="HalbName" value="${HalbInfo[0].Name}" />
                                                <input style="border: none;" type="hidden" name="NameSystem" value="${HalbInfo[0].NameSystem}" />
                                                    <input id="costItems-${BlockN}" type="hidden" value="${HalbInfo[0].Price}" />
                                </div>

                            </div>
                            <div>
                                        <select id="type-${BlockN}" class="form-select" onchange="switchTypeSylinder(${BlockN},event.target.value,${elemNum},1)" >
                                    <option selected>Halbzylinder</option>
                                    @foreach (var i in ViewBag.AllType)
                                    {
                                        if (@i.nameType != "Halbzylinder")
                                        {
                                           <option>@i.nameType</option>
                                        }
                                    }
                                </select>
                            </div>
                                <div id="textInform">
                                    <h5>Zylinderlänge</h5>
                                    <h5>Stück</h5>
                            </div>
                                    <div id="Size-${BlockN}" class="SizeProduct">
                                <div>
                                       <input style="border: none;" id="compName" type="hidden" value="${HalbInfo[0].companyName}" />
                                       <select name="HalbAussen" id="Aussen" class="form-select" onchange="selectParamAussen(${BlockN},'Halbzylinder',event.target.selectedIndex+1)">
                                    
                                        @for (int i = 0; i < ViewBag.AussenHalb.Count; i++)
                                        {
                                          <option id="OptionA">@ViewBag.AussenHalb[i]</option>
                                        }
                                    
                                        </select>
                                            <input type="hidden" id="Aussen-${BlockN}" />
                                </div>
                                <div class="btn-group count_control" role="group" aria-label="Basic outlined example">

                                            <button type="button" onclick="CylinderMinus(${BlockN})" class="btn btn-success">-</button>
                                                <input readonly class="count_input_controll" value="1" type="number" min="1" name="TurCounter" id="countSchlusse-${BlockN}" />
                                            <button type="button" onclick="CylinderPlus(${BlockN})" class="btn btn-success">+</button>
                                </div>

                            </div>
                                <div id="optionsItems">
                                <h3>Weitere Optionen</h3>
                                     <div>
                                    @{
                                        int valueCountHalb = 0;
                                    }
                                    @if (ViewBag.countOptionsQueryHalbI > 0)
                                    {
                                        @for (int i = 0; i < ViewBag.HalbOptionsNameI.Count; i++)
                                        {
                                                        <div class="input-group">
                                                            <div class="input-group-text" id="btnGroupAddon">
                                                              <img data-bs-toggle="modal" data-bs-target="#HalbOptionsDescriptions-@i"   id="hilfeOptionsIcon" src="@("/Image/question.png")" height="20" width="20" />
                                                            </div>
                                                              <input class="form-control" id="OptionName"  readonly type="text" value="@ViewBag.HalbOptionsNameI[i].Name" aria-label="Пример группы ввода" aria-describedby="btnGroupAddon"/>
                                                          </div>

                                               <select class="form-select"  id="@d-Options-@i" style="margin-bottom: 10px;" onchange="OptionsSelect(${BlockN},'Halb',event.target.id,event.target.value,@valueCountHalb,'@ViewBag.HalbOptionsNameI[i]',@i,${BlockN})" >

                                                @for (int j = 0; j < ViewBag.HalbOptionsValueICount[i]; j++)
                                                {

                                                   <option id="@valueCountHalb">@ViewBag.HalbOptionsValueI[valueCountHalb]</option>

                                                    valueCountHalb++;
                                                }
                                                                                    </select>

                                             <input type="hidden"  id="Option-${BlockN} + @i" />
                                             <input type="hidden" id="d-${BlockN} + @i" />

                                              <div class="modal fade" id="HalbOptionsDescriptions-@i" tabindex="-1">
                                                <div class="modal-dialog modal-xl">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                                        <h1 class="modal-title">@ViewBag.HalbOptionsNameI[i].Name</h1>
                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                                        </div>
                                                        <div class="modal-body">

                                                            <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                                                <div class="row g-0">
                                                                    <div class="col-md-4">
                                                                                    <img src="@("/Image/"+@ViewBag.HalbOptionsNameI[i].ImageName)" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                                                    </div>
                                                                    <div class="col-md-8">
                                                                        <div class="card-body">

                                                                            <div class="card-text">
                                                                                @Html.Raw(@ViewBag.HalbOptionsNameI[i].Description)
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        <input type="hidden" name="HalbOption" id="OptionAll-${BlockN}" />
                                    }
                                </div>
                                 </div>                              
                        </div>

                            <div class="modal fade" id="ModalHalb-@d" tabindex="-1">
                                <div class="modal-dialog modal-xl">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                         <h1 class="modal-title">${[HalbInfo[0].Name]}</h1>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                        </div>
                                        <div class="modal-body">

                                            <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                                <div class="row g-0">
                                                    <div class="col-md-4">
                                                            <img src="/Image/${img}" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                                    </div>
                                                    <div class="col-md-8">
                                                        <div class="card-body">

                                                            <div class="card-text">
                                                                       ${HalbInfo[0].description}
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        
                        `;
        }
        if (value == "Knaufzylinder") 
        {
            AllPrice.value = (parseFloat(AllPrice.value) + KnayfInfo[0].Price);

            let img = KnayfInfo[0].ImageName;

            block.innerHTML = ` <input value="${KnayfInfo[0].Id}" type="hidden" name="DopelItem" />
                    <div id="productImage">
                            <img decoding="async" data-bs-toggle="modal" data-bs-target="#ModalItemKnayf-@d" style="border: 2px solid rgba(237,237,237,0.5);" src="/Image/${img}" asp-append-version="true" width="300px" height="300px" />
                    </div>
                    <div id="productMenuInfo">
                        <div id="ProductNameUndCost">
                            <div>
                                    <h3>Tür name: ${Dorname[BlockN]}</h3>
                                            <input style="border: none;" readonly type="text" name="DopelName" value="${[KnayfInfo[0].Name]}" />
                                                <input style="border: none;" type="hidden" name="NameSystem" value="${[KnayfInfo[0].NameSystem]}" />

                                            <input id="costItems-${BlockN}" type="hidden" value="${[KnayfInfo[0].Price]}" />
                            </div>
                        </div>
                        <div>

                                  <select id="type-${BlockN}" class="form-select" onchange="switchTypeSylinder(${BlockN},event.target.value,${elemNum},1)">
                                    <option selected>KnayfZylinder</option>
                                @foreach (var i in ViewBag.AllType)
                                {
                                    if (@i.nameType != "KnayfZylinder")
                                    {
                                        <option>@i.nameType</option>
                                    }
                                }

                            </select>
                        </div>
                            <div id="textInform">
                              <h5>Zylinderlänge</h5>
                              <h5>Stück</h5>
                        </div>
                            <div id="Size-${BlockN}" class="SizeProduct">
                                  <div>
                                              <input style="border: none;" id="compName" type="hidden" value="${[KnayfInfo[0].companyName]}" />


                                       <select class="form-select" name="KnayfAussen" id="Aussen" onchange="selectParamAussen(${BlockN},'Knaufzylinder',event.target.selectedIndex+1)">
    @for (int i = 0; i < ViewBag.KnayfZelinderAussen.Count; i++)
    {
                                            <option id="OptionA">@ViewBag.KnayfZelinderAussen[i]</option>
    }
                                                  </select>


                                       <input type="hidden" id="Aussen-${BlockN}" />
                                  </div>
                                  <div>

                                                      <select class="form-select" name="KnayfIntern" id="Intern" onchange="selectParamIntern(${BlockN},'Knaufzylinder',event.target.selectedIndex+1)">

    @for (int i = 0; i < ViewBag.KnayfZelinderIntern.Count; i++)
    {
                                                        <option id="OptionI">@ViewBag.KnayfZelinderIntern[i]</option>
    }

                                                  </select>

                                           <input type="hidden" id="Innen-${BlockN}" />
                                  </div>
                                      <div class="btn-group count_control" role="group" aria-label="Basic outlined example">
                                          <button type="button" onclick="CylinderMinus(${BlockN})" class="btn btn-success">-</button>
                                                  <input readonly class="count_input_controll" id="countSchlusse-${BlockN}" type="number" min="1" value="1" name="TurCounter" />
                                          <button type="button" onclick="CylinderPlus(${BlockN})" class="btn btn-success">+</button>
                                  </div>
                              </div>
                                  <div id="optionsItems">
                                      <h3>Weitere Optionen</h3>
                                            <div>

                @{
                    int KnayfValueCount = 0;
                }
                @if (ViewBag.countOptionsQueryKnayfI > 0)
                {
                    @for (int i = 0; i < ViewBag.optionsNameKnayfI.Count; i++)
                    {
                                                                        <div class="input-group">
                                                                           <div class="input-group-text" id="btnGroupAddon">
                                                                               <img  id="hilfeOptionsIcon" data-bs-toggle="modal" data-bs-target="#KanyfOptionsModal-@i" src="@("/Image/question.png")" height="20" width="20" />
                                                                           </div>
                                                                               <input class="form-control" id="OptionName"  readonly aria-label="Пример группы ввода" aria-describedby="btnGroupAddon" type="text" value="@ViewBag.optionsNameKnayfI[i].Name" />
                                                                         </div>


                                                                 <select style="margin-bottom: 10px;"  class="form-select" id="${BlockN}-Options-@i" onchange="OptionsSelect(${BlockN},'Knayf',event.target.id,event.target.value,@KnayfValueCount,'@ViewBag.optionsNameKnayfI[i].Name',@i,${BlockN})">

                                                                    @for (int j = 0; j < ViewBag.countOptionsListKnayfI[i]; j++)
                                                                    {
                                                                          <option id="@KnayfValueCount">@ViewBag.optionsValueKnayfI[KnayfValueCount]</option>

                                                                        KnayfValueCount++;
                                                                    }

                                                               </select>
                                                              <input type="hidden"  id="Option-${BlockN} + @i" />
                                                              <input type="hidden" id="d-${BlockN} + @i" />

                                                                   <div class="modal fade" id="KanyfOptionsModal-@i" tabindex="-1">
                                                                       <div class="modal-dialog modal-xl">
                                                                           <div class="modal-content">
                                                                               <div class="modal-header">
                                                                                               <h1 class="modal-title">@ViewBag.optionsNameKnayfI[i].Name</h1>
                                                                                   <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                                                               </div>
                                                                               <div class="modal-body">

                                                                                       <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                                                                           <div class="row g-0">
                                                                                               <div class="col-md-4">
                                                                                                           <img src="@("/Image/"+@ViewBag.optionsNameKnayfI[i].ImageName)" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                                                                               </div>
                                                                                               <div class="col-md-8">
                                                                                                   <div class="card-body">

                                                                                                       <div class="card-text">
                                                                                                        @Html.Raw(@ViewBag.optionsNameKnayfI[i].Description)
                                                                                                       </div>
                                                                                                   </div>
                                                                                               </div>
                                                                                           </div>
                                                                                       </div>
                                                                               </div>
                                                                               <div class="modal-footer">
                                                                                   <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                                                               </div>
                                                                           </div>
                                                                       </div>
                                                                   </div>

                                                        }

                                                                                                         <input type="hidden" name="KnayfOption" id="OptionAll-${BlockN}" />
                                                    }

                                               </div>
                                                              </div>
                                                                  </div>

                                 <div class="modal fade" id="ModalItemKnayf-@d" tabindex="-1">
                             <div class="modal-dialog modal-xl">
                                 <div class="modal-content">
                                     <div class="modal-header">
                                                 <h1 class="modal-title">${[KnayfInfo[0].Name]}</h1>
                                         <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                     </div>
                                     <div class="modal-body">

                                         <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                             <div class="row g-0">
                                                 <div class="col-md-4">
                                                         <img src="/Image/${img}" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                                 </div>
                                                 <div class="col-md-8">
                                                     <div class="card-body">

                                                         <div class="card-text">
                                                                ${[KnayfInfo[0].description]}
                                                         </div>
                                                     </div>
                                                 </div>
                                             </div>
                                         </div>
                                     </div>
                                     <div class="modal-footer">
                                         <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                     </div>
                                 </div>
                             </div>
                         </div>
                       `;
        }
        if (value == "Hebelzylinder") 
        {
            AllPrice.value = (parseFloat(AllPrice.value) + HelbInfo[0].Price);

            let img = HelbInfo[0].ImageName;

            block.innerHTML = `<input type="hidden" name="Helb" value="${[HelbInfo[0].Id]}" />
                        <div id="productImage">
                                <img  decoding="async" data-bs-toggle="modal" data-bs-target="#ModalHebel-@d" style="border: 2px solid rgba(237,237,237,0.5);" src="/Image/${img}" asp-append-version="true" width="300px" height="300px" />
                        </div>
                        <div id="productMenuInfo">
                            <div id="ProductNameUndCost">
                                <div>
                                            <h3>Tür name: ${Dorname[BlockN]}</h3>
                                            <input style="border: none;" readonly type="text" name="HelbName" value="${[HelbInfo[0].Name]}" />
                                                <input style="border: none;" type="hidden" name="NameSystem" value="${[HelbInfo[0].NameSystem]}" />
                                                <input style="border: none;" id="compName" type="hidden" value=${[HelbInfo[0].companyName]}" />
                                                    <input id="costItems-${BlockN}" type="hidden" value="${[HelbInfo[0].Price]}" />
                                </div>

                            </div>
                            <div>
                                   <select id="type-${BlockN}" class="form-select" onchange="switchTypeSylinder(${BlockN},event.target.value,1)">
                                    <option>Hebelzylinder</option>
                                    @foreach (var i in ViewBag.AllType)
                                    {
                                        if (@i.nameType != "Hebelzylinder")
                                        {
                                            <option>@i.nameType</option>
                                        }
                                    }

                                </select>
                            </div>
                                <div id="textInform">
                                    <h5>Stück</h5>
                            </div>
                                    <div id="Size-${BlockN}" class="SizeProduct">
                                <div>
                                            <button onclick="CylinderMinus(${BlockN})" type="button" class="btn btn-success">-</button>
                                                <input readonly  name="TurCounter" class="count_input_controll" type="number" min="1" value="1" id="countSchlusse-${BlockN}" />
                                        <button onclick="CylinderPlus(${BlockN})" type="button" class="btn btn-success">+</button>
                                </div>
                            </div>
                                <div id="optionsItems">
                                <h3>Weitere Optionen</h3>
                                <div>

                                @{
                                    int valueCountHebel = 0;
                                }

                               
                                </div>
                            </div>
                        </div>

            <div class="modal fade" id="ModalHebel-@d" tabindex="-1">
         <div class="modal-dialog modal-xl">
             <div class="modal-content">
                 <div class="modal-header">
                     <h1 class="modal-title">${[HelbInfo[0].Name]}</h1>
                     <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                 </div>
                 <div class="modal-body">

                     <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                         <div class="row g-0">
                             <div class="col-md-4">
                                 <img src="/Image/${img}" height="300" width="300" class="img-fluid rounded-start" alt="...">
                             </div>
                             <div class="col-md-8">
                                 <div class="card-body">

                                     <div class="card-text">
                                         ${HelbInfo[0].description}
          
                                     </div>
                                 </div>
                             </div>
                         </div>
                     </div>
                 </div>
                 <div class="modal-footer">
                     <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                 </div>
             </div>
         </div>
     </div>
                        
                        `;
        }
        if (value == "Vorhangschloss") 
        {
            AllPrice.value = (parseFloat(AllPrice.value) + VorhanschlosInfo[0].Price);

            let img = VorhanschlosInfo[0].ImageName;

            block.innerHTML = `  <input type="hidden" name="Vorhan" value="${VorhanschlosInfo[0].Id} " />
                        <div id="productImage">
                                <img  decoding="async" data-bs-toggle="modal" data-bs-target="#ModalVorhan-@d" style="border: 2px solid rgba(237,237,237,0.5);" src="/Image/${img}" asp-append-version="true" width="300px" height="300px" />
                        </div>
                        <div id="productMenuInfo">
                            <div id="ProductNameUndCost">
                                <div>
                                            <h3>Tür name: ${Dorname[BlockN]}</h3>
                                                <input style="border: none;" readonly type="text" name="VorhanName" value="${VorhanschlosInfo[0].Name}" />
                                                <input style="border: none;" type="hidden" name="NameSystem" value="${VorhanschlosInfo[0].NameSystem}" />
                                                <input style="border: none;" id="compName" type="hidden" value="${VorhanschlosInfo[0].companyName}" />
                                                    <input id="costItems-${BlockN}" type="hidden" value="${VorhanschlosInfo[0].Price}" />
                                </div>

                            </div>
                            <div>
                              <select id="type-${BlockN}" class="form-select" onchange="switchTypeSylinder(${BlockN},event.target.value,${elemNum})">
                                 <option>Vorhangschloss</option>
                                    @foreach (var i in ViewBag.AllType)
                                    {
                                        if (@i.nameType != "Vorhangschloss")
                                        {
                                           <option>@i.nameType</option>
                                        }
                                    }

                                </select>
                            </div>
                            <div id="textInform">
                                    <h5>Zylinderlänge</h5>
                                    <h5>Stück</h5>
                            </div>
                                    <div id="Size-${BlockN}" class="SizeProduct">
                                <div>
                                      <select class="form-select" name="VorhanAussen" id="Aussen" onchange="VorhanSchlus(${BlockN},event.target.selectedIndex+1)">

                                        @for (int i = 0; i < ViewBag.VorhanSize.Count; i++)
                                        {
                                                 <option id="OptionA">@ViewBag.VorhanSize[i]</option>
                                        }
                                   
                                        </select>
                                       <input type="hidden" id="Aussen-${BlockN}" />
                                </div>
                                <div style="gap: 10px;display: flex;margin-left: 50px;">
                                  <button type="button" onclick="CylinderMinus(${BlockN})" class="btn btn-success">-</button>
                                  <input name="TurCounter" readonly style="border: none;max-width: 30px;" type="number" min="1" id="countSchlusse-${BlockN}" value="1" />
                                  <button type="button" onclick="CylinderPlus(${BlockN})" class="btn btn-success">+</button>
                                </div>

                            </div>
                                <div id="optionsItems">
                                <h3>Weitere Optionen</h3>
                                <div>
                                    
                                </div>
                            </div>      
                        </div>
                            <div class="modal fade" id="ModalVorhan-@d" tabindex="-1">
                         <div class="modal-dialog modal-xl">
                             <div class="modal-content">
                                 <div class="modal-header">
                                             <h1 class="modal-title">${[VorhanschlosInfo[0].Name]}</h1>
                                     <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                 </div>
                                 <div class="modal-body">

                                     <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                         <div class="row g-0">
                                             <div class="col-md-4">
                                                     <img src="/Image/${img}" height="300" width="300" class="img-fluid rounded-start" alt="...">
                                             </div>
                                             <div class="col-md-8">
                                                 <div class="card-body">

                                                     <div class="card-text">
                                                             ${VorhanschlosInfo[0].description}
                                                     </div>
                                                 </div>
                                             </div>
                                         </div>
                                     </div>
                                 </div>
                                 <div class="modal-footer">
                                     <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                 </div>
                             </div>
                         </div>
                     </div>
                        
                        
                        `;
        }
        if (value == "Aussenzylinder") 
        {
            AllPrice.value = (parseFloat(AllPrice.value) + AussenzylinderInfo[0].Price);
            let img = AussenzylinderInfo[0].ImageName;

            block.innerHTML = `<input type="hidden" name="Aussen" value="${AussenzylinderInfo[0].Id}" />
           
            <div id="productImage">
                <img  decoding="async" data-bs-toggle="modal" data-bs-target="#ModalAussenzylinder-@d"  style="border: 2px solid rgba(237,237,237,0.5);" src="/Image/${img}" asp-append-version="true" width="300px" height="300px" />
                </div>
            <div id="productMenuInfo">
                <div id="ProductNameUndCost">
                    <div>
                       <h3>Tür name: ${Dorname[BlockN]}</h3>
                        <input style="border: none;" readonly type="text" name="AussenName" value="${[AussenzylinderInfo[0].Name]}" />
                            <input style="border: none;" type="hidden" name="NameSystem" value="${[AussenzylinderInfo[0].NameSystem]}" />
                               <input style="border: none;" id="compName" type="hidden" value="${[AussenzylinderInfo[0].companyName]}" />
                                <input id="costItems-${[BlockN]}" type="hidden" value="${[AussenzylinderInfo[0].Price]}" />
                        </div>
                    </div>
                         <div>
                              <div>
                                <select id="type-${BlockN}" class="form-select" onchange="switchTypeSylinder(${BlockN},event.target.value,${elemNum})">

                        <option selected>Aussenzylinder</option>

                    @foreach (var i in @ViewBag.AllType)
                    {
                        if (@i.nameType != "Aussenzylinder")
                        {
                            <option>@i.nameType</option>
                        }
                    }
                    </select>
                </div>

                    <div id="textInform">
                    <h5>Stück</h5>
                </div>
                        <div id="Size-${BlockN}" class="SizeProduct">
                            <button type="button" onclick="CylinderMinus(${BlockN})" class="btn btn-success">-</button>
                           
                                <input class="count_input_controll" readonly name="TurCounter" type="number" min="1" value="1" id="countSchlusse-${BlockN}" />
                           
                            <button type="button" onclick="CylinderPlus(${BlockN})" class="btn btn-success">+</button>

                </div>
                     <div id="optionsItems">
            <h3>Weitere Optionen</h3>
            <div>
                @{
                    int ValueAussen = 0;
                }

            @if (ViewBag.AussenCountOption > 0)
            {
                @for (int i = 0; i < ViewBag.AussenName.Count; i++)
                {
                                       <input class="form-control" id="OptionName" style="margin-top: 5px;" readonly type="text" value="@ViewBag.AussenName[i]" />
                                         <img onclick="OpenDescriptions(@i)"  id="hilfeOptionsIcon" src="@("/Image/question.png")" height="20" width="20" />
                                       <select style="margin-bottom: 10px;"  class="form-select" id="@d-Options-@i" onchange="OptionsSelect(@d,'Aussen',event.target.id,event.target.value,@ValueAussen,'@ViewBag.AussenName[i]',@i,@d)">

                                        @for (int j = 0; j < ViewBag.AussenValue[i]; j++)
                                        {
                                           <option id="@value">@ViewBag.AussenValue[ValueAussen]</option>

                                            ValueAussen++;
                                        }

                                        </select>
                                            <input type="hidden" id="d-@d + @i" />
                                            <input type="hidden"  id="Option-@d + @i" />

                }
                                    <input type="hidden" name="AussenOption" id="OptionAll-@d" />
            }
                    </div
                </div>
            </div>

       <div class="modal fade" id="ModalAussenzylinder-@d" tabindex="-1">
         <div class="modal-dialog modal-xl">
             <div class="modal-content">
                 <div class="modal-header">
                         <h1 class="modal-title">${[AussenzylinderInfo[0].Name]}</h1>
                     <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                 </div>
                 <div class="modal-body">

                     <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                         <div class="row g-0">
                             <div class="col-md-4">
                                     <img src="/Image/${img}" height="300" width="300" class="img-fluid rounded-start" alt="...">
                             </div>
                             <div class="col-md-8">
                                 <div class="card-body">

                                     <div class="card-text">
                                         ${AussenzylinderInfo[0].description}
                                     </div>
                                 </div>
                             </div>
                         </div>
                     </div>
                 </div>
                 <div class="modal-footer">
                     <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                 </div>
             </div>
         </div>
     </div>
            
            `;
        }

        procent();
    }

    function saveCurrentURL() {
        const currentURL = window.location.href;
        localStorage.setItem('currentURL', currentURL);
    }

    saveCurrentURL()

    function OptionsSelect(idBlock, TypeSylinder, id, optionsValue, elemNum, OptionsName, N,count) 
    {
        let costItems = document.getElementById("costItems-" + idBlock);

        let countSchluss = document.getElementById("countSchlusse-" + count);

        let BlockTur = document.getElementById("ExelItem-" + idBlock);

        let QueryNameOptions = BlockTur.querySelectorAll("#OptionName");

        let Selector = document.getElementById(id);

        let TotalOptions = document.getElementById("OptionAll-" + idBlock);

        let AllSelectro = BlockTur.querySelectorAll("select");

        let selectedOption = Selector.options[Selector.selectedIndex].id;

        QueryNameOptions.forEach((item)=>
        {
            if (item.defaultValue === OptionsName ) 
            {

                if (optionsValue != "Nein") 
                {
                    item.value = '\u2713' + OptionsName;
                    item.style.color = "green";

                    if (item.value === '\u2713' + "NGF = Not- und Gefahrenfunktion") 
                    {
                        hasNotUndGefahrenfunktion = true;
                        
                        if (item.value === '\u2713' + "NGF = Not- und Gefahrenfunktion" && hasFreilauffunktion === true && hasNotUndGefahrenfunktion === true) {
                            for (let i = 0; i < QueryNameOptions.length; i++) 
                            {
                                if (QueryNameOptions[i].value === '\u2713' + "F = Freilauffunktion") {
                                     let OptionOldCheker = document.getElementById(`d-${idBlock} + ${i}`);

                                     costItems.value = parseFloat(costItems.value) - (OptionOldCheker.value);

                                    AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                                    QueryNameOptions[i].value = QueryNameOptions[i].defaultValue;

                                    let regex = QueryNameOptions[i].value;

                                    TotalOptions.value = TotalOptions.value.replace(regex + ':  Ja, ', '');

                                    QueryNameOptions[i].style.color = "black";
                                    var chekedSelect = document.getElementById(idBlock + "-Options-" + i);
                                    chekedSelect.value = "Nein";
                                    hasNotUndGefahrenfunktion == false;
                                }
                            }                            
                            
                        }
                    }
                    if (item.value === '\u2713' + "F = Freilauffunktion") {
                        hasFreilauffunktion = true;

                        if (item.value === '\u2713' + "F = Freilauffunktion" && hasFreilauffunktion === true && hasNotUndGefahrenfunktion === true) {
                            for (let i = 0; i < QueryNameOptions.length; i++) 
                            {
                                if (QueryNameOptions[i].value === '\u2713' + "NGF = Not- und Gefahrenfunktion") 
                                {
                                    let OptionOldCheker = document.getElementById(`d-${idBlock} + ${i}`);

                                    costItems.value = parseFloat(costItems.value) - (OptionOldCheker.value);

                                    AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                                    QueryNameOptions[i].value = QueryNameOptions[i].defaultValue;
                                    QueryNameOptions[i].style.color = "black";

                                    let regex = QueryNameOptions[i].value;

                                     TotalOptions.value = TotalOptions.value.replace(regex + ':  Ja, ', '');

                                    var chekedSelect = document.getElementById(idBlock + "-Options-" + i);
                                    chekedSelect.value = "Nein";
                                    hasFreilauffunktion == false;
                                }

                            }
                        }
                    }

                    if (TypeSylinder === "Doppel") 
                    {
                             let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);

                             TotalOptions.value += `${item.defaultValue}:  ${optionsValue}` + ", ";

                             costItems.value = parseFloat(costItems.value) + (DoppelCostValue[selectedOption]);

                            AllPrice.value = parseFloat(AllPrice.value) + (DoppelCostValue[selectedOption] * Number(countSchluss.value));
                            
                            OptionOldCheker.value = DoppelCostValue[selectedOption];

                    }
                    if (TypeSylinder === "Knayf") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);

                        TotalOptions.value += `${item.defaultValue}:  ${optionsValue}` + ", ";

                        costItems.value = parseFloat(costItems.value) + (KnayfOptionPrice[selectedOption]);

                        AllPrice.value = parseFloat(AllPrice.value) + (KnayfOptionPrice[selectedOption] * Number(countSchluss.value));
                        OptionOldCheker.value = KnayfOptionPrice[selectedOption];
                    }
                    if (TypeSylinder === "Halb")
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);

                        TotalOptions.value += `${item.defaultValue}:  ${optionsValue}` + ", ";

                        costItems.value = parseFloat(costItems.value) + (HalbOptionsValueCost[selectedOption]);
                        AllPrice.value = parseFloat(AllPrice.value) + (HalbOptionsValueCost[selectedOption] * Number(countSchluss.value));
                        
                        OptionOldCheker.value = HalbOptionsValueCost[selectedOption];
                    }
                    if (TypeSylinder === "Helb") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);

                        TotalOptions.value += `${item.defaultValue}:  ${optionsValue}` + ", ";

                        costItems.value = parseFloat(costItems.value) + (HebelOptionsCost[selectedOption]);

                        AllPrice.value = parseFloat(AllPrice.value) + (HebelOptionsCost[selectedOption] * Number(countSchluss.value));
                        OptionOldCheker.value = HebelOptionsCost[selectedOption];
                    }
                    if (TypeSylinder === "Vorhan") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);

                        TotalOptions.value += `${item.defaultValue}:  ${optionsValue}` + ", ";

                        costItems.value = parseFloat(costItems.value) + (VorhanSchlossValueCost[selectedOption]);

                        AllPrice.value = parseFloat(AllPrice.value) + (VorhanSchlossValueCost[selectedOption] * Number(countSchluss.value));
                        OptionOldCheker.value = VorhanSchlossValueCost[selectedOption];
                    }
                    if (TypeSylinder === "Aussen") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);

                        TotalOptions.value += `${item.defaultValue}:  ${optionsValue}` + ", ";

                        costItems.value = parseFloat(costItems.value) + (AussenRundOptionsCostValue[selectedOption]);

                        AllPrice.value = parseFloat(AllPrice.value) + (AussenRundOptionsCostValue[selectedOption] * Number(countSchluss.value));
                        OptionOldCheker.value = AussenRundOptionsCostValue[selectedOption];
                    }
                }
                else 
                {
                    if (TypeSylinder === "Doppel") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);

                        let regex = item.defaultValue;  

                        let info = TotalOptions.value;

                        let str = info.replace(`${regex}:  Ja, `, ' ');

                        TotalOptions.value = str;

                        let OptionDoppel = document.getElementById(`Option-${idBlock} + ${N}`);
                        
                        OptionDoppel.value = ``;

                        costItems.value = parseFloat(costItems.value) - (OptionOldCheker.value);

                        AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                        item.value = OptionsName;

                        item.style.color = "black";
                    }
                    if (TypeSylinder === "Knayf") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);

                        let regex = item.defaultValue;
                        TotalOptions.value = TotalOptions.value.replace(regex + ':  Ja, ', '');

                        let OptionKnayf = document.getElementById(`Option-${idBlock} + ${N}`);
                        OptionKnayf.value = ``;
                        
                        costItems.value = parseFloat(costItems.value) - (OptionOldCheker.value);

                        AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                        item.value = OptionsName;
                        item.style.color = "black";
                    }
                    if (TypeSylinder === "Halb") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);

                        let regex = item.defaultValue;
                        TotalOptions.value = TotalOptions.value.replace(regex + ':  Ja, ', '');

                        let OptionHalb = document.getElementById(`Option-${idBlock} + ${N}`);
                        OptionHalb.value = ``;
                        
                        costItems.value = parseFloat(costItems.value) - (OptionOldCheker.value);

                        AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                        item.value = OptionsName;
                        item.style.color = "black";
                    }
                    if (TypeSylinder === "Helb") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);

                        let regex = item.defaultValue;
                        TotalOptions.value = TotalOptions.value.replace(regex + ':  Ja, ', '');

                        let OptionHelb = document.getElementById(`Option-${idBlock} + ${N}`);
                        OptionHelb.value = ``;

                        costItems.value = parseFloat(costItems.value) - (OptionOldCheker.value);

                        AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                        item.value = OptionsName;
                        item.style.color = "black";
                    }
                    if (TypeSylinder === "Vorhan") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);

                        let regex = item.defaultValue;
                        TotalOptions.value = TotalOptions.value.replace(regex + ':  Ja, ', '');

                        let OptionVorhan = document.getElementById(`Option-${idBlock} + ${N}`);
                        OptionVorhan.value = ``;

                        costItems.value = parseFloat(costItems.value) - (OptionOldCheker.value);

                        AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                        item.value = OptionsName;
                        item.style.color = "black";
                    }
                    if (TypeSylinder === "Aussen") 
                    {
                        let OptionOldCheker = document.getElementById(`d-${idBlock} + ${N}`);

                        let regex = item.defaultValue;
                        TotalOptions.value = TotalOptions.value.replace(regex + ':  Ja, ', '');

                        let OptionAussen = document.getElementById(`Option-${idBlock} + ${N}`);
                        OptionAussen.value = ``;

                        costItems.value = parseFloat(costItems.value) - (OptionOldCheker.value);

                        AllPrice.value = (parseFloat(AllPrice.value) - (OptionOldCheker.value * Number(countSchluss.value)));
                        item.value = OptionsName;
                        item.style.color = "black";
                    }
                }
            }
        });
        procent();
    }

    function plus(n) 
    {
        let counter = document.getElementById("countKey-" + n);
        let value = Number(counter.value);
        value++;
        counter.value = value;
        AllPrice.value = parseFloat(AllPrice.value) + keyPrice;
        procent();
    }
    function minus(n) 
    {
        let counter = document.getElementById("countKey-" + n);
        let value = Number(counter.value);
        value--;

        if (value >= 0) 
        {
            counter.value = value;
            AllPrice.value = parseFloat(AllPrice.value) - keyPrice;
        }
        procent();
    }
    function CylinderPlus(n) 
    {
        let counter = document.getElementById("countSchlusse-" + n);

        let costItems = document.getElementById("costItems-" + n);

        let value = Number(counter.value);

        value++;

        counter.value = value;

        AllPrice.value = parseFloat(AllPrice.value) + parseFloat(costItems.value);
        
        procent();
    }
    function CylinderMinus(n) 
    {
        let counter = document.getElementById("countSchlusse-" + n);
        let CountValue = Number(counter.value);
        let costItems = document.getElementById("costItems-" + n);
       
        if (CountValue > 1) 
        {
            CountValue--;
            counter.value = CountValue;

            AllPrice.value = parseFloat(AllPrice.value) - parseFloat(costItems.value);
        }
        procent();
    }

    function VorhanSchlus(idBlock, selectId) 
    {
        let BlockTur = document.getElementById("Size-" + idBlock);

        let SelectItemId = selectId-1;

        let costItems = document.getElementById("costItems-" + idBlock);
        let countSchluss = BlockTur.querySelector("#countSchlusse-" + idBlock);
   
        let oldAussen = BlockTur.querySelector("#Aussen-" + idBlock);
        
        if (oldAussen.value === "") 
        {
            oldAussen.value = 0;
        }

        AllPrice.value = parseFloat(AllPrice.value) - (VorhanSizeCost[oldAussen.value] * Number(countSchluss.value));
        costItems.value = parseFloat(costItems.value) - (VorhanSizeCost[oldAussen.value]);

        oldAussen.value = SelectItemId;


        costItems.value = parseFloat(costItems.value) + (VorhanSizeCost[SelectItemId]);
        AllPrice.value = parseFloat(AllPrice.value) + (VorhanSizeCost[SelectItemId] * Number(countSchluss.value));

        let Costen = AllPrice.value.replace(/,/g, '.');

        AllPrice.value = Costen;
        
        procent();
    }
     document.addEventListener('DOMContentLoaded', async function() 
     {
       procent();

       let countBlock = @d;

         for (let i = 0; i < countBlock;i++)
         {
            let BlockTur = document.getElementById("Size-" + i);
            let oldAussen = BlockTur.querySelector("#Aussen-" + i);
            let oldInnen = BlockTur.querySelector("#Innen-" + i);
            let Aussen = BlockTur.querySelector("#Aussen");
            let Innen = BlockTur.querySelector("#Intern");

             if (Aussen != null) 
             {
                    for (var t = 0; t < Aussen.options.length; t++) 
                    {
                        if (t == 0) 
                        {

                        }
                        else 
                        {
                                if (Aussen.options[t].value === Aussen.value) 
                                {
                                    oldAussen.value = t-1;
                                    break; 
                                }
                        }
               
                    }
             }
            if (Innen != null) 
            {
                    for (var f = 0; f < Innen.options.length; f++) {
                        if (f == 0) {

                        }
                        else {
                            if (Innen.options[f].value === Innen.value) {
                                oldInnen.value = f - 1;
                                break;
                            }
                        }

                    }
            }
           
            
        }

     });

    function liferung() 
    {
      
        let WaitTime = document.querySelector("#lifer");
        let Aussen = document.querySelectorAll("#Aussen");
        let Innen = document.querySelectorAll("#Intern");

        if (Aussen != null)
        {
            let AussenCheked = Array.from(Aussen)
                .map(element => parseFloat(element.value)) 
                .some(value => value >= 55);


            if (AussenCheked == true) 
            {
                WaitTime.textContent = liferungGroz.map(text => text.replace(/<[^>]*>/g, '').trim());
            }
            else 
            {
                WaitTime.textContent = liferun.map(text => text.replace(/<[^>]*>/g, '').trim());
            }
            if (Innen != null && !AussenCheked)
            {
                let InternCheked = Array.from(Innen)
                    .map(element => parseFloat(element.value))
                    .some(value => value >= 55);

                if (InternCheked == true) 
                {
                    WaitTime.textContent = liferungGroz.map(text => text.replace(/<[^>]*>/g, '').trim());
                }
                else{
                    WaitTime.textContent = liferun.map(text => text.replace(/<[^>]*>/g, '').trim());
                }
            }
        }
    }

    function selectParamAussen(idBlock,type,selectId) 
    {
        let SelectItemId = selectId-1;
        let is_GrossSize = false;
        let BlockTur = document.getElementById("Size-"+idBlock);
        let countSchluss = BlockTur.querySelector("#countSchlusse-" + idBlock);

        let company = BlockTur.querySelector("#compName");

        let ProductBlock = document.getElementById("ExelItem-" + idBlock);
        let Innen = BlockTur.querySelector("#Intern");
        
        if (Innen != null) 
        {
            var InnenItem = Innen.querySelectorAll("#OptionI");
        }
     
        let Aussen = BlockTur.querySelector("#Aussen");
        let Aitems = Aussen.querySelectorAll("#OptionA");
        let oldAussen = BlockTur.querySelector("#Aussen-" + idBlock);
        let oldIntern = BlockTur.querySelector("#Innen-" + idBlock);

        let oldValueStart = Aitems;

        let costItems = document.getElementById("costItems-" + idBlock);

        if (oldAussen.value === "") 
        {
            oldAussen.value = 0;
        }

                    if (type === "Doppelzylinder") 
                    {
                        for (let i = 0; i <= oldAussen.value;i++) 
                        {

                            costItems.value = parseFloat(costItems.value) - (priceDoppelAussenCost[i]);

                            AllPrice.value = parseFloat(AllPrice.value) - (priceDoppelAussenCost[i] * Number(countSchluss.value));

                            let Costen = AllPrice.value.replace(/,/g, '.');

                            AllPrice.value = Costen;

                        }
                    }
                    if (type === "Halbzylinder") 
                    {
                        for (let i = 0; i <= oldAussen.value; i++) 
                        {
                            costItems.value = parseFloat(costItems.value) - (halbAussenCost[i]);

                            AllPrice.value = parseFloat(AllPrice.value) - (halbAussenCost[i] * Number(countSchluss.value));

                            let Costen = AllPrice.value.replace(/,/g, '.');

                            AllPrice.value = Costen;
                        }
                    }
                    if (type === "Knaufzylinder") 
                    {
                        for (let i = 0; i <= oldAussen.value; i++) 
                        {

                            costItems.value = parseFloat(costItems.value) - (priceKnayfAussenCost[i]);

                            AllPrice.value = parseFloat(AllPrice.value) - (priceKnayfAussenCost[i] * Number(countSchluss.value));

                            let Costen = AllPrice.value.replace(/,/g, '.');

                            AllPrice.value = Costen;

                        }
                    }
          

                    if (type === "Doppelzylinder") 
                    {
                        if (kleinSize.length > 0) 
                        {
                                if (Aussen.value > 29 && is_GrossSize == false) 
                                {
                                    for (let i = 0; i < normalDopelSize.length; i++) 
                                    {
                                        if (i >= InnenItem.length) 
                                        {
                                            let options = document.createElement("option");
                                            options.id = "OptionI";
                                            options.value = normalDopelSize[i];
                                            options.textContent = normalDopelSize[i];
                                            Innen.appendChild(options);
                                        }
                                        else {
                                            InnenItem[i].value = normalDopelSize[i];
                                            InnenItem[i].textContent = normalDopelSize[i];
                                            InnenItem[i].style.display = "block";
                                        }

                                    }
                                    for (let i = 0; i <= oldIntern.value; i++) 
                                    {
                                        if (kleinSize.length > 0) 
                                        {
                                            if (Aussen.value > 29 ) 
                                            {

                                                costItems.value = parseFloat(costItems.value) - (priceDoppelInternCost[i]);

                                                AllPrice.value = parseFloat(AllPrice.value) - (priceDoppelInternCost[i] * Number(countSchluss.value));

                                                let Costen = AllPrice.value.replace(/,/g, '.');

                                                AllPrice.value = Costen;
                                            }
                                            else {
                                                costItems.value = parseFloat(costItems.value) - (kleinPrice[i]);

                                                AllPrice.value = parseFloat(AllPrice.value) - (kleinPrice[i] * Number(countSchluss.value));

                                                let Costen = AllPrice.value.replace(/,/g, '.');

                                                AllPrice.value = Costen;

                                            }
                                        }
                                        else {
                                            costItems.value = parseFloat(costItems.value) - (priceDoppelInternCost[i]);

                                            AllPrice.value = parseFloat(AllPrice.value) - (priceDoppelInternCost[i] * Number(countSchluss.value));

                                            let Costen = AllPrice.value.replace(/,/g, '.');

                                            AllPrice.value = Costen;
                                        }
                                    }
                                    is_GrossSize = true;
                                    Innen.value = InnenItem[0].value;
                                    oldIntern.value = 0;
                                }
                                else 
                                {

                                    for (let i = 0; i < InnenItem.length; i++) 
                                    {
                                        if (i >= kleinSize.length) 
                                        {
                                            InnenItem[i].style.display = "none";
                                        }
                                        else 
                                        {
                                            InnenItem[i].value = kleinSize[i];
                                            InnenItem[i].textContent = kleinSize[i];
                                        }

                                    }

                                            for (let i = 0; i <= oldIntern.value; i++) 
                                            {
                                                if (kleinSize.length > 0 && oldIntern.value>0) 
                                                {
                                                    if (Aussen.value > 29 || oldIntern.value > kleinPrice.length) 
                                                    {
                                                        costItems.value = parseFloat(costItems.value) - (priceDoppelInternCost[i]);

                                                        AllPrice.value = parseFloat(AllPrice.value) - (priceDoppelInternCost[i] * Number(countSchluss.value));

                                                        let Costen = AllPrice.value.replace(/,/g, '.');

                                                        AllPrice.value = Costen;
                                                    }
                                                    else 
                                                    {
                                                             costItems.value = parseFloat(costItems.value) - (kleinPrice[i]);

                                                            AllPrice.value = parseFloat(AllPrice.value) - (kleinPrice[i] * Number(countSchluss.value));

                                                            let Costen = AllPrice.value.replace(/,/g, '.');

                                                            AllPrice.value = Costen;
                                                    }
                                                }
                                                else 
                                                {
                                                    costItems.value = parseFloat(costItems.value) - (priceDoppelInternCost[i]);

                                                    AllPrice.value = parseFloat(AllPrice.value) - (priceDoppelInternCost[i] * Number(countSchluss.value));

                                                    let Costen = AllPrice.value.replace(/,/g, '.');

                                                    AllPrice.value = Costen;
                                                }
                                            }

                                    Innen.value = InnenItem[0].value;
                                    is_GrossSize = false;
                                    oldIntern.value = 0;

                                }
                        }
                           

                        for (let s = 0; s <= SelectItemId;s++) 
                        {
                           
                                costItems.value = parseFloat(costItems.value) + (priceDoppelAussenCost[s]);

                                AllPrice.value = parseFloat(AllPrice.value) + (priceDoppelAussenCost[s] * Number(countSchluss.value));

                                let Costen = AllPrice.value.replace(/,/g, '.');

                                AllPrice.value = Costen;

                        }
                    }
                    if (type === "Halbzylinder") 
                    {
                        for (let s = 0; s <= SelectItemId; s++)
                        {
                            costItems.value = parseFloat(costItems.value) + (halbAussenCost[s]);

                            AllPrice.value = parseFloat(AllPrice.value) + (halbAussenCost[s] * Number(countSchluss.value));

                            let Costen = AllPrice.value.replace(/,/g, '.');

                            AllPrice.value = Costen;

                        }
                    }
                    if (type === "Knaufzylinder") 
                    {
                            if (kleinKnayf.length > 0) 
                            {
                                if (Aussen.value > 29 && is_GrossSize == false) 
                                {
                                    for (let i = 0; i < KnayfZiseNormal.length; i++) 
                                    {
                                        if (i >= InnenItem.length) {
                                            let options = document.createElement("option");
                                            options.id = "OptionI";
                                            options.value = KnayfZiseNormal[i];
                                            options.textContent = KnayfZiseNormal[i];
                                            Innen.appendChild(options);
                                        }
                                        else {
                                            InnenItem[i].value = KnayfZiseNormal[i];
                                            InnenItem[i].textContent = KnayfZiseNormal[i];
                                            InnenItem[i].style.display = "block";
                                        }

                                    }
                                    for (let i = 0; i <= oldIntern.value; i++) 
                                    {
                                        if (kleinKnayf.length > 0) 
                                        {
                                            if (Aussen.value > 29) 
                                            {

                                                costItems.value = parseFloat(costItems.value) - (priceKnayfInternCost[i]);

                                                AllPrice.value = parseFloat(AllPrice.value) - (priceKnayfInternCost[i] * Number(countSchluss.value));

                                                let Costen = AllPrice.value.replace(/,/g, '.');

                                                AllPrice.value = Costen;
                                            }
                                            else {
                                                costItems.value = parseFloat(costItems.value) - (kleinKnayfPrice[i]);

                                                AllPrice.value = parseFloat(AllPrice.value) - (kleinKnayfPrice[i] * Number(countSchluss.value));

                                                let Costen = AllPrice.value.replace(/,/g, '.');

                                                AllPrice.value = Costen;

                                            }
                                        }
                                        else {
                                            costItems.value = parseFloat(costItems.value) - (priceKnayfInternCost[i]);

                                            AllPrice.value = parseFloat(AllPrice.value) - (priceKnayfInternCost[i] * Number(countSchluss.value));

                                            let Costen = AllPrice.value.replace(/,/g, '.');

                                            AllPrice.value = Costen;
                                        }
                                    }
                                    is_GrossSize = true;
                                    Innen.value = InnenItem[0].value;
                                    oldIntern.value = 0;
                                }
                                else {

                                    for (let i = 0; i < InnenItem.length; i++) 
                                    {
                                        if (i >= kleinKnayf.length) 
                                        {
                                            InnenItem[i].style.display = "none";
                                        }
                                        else {
                                            InnenItem[i].value = kleinKnayf[i];
                                            InnenItem[i].textContent = kleinKnayf[i];
                                        }

                                    }

                                    for (let i = 0; i <= oldIntern.value; i++) 
                                    {
                                        if (kleinKnayf.length > 0 && oldIntern.value > 0) 
                                        {
                                            if (Aussen.value > 29 || oldIntern.value > kleinKnayfPrice.length) 
                                            {
                                                costItems.value = parseFloat(costItems.value) - (priceKnayfInternCost[i]);

                                                AllPrice.value = parseFloat(AllPrice.value) - (priceKnayfInternCost[i] * Number(countSchluss.value));

                                                let Costen = AllPrice.value.replace(/,/g, '.');

                                                AllPrice.value = Costen;
                                            }
                                            else {
                                                costItems.value = parseFloat(costItems.value) - (kleinKnayfPrice[i]);

                                                AllPrice.value = parseFloat(AllPrice.value) - (kleinKnayfPrice[i] * Number(countSchluss.value));

                                                let Costen = AllPrice.value.replace(/,/g, '.');

                                                AllPrice.value = Costen;
                                            }
                                        }
                                        else {
                                            costItems.value = parseFloat(costItems.value) - (priceKnayfInternCost[i]);

                                            AllPrice.value = parseFloat(AllPrice.value) - (priceKnayfInternCost[i] * Number(countSchluss.value));

                                            let Costen = AllPrice.value.replace(/,/g, '.');

                                            AllPrice.value = Costen;
                                        }
                                    }

                                    Innen.value = InnenItem[0].value;
                                    is_GrossSize = false;
                                    oldIntern.value = 0;

                                }
                            }

                        for (let s = 0; s <= SelectItemId;s++) 
                        {

                            costItems.value = parseFloat(costItems.value) + (priceKnayfAussenCost[s]);

                            AllPrice.value = parseFloat(AllPrice.value) + (priceKnayfAussenCost[s] * Number(countSchluss.value));

                            let Costen = AllPrice.value.replace(/,/g, '.');

                            AllPrice.value = Costen;
                        }
                    }

                    oldAussen.value = SelectItemId;

        procent();
        liferung();
    }
    function selectParamIntern(idBlock,type,selectId) 
    {
        let ProductBlock = document.getElementById("ExelItem-" + idBlock);
        let BlockTur = document.getElementById("Size-" + idBlock);
        let countSchluss = BlockTur.querySelector("#countSchlusse-" + idBlock);

        let SelectItemId = selectId-1;

        let costItems = document.getElementById("costItems-" + idBlock);

        let Aussen = BlockTur.querySelector("#Aussen");
        let company = BlockTur.querySelector("#compName");
        let Innen = BlockTur.querySelector("#Intern");
        let Aitems = Innen.querySelectorAll("#OptionI");
        let oldAussen = BlockTur.querySelector("#Innen-" + idBlock);

        if (oldAussen.value === "") 
        {
            oldAussen.value = 0;
        }

                    if (type === "Doppelzylinder") 
                    {
                        for (let i = 0; i <= oldAussen.value;i++) 
                        {
                            if (kleinSize.length > 0) 
                            {
                                    if (Aussen.value > 29) 
                                    {
                                        costItems.value = parseFloat(costItems.value) - (priceDoppelInternCost[i]);

                                        AllPrice.value = parseFloat(AllPrice.value) - (priceDoppelInternCost[i] * Number(countSchluss.value));

                                        let Costen = AllPrice.value.replace(/,/g, '.');

                                        AllPrice.value = Costen;
                                    }
                                    else {
                                        costItems.value = parseFloat(costItems.value) - (kleinPrice[i]);

                                        AllPrice.value = parseFloat(AllPrice.value) - (kleinPrice[i] * Number(countSchluss.value));

                                        let Costen = AllPrice.value.replace(/,/g, '.');

                                        AllPrice.value = Costen;

                                    }
                            }
                            else 
                            {
                                costItems.value = parseFloat(costItems.value) - (priceDoppelInternCost[i]);

                                AllPrice.value = parseFloat(AllPrice.value) - (priceDoppelInternCost[i] * Number(countSchluss.value));

                                let Costen = AllPrice.value.replace(/,/g, '.');

                                AllPrice.value = Costen;
                            }
                        }
                    }
                    
                    if (type === "Knaufzylinder") 
                    {
                            for (let i = 0; i <= oldAussen.value; i++) 
                            {
                                if (kleinSize.length > 0) 
                                {
                                    if (Aussen.value > 29) 
                                    {
                                        costItems.value = parseFloat(costItems.value) - (priceKnayfInternCost[i]);

                                        AllPrice.value = parseFloat(AllPrice.value) - (priceKnayfInternCost[i] * Number(countSchluss.value));

                                        let Costen = AllPrice.value.replace(/,/g, '.');

                                        AllPrice.value = Costen;
                                    }
                                    else 
                                    {
                                        costItems.value = parseFloat(costItems.value) - (kleinKnayfPrice[i]);

                                        AllPrice.value = parseFloat(AllPrice.value) - (kleinKnayfPrice[i] * Number(countSchluss.value));

                                        let Costen = AllPrice.value.replace(/,/g, '.');

                                        AllPrice.value = Costen;

                                    }
                                }
                                else 
                                {
                                    costItems.value = parseFloat(costItems.value) - (priceKnayfInternCost[i]);

                                    AllPrice.value = parseFloat(AllPrice.value) - (priceKnayfInternCost[i] * Number(countSchluss.value));

                                    let Costen = AllPrice.value.replace(/,/g, '.');

                                    AllPrice.value = Costen;
                                }
                            }
                       
                    }
          

                    if (type === "Doppelzylinder") 
                    {
                        for (let s = 0; s <= SelectItemId;s++) 
                        {
                            if (kleinSize.length > 0) 
                            {
                                if (Aussen.value > 29) 
                                {
                                    costItems.value = parseFloat(costItems.value) + (priceDoppelInternCost[s]);

                                    AllPrice.value = parseFloat(AllPrice.value) + (priceDoppelInternCost[s] * Number(countSchluss.value));

                                    let Costen = AllPrice.value.replace(/,/g, '.');

                                    AllPrice.value = Costen;
                                }
                                else {
                                    costItems.value = parseFloat(costItems.value) + (kleinPrice[s]);

                                    AllPrice.value = parseFloat(AllPrice.value) + (kleinPrice[s] * Number(countSchluss.value));

                                    let Costen = AllPrice.value.replace(/,/g, '.');

                                    AllPrice.value = Costen;

                                }
                            }
                            else 
                            { 
                                costItems.value = parseFloat(costItems.value) + (priceDoppelInternCost[s]);

                                    AllPrice.value = parseFloat(AllPrice.value) + (priceDoppelInternCost[s] * Number(countSchluss.value));

                                    let Costen = AllPrice.value.replace(/,/g, '.');

                                    AllPrice.value = Costen;
                            }
                           
                      
                        }

                    }
                   
                    if (type === "Knaufzylinder") 
                    {
                                for (let s = 0; s <= SelectItemId; s++) 
                                {
                                    if (kleinSize.length > 0) 
                                    {
                                        if (Aussen.value > 29) 
                                        {
                                           costItems.value = parseFloat(costItems.value) + (priceKnayfInternCost[s]);

                                            AllPrice.value = parseFloat(AllPrice.value) + (priceKnayfInternCost[s] * Number(countSchluss.value));

                                            let Costen = AllPrice.value.replace(/,/g, '.');

                                            AllPrice.value = Costen;
                                        }
                                        else 
                                        {
                                            costItems.value = parseFloat(costItems.value) + (kleinPrice[s]);

                                            AllPrice.value = parseFloat(AllPrice.value) + (kleinPrice[s] * Number(countSchluss.value));

                                            let Costen = AllPrice.value.replace(/,/g, '.');

                                            AllPrice.value = Costen;

                                        }
                                    }
                                    else 
                                    {
                                       costItems.value = parseFloat(costItems.value) + (priceKnayfInternCost[s]);

                                        AllPrice.value = parseFloat(AllPrice.value) + (priceKnayfInternCost[s] * Number(countSchluss.value));

                                        let Costen = AllPrice.value.replace(/,/g, '.');

                                        AllPrice.value = Costen;
                                    }


                                }
   
                    }

                    oldAussen.value = SelectItemId;

        liferung();
        procent();
    }
    function goBack() 
    {
        window.history.back();
    }
    
</script>
