@model schliessanlagen_konfigurator.Models.Hebel;

@{
    ViewData["Title"] = $"ProductHebel/{Model.Id}";
}
@Html.HiddenFor(m => m.Id)


<div>
    <div id="productMenu">
        <div>
            <img decoding="async" src="@("~/image/"+@Model.ImageName)" asp-append-version="true" width="400px" height="400px" />
        </div>

        <div id="product_desciptions">
            <div>
                <h3>@Model.Name</h3>
                <h2><strong id="cost" style="line-height: 200%;">@Model.Cost</strong></h2>
                <h6 style="line-height: 200%; max-width: 400px;">@Model.description</h6>
            </div>

            <div id="cardOptions">
                @{
                    int valueCount = 0;
                }
                @if (ViewBag.countOptionsQuery > 0)
                {
                    @for (int i = 0; i < ViewBag.optionsName.Count; i++)
                    {
                        <h6>@ViewBag.optionsName[i]</h6>

                        <select class="form-select" id="ProductOptionsSelector">

                            @for (int j = 0; j < ViewBag.countOptionsList[i]; j++)
                            {
                                <option id="@valueCount">@ViewBag.optionsValue[valueCount]</option>
                                valueCount++;
                            }
                        </select>
                    }
                }


            </div>
        </div>
    </div>
</div>
<div>
    <a asp-action="Index" class="btn btn-success">Back to List</a>
</div>

<script>
  
    let SystemName = `${"@Model.NameSystem"}`;
    let cost = document.getElementById('cost');
    var parentElement = document.querySelectorAll('#ProductOptionsSelector');
    var ids = [];
    let Schließung = document.getElementById('select Schließung');

    let x = cost.innerHTML;
    let fx = @ViewBag.optionsPrise;

    localStorage.setItem("cost", x);
    localStorage.sInnen = 0;
    localStorage.sAussen = 0;
    localStorage.options = 0;


    function serchOptions() {

        for (let i = 0; i < parentElement.length; i++) {
            parentElement.forEach(function (element) {
                ids.push(element.children[i]);

            });
        }
    }
    serchOptions()

    function Vitess_4000() {

        let f = ids.length % parentElement.length;
        console.log(fx);
        parentElement.forEach((item) => {
            for (let fs = 0; fs < ids; fs++) {
                item.addEventListener('change', (event) => {
                    console.log(f);

                });
            }
        });


        // NotOfnung.addEventListener('change', () =>
        // {


        //     if (NotOfnung.value == "8")
        //     {
        //         localStorage.options = Number(localStorage.options) + fx[0];
        //         let a = Number(localStorage.sInnen);
        //         let b = Number(localStorage.sAussen);
        //         let c = Number(localStorage.options);
        //         let sum = parseFloat(localStorage.getItem("cost").replace(',', '.')) + a+ b + c;
        //         cost.innerHTML = String(sum);
        //     }
        //     else
        //     {
        //         localStorage.options = localStorage.options - 8;
        //         let a = Number(localStorage.sInnen);
        //         let b = Number(localStorage.sAussen);
        //         let c = Number(localStorage.options);
        //         let sum = parseFloat(localStorage.getItem("cost").replace(',', '.')) + a + b + c;
        //         cost.innerHTML = String(sum);
        //     }
        // });




    }


    Vitess_4000()
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}



