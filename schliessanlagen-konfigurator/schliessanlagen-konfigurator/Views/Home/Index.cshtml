@model schliessanlagen_konfigurator.Models.ProfilDopelZylinder.Profil_Doppelzylinder;
@{
    ViewData["Title"] = "Profil Doppelzylinder";
    int i = -1;
    var kleinAussen = ViewBag.KleinAussen;
    var resultAussen = (kleinAussen != null) ? kleinAussen.aussen : 0;
    var resultPreis = (kleinAussen != null) ? kleinAussen.costSizeAussen : 0;
}
<style>
    a{
        color:black;
    }
    a:hover{
       color: black;  
    }
    li:hover{
        background-color: #e4e4e4;
    }
    form{
        background: #F9F9F9;
        padding: 30px;
        border-radius: 10px;
    }
    .list-group-item.active {
        z-index: 2;
        color: #fff; 
        background-color: #a1c5fa;
        border-color: #0d6efd;
    }

    .table > thead {
        border-bottom: 3px solid red;
        vertical-align: bottom;
    }

    #zylidner_create_name{
        border-bottom:3px solid red; 
    }

    #Image-load-product{
        padding-bottom: 10px;
        padding-top: 10px;
        display:grid;
        grid-template-columns:repeat(2,auto);
    }

    .Image-load_item:nth-child(1) 
    {
       max-width:250px;
        margin-right: auto;
    }

    .Image-load_item:nth-child(2) {
        max-width: 250px;
        margin-left: auto;
    }

    input[type="checkbox"] {
        width: 30px;
        height: 30px;
    }
    </style>

@if (User.IsInRole("admin"))
{
    <button class="btn danger mb-4" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasLeft" aria-controls="offcanvasLeft">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-adjustments-horizontal"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M14 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" /><path d="M4 6l8 0" /><path d="M16 6l4 0" /><path d="M8 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" /><path d="M4 12l2 0" /><path d="M10 12l10 0" /><path d="M17 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" /><path d="M4 18l11 0" /><path d="M19 18l1 0" /></svg>
    </button>
    <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasLeft" aria-labelledby="offcanvasLeftLabel">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="offcanvasLeftLabel">Menu</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Закрыть"></button>
        </div>
        <div class="offcanvas-body">
            <ul class="list-group list-group-flush">
                <li class="list-group-item"><a href="@Url.Action("ImageConfig","Home")"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-photo-plus"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M15 8h.01" /><path d="M12.5 21h-6.5a3 3 0 0 1 -3 -3v-12a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v6.5" /><path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l4 4" /><path d="M14 14l1 -1c.67 -.644 1.45 -.824 2.182 -.54" /><path d="M16 19h6" /><path d="M19 16v6" /></svg> Bilder</a></li>
                <li class="list-group-item"><a href="@Url.Action("SystemInfo","Home")"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" class="icon icon-tabler icons-tabler-filled icon-tabler-assembly"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M13.666 1.429l6.75 3.98q .1 .06 .18 .133l.009 .008l.106 .075a3.22 3.22 0 0 1 1.284 2.39l.005 .203v7.284c0 1.175 -.643 2.256 -1.623 2.793l-6.804 4.302c-.98 .538 -2.166 .538 -3.2 -.032l-6.695 -4.237a3.23 3.23 0 0 1 -1.678 -2.826v-7.285a3.21 3.21 0 0 1 1.65 -2.808l6.775 -3.995a3.34 3.34 0 0 1 3.24 .015m-.64 5.343a2.03 2.03 0 0 0 -2 -.014l-3.023 1.804a1.99 1.99 0 0 0 -1.002 1.736v3.278a2 2 0 0 0 1.03 1.75l2.946 1.89c.657 .367 1.39 .367 1.994 .033l3.054 -1.955c.582 -.322 .976 -.992 .976 -1.719v-3.277l-.005 -.164a2 2 0 0 0 -.725 -1.391l-.092 -.07l-.056 -.047a1 1 0 0 0 -.096 -.064z" /></svg> SystemInfo</a></li>
                <li class="list-group-item"><a href="@Url.Action("SendMail","Home")"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-mail"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M3 7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10z" /><path d="M3 7l9 6l9 -6" /></svg> E-Mail senden</a></li>
                <li class="list-group-item"><a href="@Url.Action("Blogs","Home")"> 
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="24" height="24"><path d="M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z"></path></svg>
                    Blogs</a></li>
                <li class="list-group-item active"><a href="@Url.Action("Index","Home")"> <img src="@("/compression/doppelzylinder.webp")" height="24" width="24" /> Profil-Doppelzylinder</a></li>
                <li class="list-group-item"><a href="@Url.Action("Profil_HalbzylinderRout","Home")"> <img src="@("/compression/halbzylinder.webp")" height="24" width="24" /> Profil-Halbzylinder</a></li>
                <li class="list-group-item"><a href="@Url.Action("Profil_KnaufzylinderRout","Home")"> <img src="@("/compression/knaufzylinder.webp")" height="24" width="24" /> Profil-Knaufzylinder</a></li>
                <li class="list-group-item"><a href="@Url.Action("HebelzylinderRout","Home")"> <img src="@("/compression/briefkastenzylinder.webp")" height="24" width="24" /> Hebelzylinder</a></li>
                <li class="list-group-item"><a href="@Url.Action("VorhangschlossRout","Home")"> <img src="@("/compression/vorhangschloss.webp")" height="24" width="24" /> Vorhangschloss</a></li>
                <li class="list-group-item"><a href="@Url.Action("Aussenzylinder_RundzylinderRout","Home")"> <img src="@("/compression/aussenzylinder.webp")" height="24" width="24" /> Aussenzylinder / Rundzylinder</a></li>
            </ul>
        </div>
    </div>

    <div class="text-center">
        <div id="myModal_NewSchliessanlagen" class="d-grid gap-3">
            <div>
                <form asp-action="Create_Profil_Doppelzylinder" enctype="multipart/form-data" class="shadow-lg p-3 mb-5 bg-body-tertiary rounded" asp-controller="Home">
                   
                    <div id="zylidner_create_name">
                        <h2>Neues Profil Doppelzylinder</h2>
                    </div>
                    <input style="display:none" asp-for="schliessanlagenId" class="form-control" type="text" value="1" />

                    @if (ViewBag.Dopple != null)
                    {
                        <div class="shadow-sm p-3 mb-5 bg-body-tertiary rounded">
                            <div id="form-info">

                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" role="switch" onchange="changeLoad_image(event.target.checked)" name="flexSwitchCheckChecked" id="flexSwitchCheckChecked" checked>
                                </div>

                                <div id="Image-load_item">
                                    <label asp-for="ImageFile" class="control-label"></label>
                                    <input asp-for="ImageFile" class="btn btn-success" accept="image/*" />
                                    <span asp-validation-for="ImageFile" class="text-danger"></span>
                                    @Html.ValidationMessageFor(m => m.ImageFile, "", new { @class = "error" })
                                </div>

                                <div id="loadServerItem" style="display:none">
                                    <div class="input-group mb-3">
                                        <input type="text" class="form-control" name="Server_render" readonly id="loadItem" aria-describedby="button-addon2">
                                        <button class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#AllServerImage" type="button" id="button-addon2">Load</button>
                                    </div>
                                </div>

                                <div class="modal fade" id="AllServerImage" tabindex="-1">
                                    <div class="modal-dialog modal-xl">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h6 class="modal-title"></h6>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                            </div>
                                            <div class="modal-body">
                                                <div style="display:grid;grid-template-columns:repeat(2,auto)">
                                                    @foreach (var imageName in ViewBag.ServerImages)
                                                    {
                                                        <div style="border:1px solid red" id="ChoiseItem">
                                                            <input type="checkbox" class="form-check" height="30" width="30" />
                                                            <img src="@("/compression/" + imageName)" style="padding:5px" height="300" width="300" alt="@imageName" />
                                                        </div>
                                                    }
                                                </div>


                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-primary" onclick="ChoiseImage()" data-bs-dismiss="modal">Load</button>
                                                <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="Image-load_item">
                                    <h5 for="Images">Bilder auswählen:</h5>
                                    <input type="file" name="Images" multiple class="form-control" />
                                </div>

                                <div class="form-group">
                                    <label>Aktuelles Bild:</label>
                                    <br />
                                    <img src="@("/compression/"+ @ViewBag.Dopple.ImageName)" alt="Uploaded Image" style="max-width: 200px;" />

                                    <input type="hidden" name="OldImage" value=" @ViewBag.Dopple.ImageName" />
                                </div>

                            <div>
                                <h5>Name</h5>
                                <input asp-for="Name" value="@ViewBag.Dopple.Name" required class="form-control" type="text" name="Name" />
                            </div>

                                <div>
                                    <h5>Typ</h5>
                                    <select asp-for="Type" class="form-select">

                                        @if (ViewBag.Dopple.Type == "Mechanik")
                                        {
                                            <option selected>Mechanik</option>
                                            <option>Elektronik</option>
                                        }
                                        else if (ViewBag.Dopple.Type == "Elektronik")
                                        {
                                            <option selected>Elektronik</option>
                                            <option >Mechanik</option>
                                        }
                                        else
                                        {
                                            <option></option>
                                            <option>Elektronik</option>
                                            <option>Mechanik</option>
                                        } 
                                    </select>
                                </div>

                            <div>
                                <h5>Firmenname</h5>
                                <input asp-for="companyName" value="@ViewBag.Dopple.companyName" required class="form-control" type="text" />
                            </div>

                            <div>
                                <h5>Name System</h5>
                               
                                <select asp-for="NameSystem" onchange="systemSwitch(event.target.value)" required id="DoppelSys" class="form-select">

                                    @foreach (var list in ViewBag.System)
                                    {
                                        if (ViewBag.Dopple.NameSystem == list)
                                        {
                                            <option selected>@list</option>
                                        }
                                        else
                                        {
                                            <option>@list</option>
                                        }
                                    }
                                </select>
                            </div>

                                <div>
                                    <h5>Beschreibungen</h5>
                                    <textarea class="form-control" name="description" id="exampleFormControlTextarea1">@ViewBag.Dopple.description</textarea>
                                </div>
                             
                                <div>
                                    <h5>Price</h5>
                                    <input asp-for="Price" value="@ViewBag.Dopple.Price" required class="form-control" />
                                </div>

                                    <div id="form-Size" class="shadow-lg p-3 mb-5 bg-body-tertiary rounded">
                                    <div>
                                        <h4>Aussen & Innen <input id="addAussen_Innen" class="btn btn-success" type="button" value="+" /><input id="addAussen_Innen_remove" class="btn danger" type="button" value="-" /></h4>
                                    </div>
                                  <div id="Aussen_Innen_ProfilDopel">

                                    <div id="AussenProfilDopel">

                                        @if (ViewBag.Size != null)
                                        {
                                            @foreach (var aussen in ViewBag.Size)
                                            {
                                                <input type="number" class="form-control" value="@aussen.aussen" id="aus" step="0.01" name="aussen" />
                                                <input class="form-control" name="costSizeAussen" type="number" value="@aussen.costSizeAussen" id="ausCost" step="0.01" />
                                            }
                                        }
                                        else
                                        {
                                            <input type="number" class="form-control" placeholder="Aussen" id="aus" step="0.01" name="aussen" />
                                            <input class="form-control" name="costSizeAussen" type="number" placeholder="Price" id="ausCost" step="0.01" />
                                        }
                                       
                                        
                                    </div>

                                    <div id="InnenProfilDopel">

                                        @if (ViewBag.Size != null)
                                        {
                                            @foreach (var aussen in ViewBag.Size)
                                            {
                                                <input type="number" class="form-control" value="@aussen.Intern" id="inter" step="0.01" name="innen" />
                                                <input class="form-control" value="@aussen.costSizeIntern" type="number" name="costSizeIntern" step="0.01" id="interCost" />
                                            }
                                        }
                                        else
                                        {
                                            <input type="number" class="form-control" placeholder="Innen" id="inter" step="0.01" name="innen" />
                                            <input class="form-control" placeholder="Price" type="number" name="costSizeIntern" step="0.01" id="interCost" />
                                        } 
                                    </div>
                                </div>
                               </div>
                                <div id="Aussen_innen_klein" class="shadow-lg p-3 mb-5 bg-body-tertiary rounded">
                                    <div>
                                        <h5>Für zylinder aussen klein</h5>
                                    </div>
                                    <div id="kleinGrose">
                                        <div>
                                            <div>
                                                <h5>Aussen</h5>
                                                <input class="form-control" type="number" value="@resultAussen" name="ausKlein" />
                                            </div>
                                            <div>
                                                <h5>Preis</h5>
                                                <input class="form-control" type="number" step="0,00" value="@resultPreis" name="ausKleinPreis" />
                                            </div>
                                        </div>
                                        <div class="arrow-right">
                                        </div>
                                        <div>
                                            <table class="table">
                                                <thead>
                                                    <tr >
                                                        <th>Wert</th>
                                                        <th>Preis</th>
                                                        <th><button type="button" onclick="PlusKleinIntert()" class="btn btn-success">+</button><button type="button" class="btn danger" onclick="MinusKleinIntern()">-</button></th>
                                                    </tr>
                                                </thead>
                                                <tbody id="kleiIntern">

                                                    @foreach (var list in ViewBag.DoppelKleinSize)
                                                    {
                                                        <tr >
                                                            <th scope="row"><input name="internDoppelKlein" class="form-control" value="@list.Intern" type="number" step="0,01" /></th>
                                                            <td><input name="priesDoppelKlein" class="form-control" type="number" value="@list.costSizeIntern" step="0,01" /></td>
                                                        </tr>
                                                    }

                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>
                                <div id="productOptions">

                                </div>
                           
                        </div>
                        </div>
                        <button id="createBlockBtn" type="button" class="btn btn-success">Optionen hinzufügen</button>
                        <button id="addInputBtn" type="button" class="btn btn-success">+</button>
                        <button id="RemoveInputBtn" type="button" class="btn btn-danger">-</button>
                        <input type="submit" class="btn btn-success" id="input" value="Erstellen Profil Doppelzylinder" />
                    }
                    else
                    {
                        <div>
                            <div id="form-info" >

                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" role="switch" onchange="changeLoad_image(event.target.checked)" name="flexSwitchCheckChecked" id="flexSwitchCheckChecked" checked>
                                </div>

                                <div  id="Image-load_item">
                                    <label asp-for="ImageFile" class="control-label"></label>
                                    <input asp-for="ImageFile" class="btn btn-success" accept="image/*" />
                                    <span asp-validation-for="ImageFile" class="text-danger"></span>
                                    @Html.ValidationMessageFor(m => m.ImageFile, "", new { @class = "error" })
                                </div>

                                <div id="loadServerItem" style="display:none">
                                    <div class="input-group mb-3">
                                        <input type="text" class="form-control" name="Server_render" readonly id="loadItem" aria-describedby="button-addon2">
                                        <button class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#AllServerImage" type="button" id="button-addon2">Load</button>
                                    </div>
                                </div>

                                <div class="modal fade" id="AllServerImage" tabindex="-1">
                                    <div class="modal-dialog modal-xl">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h6 class="modal-title"></h6>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                            </div>
                                            <div class="modal-body">
                                                <div style="display:grid;grid-template-columns:repeat(2,auto)">
                                                    @foreach (var imageName in ViewBag.ServerImages)
                                                    {
                                                        <div style="border:1px solid red" id="ChoiseItem">
                                                            <input type="checkbox" class="form-check" height="30" width="30" />
                                                            <img src="@("/compression/" + imageName)" style="padding:5px" height="300" width="300" alt="@imageName" />
                                                        </div>
                                                    }
                                                </div>
                                               

                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-primary" onclick="ChoiseImage()" data-bs-dismiss="modal">Load</button>
                                                <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="Image-load_item">
                                    <h5 for="Images">Bilder auswählen:</h5>
                                    <input type="file" name="Images" multiple class="form-control" />
                                </div>

                                <div>
                                    <h5>Name</h5>
                                    <input asp-for="Name" required class="form-control" type="text" name="Name" />
                                </div>

                                <div>
                                    <h5>Typ</h5>
                                    <select asp-for="Type" class="form-select" >
                                        <option></option>
                                        <option>Mechanik</option>
                                        <option>Elektronik</option>
                                    </select>
                                </div>

                                <div>
                                    <h5>Firmenname</h5>
                                    <input asp-for="companyName" required class="form-control" type="text" />
                                </div>

                                <div>
                                    <h5>Name System</h5>
                                    <input asp-for="NameSystem" onchange="systemSwitch(event.target.value)" id="DoppelSys" required class="form-control" type="text" />
                                </div>


                                <div>
                                    <h5>Beschreibungen</h5>
                                    <textarea asp-for="description" class="form-control" id="exampleFormControlTextarea1"></textarea>
                                    @if (ViewBag.Content != null)
                                    {
                                        <div>
                                            <h3>Submitted Content:</h3>
                                            <div>@Html.Raw(ViewBag.Content)</div>
                                        </div>
                                    }
                                </div>

                                    <div>
                                    <h5>Price</h5>
                                        <input asp-for="Price" required class="form-control" />
                                    </div>

                                <div id="form-Size" class="shadow-lg p-3 mb-5 bg-body-tertiary rounded">
                                    <div>
                                        <h4>Aussen & Innen <input id="addAussen_Innen" class="btn btn-success" type="button" value="+" /><input id="addAussen_Innen_remove" class="btn danger" type="button" value="-" /></h4>
                                    </div>
                                    <div id="Aussen_Innen_ProfilDopel" >

                                        <div id="AussenProfilDopel">
                                            <input type="number" class="form-control" placeholder="Aussen" id="aus" step="0.01" name="aussen" />
                                            <input class="form-control" name="costSizeAussen" type="number" placeholder="Price" id="ausCost" step="0.01" />
                                        </div>

                                        <div id="InnenProfilDopel">
                                            <input type="number" class="form-control" placeholder="Innen" id="inter" step="0.01" name="innen" />
                                            <input class="form-control" placeholder="Price" type="number" name="costSizeIntern" step="0.01" id="interCost" />
                                        </div>

                                    </div>
                                </div>
                               

                                <div id="Aussen_innen_klein" class="shadow-lg p-3 mb-5 bg-body-tertiary rounded">
                                    <h5>Für zylinder aussen klein</h5>
                                    <div id="kleinGrose" >
                                        <div id="kleinSize">
                                            <div>
                                                <h5>Aussen</h5>
                                                <input type="number" class="form-control" value="0" name="ausKlein" />
                                            </div>
                                           <div>
                                                <h5>Preis</h5>
                                                <input type="number" class="form-control" step="0,00" value="0" name="ausKleinPreis" />
                                            </div>  
                                        </div>
                                        <div class="arrow-right">

                                        </div>
                                        <div>
                                            <table class="table">
                                                <thead>
                                                    <tr>
                                                        <th >Wert</th>
                                                        <th >Preis</th>
                                                        <th ><button type="button" onclick="PlusKleinIntert()" class="btn btn-success">+</button><button type="button" class="btn danger" onclick="MinusKleinIntern()">-</button></th>
                                                    </tr>
                                                </thead>
                                                <tbody id ="kleiIntern">
                                                    <tr>
                                                        <th scope="row"><input class="form-control" name="internDoppelKlein" type="number" step="0,01" /></th>
                                                        <td><input class="form-control" name="priesDoppelKlein" type="number" step="0,01" /></td>
                                                    </tr> 
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>

                                <div id="productOptions">
                                </div>
                            </div>
                        </div>
                        <button id="createBlockBtn" type="button" class="btn btn-success">Optionen hinzufügen</button>
                        <button id="addInputBtn" type="button" class="btn btn-success">+</button>
                        <button id="RemoveInputBtn" type="button" class="btn danger">-</button>
                        <input type="submit" class="btn btn-success" id="input" value="Erstellen Profil Doppelzylinder" />
                    }
                </form>
            </div>
        </div>
        <div>


            @using (Html.BeginForm("Index", "Home", FormMethod.Get, new { @class = "shadow-lg p-3 mb-5 bg-body-tertiary rounded" }))
            {
                <div  id="Tabele">
                    <div>
                        <h4 id="input">ALLE Profil Doppelzylinder</h4>
                    </div>
 
                    <div id="Table">
                        <div  class="Thead">
                            <h5>Hersteller</h5>
                        </div>
                        <div  class="Thead">
                            <h5>System</h5>
                        </div>
                        <div class="Thead">
                            <h5>Name</h5>
                        </div>
                        <div  class="Thead">
                            <h5>Bild</h5>
                        </div>
                        <div  class="Thead">
                            <h5>Preis</h5>
                        </div>
                        <div  class="Thead">
                            <h5> Bearbeiten</h5>
                        </div>
                        <div  class="Thead">
                            <h5>Löschen</h5>
                        </div>
                        <div  class="Thead">
                            <h5>Vorlage</h5>
                        </div>

                                @foreach (var item in ViewBag.item)
                                {
                                    i++;
                                    <div id="rowTable">@item.companyName</div>
                                    <div id="rowTable">@item.NameSystem</div>
                                    <div id="rowTable">@item.Name</div>
                                    <div id="rowTable"> <img decoding="async" id="image-@i" onmouseover="ImgZiseUp(@i)" src="@("~/compression/"+@item.ImageName)" asp-append-version="true" width="30px" height="30px" /></div>
                                    <div id="rowTable"><h6 id="cost">@item.Price.ToString("C")</h6></div>
                                    <div id="rowTable"><a href="@Url.Action("Edit_Doppelzylinder","Home", new { item.Id })">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-edit"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M7 7h-1a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-1" /><path d="M20.385 6.585a2.1 2.1 0 0 0 -2.97 -2.97l-8.415 8.385v3h3l8.385 -8.415z" /><path d="M16 5l3 3" /></svg>
                                    </a></div>    
                                    <div id="rowTable"><a href="@Url.Action("Delete_Doppelzylinder","Home", new { item.Id })">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-file-x"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M14 3v4a1 1 0 0 0 1 1h4" /><path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" /><path d="M10 12l4 4m0 -4l-4 4" /></svg>
                                        </a></div>
                                    <div id="rowTable"><a href="@Url.Action("Index","Home", new { id = item.Id })">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-table-plus"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M12.5 21h-7.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v7.5" /><path d="M3 10h18" /><path d="M10 3v18" /><path d="M16 19h6" /><path d="M19 16v6" /></svg>
                                </a></div>
                                }
                            </div>
                </div>
            }
        </div>
    </div>
}

@section scripts
{
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="~/lib/tinymce_7.1.2/tinymce/js/tinymce/tinymce.min.js"></script>

    <script type="text/javascript">

        function ChoiseImage() {

            let All_Items_Img = document.querySelectorAll("#ChoiseItem");
            let serverImg = document.getElementById("loadItem");

            All_Items_Img.forEach((item) => {

                if (item.childNodes[1].checked == true) {
                    console.log(item.childNodes[3].alt);
                   serverImg.value = item.childNodes[3].alt;
                }
            });
        }

        function changeLoad_image(item)
        {
            let loadblock = document.getElementById("loadServerItem");
            let imageBlock = document.getElementById("Image-load_item");

                if (item === true) 
                {
                    imageBlock.style.display = "block";
                    loadblock.style.display = "none";
                }
                else 
                {
                    imageBlock.style.display = "none";
                    loadblock.style.display = "block";
                }
          
        }

        function ImgZiseUp(id) 
        {
            let img = document.getElementById("image-" + id);
            img.style.transform = "scale(4)";

            img.addEventListener('mouseleave', function () 
            {
                img.style.transform = 'scale(1)';
            });
        }


        let table = document.getElementById("kleiIntern");

        function PlusKleinIntert() 
        {
            let row = `   <tr>
                            <th scope="row"><input
                                   name="internDoppelKlein" class="form-control" type="number" step="0,01" /></th>
                                       <td><input name="priesDoppelKlein" class="form-control" step="0,01" type="number" /></td>
                    </tr> `;

            table.insertAdjacentHTML('beforeend', row);
        }

        function MinusKleinIntern() 
        {
            let countelem = table.querySelectorAll("tr");

            let kleinSize = document.getElementById("Aussen_innen_klein");

            if (countelem.length == 0) 
            {
                kleinSize.remove();
            }
            else 
            {
                countelem[countelem.length - 1].remove();
            }
        }

        tinymce.init({
            selector: '#exampleFormControlTextarea1',
            plugins: [
                'advlist', 'autolink', 'link', 'image', 'lists', 'charmap', 'preview', 'anchor', 'pagebreak',
                'searchreplace', 'wordcount', 'visualblocks', 'visualchars', 'code', 'fullscreen', 'insertdatetime',
                'media', 'table', 'emoticons', 'help'
            ],
            toolbar: 'undo redo | styles | bold italic | alignleft aligncenter alignright alignjustify | ' +
                'bullist numlist outdent indent | link image | print preview media fullscreen | ' +
                'forecolor backcolor emoticons | help',
            menu: {
                favs: { title: 'Beschreibungen', items: 'code visualaid | searchreplace | emoticons' }
            },
            menubar: 'favs file edit view insert format tools table help',
            content_css: 'css/content.css'
        });


        let plusAussen_Innen = document.getElementById('addAussen_Innen');
        let docInnen = document.getElementById('InnenProfilDopel');
        let docAussen = document.getElementById('AussenProfilDopel');
        let sum = document.querySelectorAll('#cost');
        let Aussen_Innen_ProfilDopel = document.getElementById('Aussen_Innen_ProfilDopel');

        let costNGF = document.getElementById('costNGF');
        let valueNGF = document.getElementById('valueNGF');

        let productOptions = document.getElementById('productOptions');
        let addOptions = document.getElementById('addOptions');

        let removeAussen_Innen = document.getElementById('addAussen_Innen_remove');

        document.addEventListener("DOMContentLoaded", function () 
        {
            const container = document.getElementById('productOptions');
            const createBlockBtn = document.getElementById('createBlockBtn');
            const addInputBtn = document.getElementById('addInputBtn');
            const RemoveInputBtn = document.getElementById('RemoveInputBtn');

            let blockCounter = 1;

            function creatDescription(value) {
                tinymce.init({
                    selector: `#exampleFormControlTextareaS${value}`,
                    plugins: [
                        'advlist', 'autolink', 'link', 'image', 'lists', 'charmap', 'preview', 'anchor', 'pagebreak',
                        'searchreplace', 'wordcount', 'visualblocks', 'visualchars', 'code', 'fullscreen', 'insertdatetime',
                        'media', 'table', 'emoticons', 'help'
                    ],
                    toolbar: 'undo redo | styles | bold italic | alignleft aligncenter alignright alignjustify | ' +
                        'bullist numlist outdent indent | link image | print preview media fullscreen | ' +
                        'forecolor backcolor emoticons | help',
                    menu: {
                        favs: { title: 'Discriptions', items: 'code visualaid | searchreplace | emoticons' }
                    },
                    menubar: 'favs file edit view insert format tools table help',
                    content_css: 'css/content.css'
                });
            }


            createBlockBtn.addEventListener('click', function () {
                const block = createBlock();
                container.appendChild(block);
                creatDescription(blockCounter - 1);
            });

            addInputBtn.addEventListener('click', function () 
            {
                const blocks = document.querySelectorAll('.input-block');
                const lastBlock = blocks[blocks.length - 1];

                if (lastBlock) {
                    addInputs(lastBlock);
                } else {
                    alert('Сначала создайте блок');
                }
            });

            RemoveInputBtn.addEventListener('click', function () 
            {
                const blocks = document.querySelectorAll('.input-block');
                const lastBlock = blocks[blocks.length - 1];

                if (lastBlock) 
                {
                    productOptions.removeChild(lastBlock);
                } 
                else 
                {
                    alert('Erstellen Sie zuerst einen Block.');
                }
            });

            let counterOptions = 2;

            function createBlock() 
            {
                counterOptions = 2;
                const block = document.createElement('div');
                block.classList.add('input-block',"shadow-lg","p-3","mb-5","bg-body-tertiary","rounded");
                block.id = `block-${blockCounter}`;
                block.innerHTML = `<div>
                                                    <div>
                                                        <h4>Optionen</h4>
                                                        </div>
                                                <div>
                                                                <h5>Name</h5>
                                                <input class="form-control" type="text" name="Options" />
                                                </div>
                                                
                                                <div>
              
                                                    <input name="postedFile" type="file" class="btn btn-success" />
                    
                                                </div>
                                                    <div>
                                                           <h5>Beschreibungen</h5>

                                                              <textarea name="NGFDescriptions" id="exampleFormControlTextareaS${blockCounter}" class="form-control">

                                                              </textarea>
                                                   </div>

                                                   <div>
                                                  <h4>Wert & Price </h4>
                                                   </div>
                                                <div id="Aussen_Innen_ProfilDopel">
                                                    <div id="valueNGF">
                                                         <input type="text" placeholder="Wert" class="form-control" step="0.01" name="valueNGF" />

                                                    </div>
                                                    <div id="costNGF">
                                                          <input type="number" class="form-control"  placeholder="Price" step="0.01" name="costNGF" />
                                                    </div>
                                                      <input type="hidden" id="counter"  name="input_counter" />
                                                </div>
                                            </div>`;

                blockCounter++;

                return block;
            }
          
            function addInputs(block) 
            {
                let d = document.createElement('input');
                d.setAttribute('name', 'costNGF');
                d.setAttribute('placeholder', 'Price');
                d.setAttribute('class', 'form-control');

                let x = document.createElement('input');
                x.setAttribute('name', 'valueNGF');
                x.setAttribute('placeholder', 'Wert');
                x.setAttribute('class', 'form-control');

                const div1 = block.querySelector('#valueNGF');
                const div2 = block.querySelector('#costNGF');

                div1.appendChild(x);
                div2.appendChild(d);

                var counter = document.querySelectorAll('#counter');
                counter[counter.length - 1].value = counterOptions;

                counterOptions++;
            };

            plusAussen_Innen.addEventListener('click', () => {

                let d = document.createElement('input');
                d.setAttribute('name', 'aussen');
                d.setAttribute('placeholder', 'Aussen');
                d.setAttribute('class', 'form-control');
                d.id = 'aus';

                let costAussen = document.createElement('input');
                costAussen.setAttribute('name', 'costSizeAussen');
                costAussen.setAttribute('placeholder', 'Price');
                costAussen.setAttribute('class', 'form-control');
                costAussen.setAttribute('step', '0.01');
                costAussen.setAttribute('type', 'number');
                costAussen.id = 'ausCost';

                let x = document.createElement('input');
                x.setAttribute('name', 'innen');
                x.setAttribute('placeholder', 'Innen');
                x.id = 'inter';
                x.setAttribute('class', 'form-control');

                let costInter = document.createElement('input');
                costInter.setAttribute('name', 'costSizeIntern');
                costInter.setAttribute('placeholder', 'Price');
                costInter.id = 'interCost';
                costInter.setAttribute('class', 'form-control');
                costInter.setAttribute('step', '0.01');
                costInter.setAttribute('type', 'number');
                docAussen.append(d, costAussen);
                docInnen.append(x, costInter);

            });
            removeAussen_Innen.addEventListener('click', () => 
            {
                let d = document.querySelectorAll('#aus');

                let costAussen = document.querySelectorAll('#ausCost');

                let x = document.querySelectorAll('#inter');
                let costInter = document.querySelectorAll('#interCost');

                docAussen.removeChild(costAussen[costAussen.length - 1]);
                docAussen.removeChild(d[d.length - 1]);

                docInnen.removeChild(x[x.length - 1]);
                docInnen.removeChild(costInter[costInter.length - 1]);
            });

        })


    </script>
}