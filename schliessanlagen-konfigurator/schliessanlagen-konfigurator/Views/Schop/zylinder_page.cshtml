@using schliessanlagen_konfigurator.Schop_models
@model OrderZylinder;

@{
    ViewData["Title"] = "zylinder";
}
<style>
    #modalDiscriptions {
        gap: 50px;
        display: grid;
        grid-template-columns: auto auto;
    }

    .count_input_controll {
        border: none;
        max-width: 40px;
        outline: none;
        text-align: center;
    }

    .closeOptions {
        margin-left: auto;
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .closeOptions:hover,
        .closeOptions:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

    #Procent {
        text-align: end;
        color: red;
    }

    .count_control {
        margin-left: 50px;
    }

    .count_control_Aussen {
        margin-left: 125px;
    }
</style>

<div style="display:flex; gap:10px">
    <button class="btn danger mb-4" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasLeft" aria-controls="offcanvasLeft">
        Kategorien
    </button>
</div>

<div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasLeft" aria-labelledby="offcanvasLeftLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasLeftLabel">Menu</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Закрыть"></button>
    </div>
    <div class="offcanvas-body">
        <ul class="list-group list-group-flush">
            <li class="list-group-item active"><a href="@Url.Action("Index","Schop")"> <img src="@("/compression/doppelzylinder.WEBP")" height="24" width="24" /> Zylinder</a></li>
        </ul>
    </div>
</div>

<div class="shadow-lg p-3 mb-5 bg-body-tertiary rounded">
    <form method="post" action="Order_item">
    @foreach (var item in ViewBag.Item)
    {
        <div id="ExelItem-1" class="ExelItem shadow-lg  mb-5 bg-body-tertiary rounded">
            <input value="@item.Id" type="hidden" name="DopelItem" />
            <div id="productImage">
                    <img decoding="async" alt="@item.Name" data-bs-toggle="modal" data-bs-target="#ModalItemDoppel" style="border: 2px solid rgba(237,237,237,0.5);" src="@("~/compression/"+@item.ImageName)" asp-append-version="true" width="300px" height="300px" />
            </div>
            <div id="productMenuInfo">
                <div id="ProductNameUndCost">
                    <div>
                        <input style="border: none;width:250px" readonly type="text"  name="Name" value="@item.Name" />
                            <input style="border: none;width:250px" type="hidden" name="NameSystem" value="@item.NameSystem" />

                        <input id="costItems-1" name="ProductCosted" type="hidden" value="@item.Price" />
                    </div>
                </div>

                <div id="textInform">
                    @if (ViewBag.Aussen == null && ViewBag.Intern == null)
                    {
                        
                    }
                    else
                    {
                        <h4>Zylinderlänge</h4>
                    }
                  
                    <h4>Stück</h4>
                </div>

                <div id="Size-1" class="SizeProduct">

                    @if (ViewBag.Aussen == null && ViewBag.Intern == null)
                    {

                    }
                    else
                    {
                        <div class="btn-group" role="group" aria-label="Basic outlined example">
                            <div>
                                    <input style="border: none;" id="compName" name="companyName" type="hidden" value="@item.companyName" />
                                    <select class="form-select" name="Aussen" id="Aussen" onchange="selectParamAussen('1','Doppelzylinder',event.target.selectedIndex)">
                                    @foreach (var list in ViewBag.Aussen)
                                    {
                                        <option id="OptionA">@list</option>
                                    }

                                </select>
                                <input type="hidden" id="Aussen-1" />
                            </div>
                            <div>
                                @if (ViewBag.Intern == null)
                                {
                                    
                                }
                                else
                                {
                                    <select class="form-select" name="Intern" id="Intern" onchange="selectParamIntern('1','Doppelzylinder',event.target.selectedIndex)">
                                        @foreach (var list in ViewBag.Intern)
                                        {
                                            <option id="OptionI">@list</option>
                                        }
                                    </select>
                                    <input type="hidden" id="Innen-1" />
                                }
                            </div>
                        </div>
                    }
                   

                    <div class="btn-group count_control" role="group" aria-label="Basic outlined example">
                        <button type="button" onclick="CylinderMinus('1')" class="btn btn-success">-</button>
                            <input readonly class="count_input_controll" name="Count" id="countSchlusse-1" type="number" min="1" value="1" />
                        <button type="button" onclick="CylinderPlus('1')" class="btn btn-success">+</button>
                    </div>

                </div>

                        @if (ViewBag.countOptionsQuery > 0)
                        {
                            int valueCount = 0;
                            <div id="optionsItems">
                                <div>

                              
                            <h3>Weitere Optionen</h3>
                            @for (int i = 0; i < ViewBag.optionsName.Count; i++)
                            {

                                <div class="input-group">
                                        <div class="input-group-text" id="btnGroupAddon">  <img data-bs-toggle="modal" data-bs-target="#myModal-@i" id="hilfeOptionsIcon" alt="question" src="@("/compression/question.webp")" height="20" width="20" /></div>
                                    <input type="text" class="form-control" id="OptionName" value="@ViewBag.optionsName[i].Name" readonly aria-label="Пример группы ввода" aria-describedby="btnGroupAddon">
                                </div>

                                <select style="margin-bottom: 10px;" class="form-select" id="1-Options-@i" onchange="OptionsSelect('1','Doppel',event.target.id,event.target.value,@valueCount,'@ViewBag.optionsName[i].Name',@i,'1')">

                                    @for (int j = 0; j < ViewBag.countOptionsList[i]; j++)
                                    {
                                        <option id="@valueCount">@ViewBag.optionsValue[valueCount]</option>

                                        valueCount++;
                                    }
                                </select>

                                <div class="modal fade" id="myModal-@i" tabindex="-1">
                                    <div class="modal-dialog modal-xl">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h1 class="modal-title">@ViewBag.optionsName[i].Name</h1>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                            </div>
                                            <div class="modal-body">

                                                <div class="card shadow-lg mb-4 bg-body-tertiary rounded">
                                                    <div class="row g-0">
                                                        <div class="col-md-4">
                                                                <img src="@("/compression/"+@ViewBag.optionsName[i].ImageName)" alt="@ViewBag.optionsName[i].Name" height="300" width="300" class="img-fluid rounded-start">
                                                        </div>
                                                        <div class="col-md-8">
                                                            <div class="card-body">

                                                                <div class="card-text">
                                                                    @Html.Raw(@item.description)
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn danger" data-bs-dismiss="modal">Schließen</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <input type="hidden" id="Option-1 + @i" />
                                <input type="hidden" id="d-1 + @i" />
                            }
                                <input type="hidden" name="Options" id="OptionAll-1" />
                            </div>
                        </div>
                        }
                
                <div>
                    @Html.Raw(@item.description)
                </div>
            </div>
            

            <div id="orderCost">
                <input readonly type="hidden" value="@item.Price.ToString("C")" id="cost" />
                <input name="Sum" id="costed" type="hidden" style="border:none;font-size:24px" value="@item.Price" />
            </div>

            <div id="orderCost">
                <input name="Cost" readonly type="text" value="@item.Price.ToString("C")" id="Allcost" />
            </div>
        </div>
            <div style="text-align: end;">
                <input type="button" class="btn btn-dark" onclick="window.history.back()" value="Zurück" />
                <input type="submit" class="btn danger" value="Weiter" />
        </div>
    }
    </form>

    <div id="slide_product" class="shadow-lg  mb-5 bg-body-tertiary rounded">
        <div>
            <div id="arrowSchop" class="shadow-lg  mb-5 bg-body-tertiary rounded" onclick="arrowLeft()">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 12" width="12" height="12"><path d="M3.587 6.025c0 .2.1.4.2.5l3.3 3.3c.3.3.8.3 1.1 0 .3-.3.3-.8 0-1.1l-2.7-2.7 2.7-2.7c.3-.3.3-.8 0-1.1-.3-.3-.8-.3-1.1 0l-3.2 3.2c-.2.2-.3.4-.3.6Z"></path></svg>
            </div>
        </div>
        @foreach (var list in ViewBag.AllDoppel)
        {
               <div id="item_block_slide">             
                   <div>
                    <img src="@("~/compression/"+@list.ImageName)" alt="@list.Name" asp-append-version="true" width="300px" height="300px" />
                   </div>
                   <br/>
                <div>
                    <a style="color:black" href="@Url.Action("zylinder_page",new{product_Name = @list.Name})"><strong>@list.Name</strong></a>
                </div>
                <div>
                    <h4 style="color:var(--primary-color)">@list.Price.ToString("C")</h4>
                </div>
               </div>
        }
        <div>
            <div id="arrowSchop" class="shadow-lg  mb-5 bg-body-tertiary rounded" onclick="arrowRight()">
                <svg  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 12" width="12" height="12"><path d="M4.7 10c-.2 0-.4-.1-.5-.2-.3-.3-.3-.8 0-1.1L6.9 6 4.2 3.3c-.3-.3-.3-.8 0-1.1.3-.3.8-.3 1.1 0l3.3 3.2c.3.3.3.8 0 1.1L5.3 9.7c-.2.2-.4.3-.6.3Z"></path></svg>
            </div>
        </div>
    </div> 
</div>  

@section scripts
{
    <script>

        let AllPrice = document.getElementById("cost");
        let hasFreilauffunktion = false;

        let hasNotUndGefahrenfunktion = false;

        let DoppelOptions = @Html.Raw(ViewBag.DoppelOptionsNameJson) || null;
        let DoppelOptionsValue = @Html.Raw(ViewBag.DoppelOptionsValue) || null;
        let DoppelCostValue = @Html.Raw(ViewBag.optionsPrise) || null;

        let priceDoppelInternCost = @Html.Raw(ViewBag.CostDoppelIntern);
        let priceDoppelAussenCost = @Html.Raw(ViewBag.CostDoppelAussen);

        let kleinCountItem = @Html.Raw(ViewBag.CountDoppelInter)|| null;


        let kleinPrice = @Html.Raw(ViewBag.DopelzylinderInternKleinPreis)|| null;
        let normalDopelSize = @Html.Raw(ViewBag.DopelzylinderInternNormal)|| null;
        let kleinSize = @Html.Raw(ViewBag.DopelzylinderInternKlein)|| null;

        let sliderItem = document.getElementById("slide_product");
        let divChildren = sliderItem.querySelectorAll('#item_block_slide');

        let numItem = -1; 

        function cheked_count_item() 
        {
            for (let i = 0; i < divChildren.length;) 
            {

                if (window.innerWidth > 1760) 
                {
                    if (i < 5) {
                        numItem++;
                        divChildren[i].style.display = "block";
                    }
                    else {
                        divChildren[i].style.display = "none";
                    }
                }

                else if (window.innerWidth > 1460 & window.innerWidth <= 1760) 
                {
                    if (i < 4) {
                        numItem++;
                        divChildren[i].style.display = "block";
                    }
                    else {
                        divChildren[i].style.display = "none";
                    }
                }
                else if (window.innerWidth > 1150 && window.innerWidth <= 1460) 
                {
                    if (i < 3) {
                        numItem++;
                        divChildren[i].style.display = "block";
                    }
                    else {
                        divChildren[i].style.display = "none";
                    }
                }
                else if (window.innerWidth > 800 && window.innerWidth <= 1000) 
                {
                    if (i < 2) {
                        numItem++;
                        divChildren[i].style.display = "block";
                    }
                    else {
                        divChildren[i].style.display = "none";
                    }
                }
                else if (window.innerWidth < 800) 
                {
                    if (i < 1) {
                        numItem++;
                        divChildren[i].style.display = "block";
                    }
                    else {
                        divChildren[i].style.display = "none";
                    }
                }
               
                i++;
            }
               
        }

        cheked_count_item();

        window.onresize = cheked_count_item;

        function arrowLeft()
        {
            if (window.innerWidth > 1760) {
                if (numItem > 4) {
                    let firstItem = numItem;
                    divChildren[firstItem].style.display = "none";
                    numItem--;

                    let x = numItem - 4;
                    divChildren[x].style.display = "block";
                }
            }

            else if (window.innerWidth > 1460 & window.innerWidth <= 1760) 
            {
                if (numItem > 3) {
                    let firstItem = numItem;
                    divChildren[firstItem].style.display = "none";
                    numItem--;

                    let x = numItem - 3;
                    divChildren[x].style.display = "block";
                }
            }
            else if (window.innerWidth > 1150 && window.innerWidth <= 1460) 
            {
                if (numItem > 2) {
                    let firstItem = numItem;
                    divChildren[firstItem].style.display = "none";
                    numItem--;

                    let x = numItem - 2;
                    divChildren[x].style.display = "block";
                }
            }
            else if (window.innerWidth > 800 && window.innerWidth <= 1000) 
            {
                if (numItem > 1) {
                    let firstItem = numItem;
                    divChildren[firstItem].style.display = "none";
                    numItem--;

                    let x = numItem - 1;
                    divChildren[x].style.display = "block";
                }
            }
            else if (window.innerWidth < 800) 
            {
                if (numItem > 0) 
                {
                    let firstItem = numItem;
                    divChildren[firstItem].style.display = "none";
                    numItem--;

                    let x = numItem;
                    divChildren[x].style.display = "block";
                }
                   
                
            }

        }
        function arrowRight() 
        {
            if (window.innerWidth > 1760) 
            {
                if (numItem >= 4 && numItem < (divChildren.length - 1)) 
                {
                    let firstItem = numItem - 4;
                    divChildren[firstItem].style.display = "none";

                    numItem++;
                    divChildren[numItem].style.display = "block";
                }
            }

            else if (window.innerWidth > 1460 & window.innerWidth <= 1760) 
            {
                if (numItem >= 3 && numItem < (divChildren.length - 1)) 
                {
                    let firstItem = numItem - 3;
                    divChildren[firstItem].style.display = "none";

                    numItem++;
                    divChildren[numItem].style.display = "block";
                }
            }

            else if (window.innerWidth > 1150 && window.innerWidth <= 1460) 
            {
                if (numItem >= 2 && numItem < (divChildren.length - 1)) 
                {
                    let firstItem = numItem - 2;
                    divChildren[firstItem].style.display = "none";

                    numItem++;
                    divChildren[numItem].style.display = "block";
                }
            }
            else if (window.innerWidth > 800 && window.innerWidth <= 1000) 
            {
                if (numItem >= 1 && numItem < (divChildren.length - 1)) 
                {
                    let firstItem = numItem - 1;
                    divChildren[firstItem].style.display = "none";

                    numItem++;
                    divChildren[numItem].style.display = "block";
                }
            }
            else if (window.innerWidth < 800) 
            {
                if (numItem < (divChildren.length - 1)) 
                { 
                    let firstItem = numItem;
                    divChildren[firstItem].style.display = "none";

                    numItem++;
                    divChildren[numItem].style.display = "block";
                }
                    
            }

        }



        function procent() {
            let proc = document.getElementById("Procent");
            let Allcost = document.getElementById("Allcost");
            Allcost.value = (parseFloat(AllPrice.value)).toLocaleString('de-DE', {
                style: 'currency',
                currency: 'EUR'
            });
        }
        function liferung() {

        }
    </script>

    <script src="~/Js/Finisher/tur_count.js"></script>
    <script src="~/Js/Finisher/Zylider_options.js"></script>
    <script src="~/Js/Finisher/aussen_size.js"></script>
    <script src="~/Js/Finisher/intern_size.js"></script>
    <script src="~/Js/Finisher/vorhan.js"></script>
}