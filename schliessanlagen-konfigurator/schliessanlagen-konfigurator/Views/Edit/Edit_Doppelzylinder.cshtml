@model schliessanlagen_konfigurator.Models.ProfilDopelZylinder.Profil_Doppelzylinder;

@{
    var kleinAussen = ViewBag.KleinAussen;
    ViewData["Title"] = $"Edit/{Model.Id}";
    int count = -1;
    int f = -1;
    int r = -1;
    int galeryCheker = 0;
    var resultAussen = (kleinAussen != null) ? kleinAussen.aussen : 0;
    var resultPreis = (kleinAussen != null) ? kleinAussen.costSizeAussen : 0;
}

<style>
    a 
    {
        color: black;
    }

        a:hover 
        {
            color: black;
        }

    li:hover 
    {
        background-color: #e4e4e4;
    }

    form 
    {
        background: #F9F9F9;
        padding: 30px;
        border-radius: 10px;
    }

    .list-group-item.active 
    {
        z-index: 2;
        color: #fff;
        background-color: #a1c5fa;
        border-color: #0d6efd;
    }



    .table > thead 
    {
        border-bottom: 3px solid red;
        vertical-align: bottom;
    }

    #zylidner_create_name 
    {
        border-bottom: 3px solid red;
    }

    #Image-load-product 
    {
        padding-bottom: 10px;
        padding-top: 10px;
        display: grid;
        grid-template-columns: repeat(2,auto);
    }

    .Image-load_item:nth-child(1) 
    {
        max-width: 250px;
        margin-right: auto;
    }


    .Image-load_item:nth-child(2) 
    {
        max-width: 250px;
        margin-left: auto;
    }
</style>

@if (User.IsInRole("admin"))
{
    <div class="d-grid gap-3" >

        <div id="myModal_NewSchliessanlagen" class="shadow-lg p-3 mb-5 bg-body-tertiary rounded">
          
            <div class="text-center">

                <form asp-action="SaveDoppelZylinder" enctype="multipart/form-data" class="shadow-lg p-3 mb-5 bg-body-tertiary rounded" asp-controller="Home">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div id="zylidner_create_name">
                        <h1>Bearbeiten</h1>
                    </div>

                    @Html.HiddenFor(x => x.Id)
                    <div>
                        <input id="VorhanType" asp-for="schliessanlagenId" type="hidden" class="form-control" />
                    </div>
                    <br />
                <div>
                    <label asp-for="ImageName" class="control-label"></label>
                    <input asp-for="ImageName" class="form-control" />
                    <span asp-validation-for="ImageName" class="text-danger"></span>
                </div>
                    <br />
                <label asp-for="ImageFile" class="control-label"></label>
                    <br />
                <div>
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                    <div>
                        <label asp-for="Type" class="control-label"></label>
                        <select asp-for="Type" class="form-select">

                            @if (Model.Type == "Mechanik")
                            {
                                <option selected>Mechanik</option>
                                <option>Elektronik</option>
                            }
                            else if (Model.Type == "Elektronik")
                            {
                                <option selected>Elektronik</option>
                                <option>Mechanik</option>
                            }
                            else
                            {
                                <option></option>
                                <option>Elektronik</option>
                                <option>Mechanik</option>
                            }
                        </select>
                    </div>

                    <br />
                <div class="form-group" id="Galerry">
                    <label class="control-label">Produkt-Galerie:</label>
             
                    @foreach (var list in ViewBag.Galry)
                    {
                        <div id="galeryItem-@galeryCheker">
                            <input name="GalleryImages" type="text" value="@list.ImageName" id="opt" class="form-control" />
                            <br />
                            <img src="@("/Image/"+@list.ImageName)" height="300" width="300" />
                            <br />
                            <button class="btn btn-success" onclick="AddImage(@galeryCheker)" type="button">Bilder hinzufügen</button>
                            <button class="btn btn-danger" onclick="deleteImage(@galeryCheker)" type="button">Löschen</button>
                        </div>
                        galeryCheker++;
                    }
                    @if (ViewBag.Galry.Count == 0)
                    {
                        <div>
                            <label for="Images">Bilder auswählen:</label>
                            <input type="file" name="UploadGalleryImages" multiple class="form-control" />
                        </div>
                    }
                </div>
                    <br />
                <div class="form-group">
                    <label asp-for="companyName" class="control-label"></label>
                    <input required asp-for="companyName" class="form-control" />
                    <span asp-validation-for="companyName" class="text-danger"></span>
                </div>
                    <br />
                <div class="form-group">
                    <label asp-for="NameSystem" class="control-label"></label>
                    <input required asp-for="NameSystem" class="form-control" />
                    <span asp-validation-for="NameSystem" class="text-danger"></span>
                </div>
                    <br />
                <div class="form-group">
                    <label asp-for="description" class="control-label"></label>
                    <textarea asp-for="description" required class="form-control" id="exampleFormControlTextarea1"></textarea>
                    <span asp-validation-for="description" class="text-danger"></span>
                </div>
                    <br />
                <div class="form-group">
                    <label asp-for="Price" class="control-label"></label>
                    <input asp-for="Price" type="number" step="0.001" class="form-control" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
                <br/>
                <div id="form-Size" class="shadow-lg p-3 mb-5 bg-body-tertiary rounded">
                <div>
                        <h4>
                            Aussen & Innen
                            <input id="addAussen_Innen" class="btn btn-success" type="button" value="+" />
                            <input id="addAussen_Innen_remove" class="btn btn-danger" type="button" value="-" />
                        </h4>
                </div>
                
                <div id="Aussen_Innen_ProfilDopel">

                    <div id="AussenProfilDopel">
                        @foreach (var list in @ViewBag.Size)
                        {
                            <input class="form-control" name="SizeAus" id="aus" value="@list.aussen" />
                            <input class="form-control" name="costSizeAussen" type="text" id="ausCost" value="@list.costSizeAussen" />
                        }
                    </div>
                    <div id="InnenProfilDopel">
                        @foreach (var list in @ViewBag.Size)
                        {
                            <input class="form-control" name="SizeInen" id="inter" value="@list.Intern" />
                            <input class="form-control" name="costSizeIntern"  type="text" id="interCost" value="@list.costSizeIntern" />
                        }
                    </div>
                   
                </div>
                </div>

                  <div id="Aussen_innen_klein" class="shadow-lg p-3 mb-5 bg-body-tertiary rounded">
                       
                      <div>
                            <h5>Für zylinder aussen klein</h5>
                        </div>
                        <div id="kleinGrose">
                            <div>
                                <div>
                                    <h5>Aussen</h5>
                                <input type="number" class="form-control" value="@resultAussen" name="ausKlein" />
                                </div>
                                <div>
                                    <h5>Preis</h5>
                                <input type="number" class="form-control" step="0,00" value="@resultPreis" name="ausKleinPreis" />
                                </div>
                            </div>
                            <div class="arrow-right">
                            </div>
                            <div>
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Wert</th>
                                            <th>Preis</th>
                                            <th><button type="button" onclick="PlusKleinIntert()" class="btn btn-success">+</button><button type="button" class="btn danger" onclick="MinusKleinIntern()">-</button></th>
                                        </tr>
                                    </thead>
                                    <tbody id="kleiIntern">
                                       
                                        @foreach (var list in ViewBag.DoppelKleinSize)
                                        {
                                            <tr>
                                            <th><input name="internDoppelKlein" class="form-control" value="@list.Intern" type="number" step="0,01" /></th>
                                            <td><input name="priesDoppelKlein" class="form-control" type="number" value="@list.costSizeIntern" step="0,01" /></td>
                                            </tr>
                                        }
                                        
                                    </tbody>
                                </table>
                            </div>
                        </div>

                    </div>
                
                <div id="productOptions">

                    @if (ViewBag.optionV == true)
                    {
                        @foreach (var options in ViewBag.Options)
                        {
                            r++;
                                <div class="input-block shadow-lg p-3 mb-5 bg-body-tertiary rounded" id="block-@r">
                                <div>
                                <h2>Optionen</h2>
                                </div>

                                <div class="form-group">
                                    <h5>Optionen Name</h5>
                                    <input name="Options" value="@options.Name" id="opt" class="form-control" />
                                </div>
                                <div class="form-group">
                                    <h5>Optionsbild</h5>
                                    <input name="ImageNameOption" type="text" value="@options.ImageName" id="opt" class="form-control" />
                                    <br />
                                    <img src="@("/Image/"+@options.ImageName)" height="300" width="300" />
                                    <br />
                                </div>
                                <div class="form-group">
                                    <label class="control-label">Beschreibung</label>
                                    <textarea name="Descriptions" id="discriptions" class="form-control"> 
                                        @options.Description
                                    </textarea>
                                </div>

                                <h1>Value & Cost </h1>
                                <div id="Aussen_Innen_ProfilDopel">
                                    <div id="valueNGF" class="form-group">

                                        @for (int i = 0; i < ViewBag.CountOptions[r]; i++)
                                        {
                                            count++;
                                            <input type="text" placeholder="Wert" name="valueNGF" value="@ViewBag.OptionValue[count].Value" class="form-control" />
                                        }
                                    </div>
                                    <div class="form-group" id="costNGF">

                                        @for (int i = 0; i < ViewBag.CountOptions[r]; i++)
                                        {
                                            f++;
                                            <input type="text" placeholder="Price" name="costNGF" value="@ViewBag.OptionValue[f].Cost" class="form-control" />
                                        }
                                    </div>

                                    <input type="hidden" id="counter" name="inputCounter" />
                                </div>
                              
                                <button class="btn btn-danger" onclick="deleteOption(@r)" type="button">Löschen</button>
                                
                            </div>
                        }
                    }
                </div>
          
                <button id="createBlockBtn" type="button" class="btn btn-success">Add Options</button>
                <button id="addInputBtn" type="button" class="btn btn-success">+</button>
                <button id="RemoveInputBtn" type="button" class="btn btn-danger">-</button>
          

                <input type="submit" value="Save" class="btn btn-primary" />
            </form>
        </div>
    </div>
    <div>
        <a class="btn danger" asp-action="Index">Back to List</a>
    </div>
    </div>
    @section Scripts 
    {
    <script src="~/lib/tinymce_7.1.2/tinymce/js/tinymce/tinymce.min.js"></script>
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }

        <script>

            let table = document.getElementById("kleiIntern");

            function PlusKleinIntert() {
                let row = `   <tr>
                                        <th><input name="internDoppelKlein" class="form-control" type="number" step="0,01" /></th>
                                           <td><input class="form-control" name="priesDoppelKlein" step="0,01" type="number" /></td>
                                </tr> `;

                table.insertAdjacentHTML('beforeend', row);
            }

            function MinusKleinIntern() 
            {
                let countelem = table.querySelectorAll("tr");

                let kleinSize = document.getElementById("Aussen_innen_klein");

                if (countelem.length == 0) {
                    kleinSize.remove();
                }
                else {
                    countelem[countelem.length - 1].remove();
                }
            }

            let Galery = document.getElementById("Galerry");

            function AddImage(imageBlock)
            {
                let addBlock = `<div>
                                        <label for="Images">Bilder auswählen:</label>
                                            <input type="file" name="UploadGalleryImages" multiple class="form-control" />
                                    </div>`;

                document.getElementById('Galerry').innerHTML += addBlock;
            }

            function deleteImage(imageBlock) 
            {
                let imgBlock = document.getElementById("galeryItem-" + imageBlock);

                if (Galery.childElementCount == 3) 
                {
                    imgBlock.remove();
                    Galery.remove();
                }
                else {
                    imgBlock.remove();
                }
            }

            function deleteOption(id) 
            {
                let optionBlock = document.getElementById("block-"+id);

                optionBlock.remove();
            }

            tinymce.init({
                selector: '#discriptions',
                plugins: [
                    'advlist', 'autolink', 'link', 'image', 'lists', 'charmap', 'preview', 'anchor', 'pagebreak',
                    'searchreplace', 'wordcount', 'visualblocks', 'visualchars', 'code', 'fullscreen', 'insertdatetime',
                    'media', 'table', 'emoticons', 'help'
                ],
                toolbar: 'undo redo | styles | bold italic | alignleft aligncenter alignright alignjustify | ' +
                    'bullist numlist outdent indent | link image | print preview media fullscreen | ' +
                    'forecolor backcolor emoticons | help',
                menu: {
                    favs: { title: 'Discriptions', items: 'code visualaid | searchreplace | emoticons' }
                },
                menubar: 'favs file edit view insert format tools table help',
                content_css: 'css/content.css'
            });

            tinymce.init({
                selector: '#exampleFormControlTextarea1',
                plugins: [
                    'advlist', 'autolink', 'link', 'image', 'lists', 'charmap', 'preview', 'anchor', 'pagebreak',
                    'searchreplace', 'wordcount', 'visualblocks', 'visualchars', 'code', 'fullscreen', 'insertdatetime',
                    'media', 'table', 'emoticons', 'help'
                ],
                toolbar: 'undo redo | styles | bold italic | alignleft aligncenter alignright alignjustify | ' +
                    'bullist numlist outdent indent | link image | print preview media fullscreen | ' +
                    'forecolor backcolor emoticons | help',
                menu: {
                    favs: { title: 'Optionen', items: 'code visualaid | searchreplace | emoticons' }
                },
                menubar: 'favs file edit view insert format tools table help',
                content_css: 'css/content.css'
            });

            tinymce.init({
                selector: '#exampleFormControlTextarea2',
                plugins: [
                    'advlist', 'autolink', 'link', 'image', 'lists', 'charmap', 'preview', 'anchor', 'pagebreak',
                    'searchreplace', 'wordcount', 'visualblocks', 'visualchars', 'code', 'fullscreen', 'insertdatetime',
                    'media', 'table', 'emoticons', 'help'
                ],
                toolbar: 'undo redo | styles | bold italic | alignleft aligncenter alignright alignjustify | ' +
                    'bullist numlist outdent indent | link image | print preview media fullscreen | ' +
                    'forecolor backcolor emoticons | help',
                menu: {
                    favs: { title: 'Lieferzeit', items: 'code visualaid | searchreplace | emoticons' }
                },
                menubar: 'favs file edit view insert format tools table help',
                content_css: 'css/content.css'
            });

            let plusAussen_Innen = document.getElementById('addAussen_Innen');
            let removeAussen_Innen = document.getElementById('addAussen_Innen_remove');

            let docInnen = document.getElementById('InnenProfilDopel');
            let docAussen = document.getElementById('AussenProfilDopel');

            let selectedInputs = [];

            let allInnen = document.querySelectorAll("#inter");
            let allAussen = document.querySelectorAll("#aus");

            let aussenCost = document.querySelectorAll("#ausCost");
            let InternCost = document.querySelectorAll("#interCost");

            allAussen.forEach((item) => {

                item.addEventListener("keydown", (event) => 
                {
                    if (event.key === 'Control') 
                    {
                       selectedInputs.push(item);
                    }
                });


                item.addEventListener('change', (event) => 
                {
                    selectedInputs.forEach((x) => {
                        x.value = event.target.value;
                    });
                    selectedInputs = [];
                });

            });


            aussenCost.forEach((item) => {

                item.addEventListener("keydown", (event) => 
                {
                        item.addEventListener("click", () => 
                        {
                            selectedInputs.push(item);
                        })
                });
                

                item.addEventListener('change', (event) => {

                    selectedInputs.forEach((x) => 
                    {
                        x.value = event.target.value;
                    });
                    selectedInputs = [];
                });

            });


            allInnen.forEach((item) => {

                item.addEventListener("keydown", (event) => {
                    if (event.key === 'Control') {
                        selectedInputs.push(item);
                    }
                });


                item.addEventListener('change', (event) => {
                    selectedInputs.forEach((x) => {
                        x.value = event.target.value;
                    });
                    selectedInputs = [];
                });

            });


            InternCost.forEach((item) => {

                item.addEventListener("keydown", (event) => {
                    item.addEventListener("click", () => {
                        selectedInputs.push(item);
                    })
                });


                item.addEventListener('change', (event) => {

                    selectedInputs.forEach((x) => {
                        x.value = event.target.value;
                    });
                    selectedInputs = [];
                });

            });

           

            window.addEventListener('load', function () {
                const blocks = document.querySelectorAll('.input-block');
                for (let i = 0; i < blocks.length; i++) {
                    let counterBlock = blocks[i].querySelectorAll("#valueNGF  input");

                    let counter = blocks[i].querySelectorAll("#counter");

                    counter[0].value = counterBlock.length;

                }
            });


            let costNGF = document.getElementById('costNGF');
            let valueNGF = document.getElementById('valueNGF');

            let productOptions = document.getElementById('productOptions');
            let addOptions = document.getElementById('addOptions');

            plusAussen_Innen.addEventListener('click', () => {

                let d = document.createElement('input');
                d.setAttribute('name', 'SizeAus');
                d.setAttribute('placeholder', 'Aussen');
                d.setAttribute('class', 'form-control');
                d.id = 'aus';

                let costAussen = document.createElement('input');
                costAussen.setAttribute('name', 'costSizeAussen');
                costAussen.setAttribute('placeholder', 'costAussen');
                costAussen.setAttribute('class', 'form-control');
                costAussen.setAttribute('step', '0.01');
                costAussen.setAttribute('type', 'number');
                costAussen.id = 'ausCost';

                let x = document.createElement('input');
                x.setAttribute('name', 'SizeInen');
                x.setAttribute('placeholder', 'Innen');
                x.id = 'inter';
                x.setAttribute('class', 'form-control');

                let costInter = document.createElement('input');
                costInter.setAttribute('name', 'costSizeIntern');
                costInter.setAttribute('placeholder', 'costInnen');
                costInter.id = 'interCost';
                costInter.setAttribute('class', 'form-control');
                costInter.setAttribute('step', '0.01');
                costInter.setAttribute('type', 'number');
                docAussen.append(d, costAussen);
                docInnen.append(x, costInter);

            });
            removeAussen_Innen.addEventListener('click', () => {

                let d = document.querySelectorAll('#aus');

                let costAussen = document.querySelectorAll('#ausCost');

                let x = document.querySelectorAll('#inter');
                let costInter = document.querySelectorAll('#interCost');

                docAussen.removeChild(costAussen[costAussen.length - 1]);
                docAussen.removeChild(d[d.length - 1]);

                docInnen.removeChild(x[x.length - 1]);
                docInnen.removeChild(costInter[costInter.length - 1]);
            });

            document.addEventListener("DOMContentLoaded", function () {
                const container = document.getElementById('productOptions');
                const createBlockBtn = document.getElementById('createBlockBtn');
                const addInputBtn = document.getElementById('addInputBtn');
                const RemoveInputBtn = document.getElementById('RemoveInputBtn');

                let blockCounter = document.querySelectorAll('.input-block').length > 0 ? document.querySelectorAll('.input-block').length : 1;

                createBlockBtn.addEventListener('click', function () {
                    const block = createBlock();
                    container.appendChild(block);
                });

                addInputBtn.addEventListener('click', function () 
                {
                    const blocks = document.querySelectorAll('.input-block');
                    const lastBlock = blocks[blocks.length - 1];

                    if (lastBlock) {
                        addInputs(lastBlock);
                    } else {
                        alert('Сначала создайте блок');
                    }
                });

                RemoveInputBtn.addEventListener('click', function () 
                {
                    const blocks = document.querySelectorAll('.input-block');
                    const lastBlock = blocks[blocks.length - 1];

                    let inputProductValue = lastBlock.querySelectorAll("#valueNGF  input");
                    let inputProductPrice = lastBlock.querySelectorAll("#costNGF  input");

                    if (lastBlock) {
                        if (inputProductValue.length < 2) {
                            productOptions.removeChild(lastBlock);
                        }
                        else {
                            inputProductValue[inputProductValue.length - 1].parentNode.removeChild(inputProductValue[inputProductValue.length - 1]);
                            inputProductPrice[inputProductPrice.length - 1].parentNode.removeChild(inputProductPrice[inputProductPrice.length - 1]);
                        }
                    }
                    else {
                        alert('Сначала создайте блок');
                    }
                });

                function createBlock() 
                {
                    const block = document.createElement('div');
                    block.classList.add(`input-block`);
                    block.id = `block-${blockCounter}`;
                    block.innerHTML = `<div>
                                                                                                <h1>Options</h1>
                                                                                                <label>Name</label>
                                                                                                <input class="form-control" type="text" name="Options" />
                                                                                                <div>
                                                                                                    <p></p>
                                                                                                    <input name="postedFile" type="file" class="btn btn-success" />
                                                                                                    <p></p>
                                                                                                </div>
                                                                                                <label>Descriptions</label>
                                                                                                <input class="form-control" type="text" name="Descriptions" />
                                                                                                <h1>Value & Cost </h1>
                                                                                                <div id="Aussen_Innen_ProfilDopel">
                                                                                                    <div id="valueNGF">
                                                                                                                    <input type="text" class="form-control" placeholder="valueNGF" name="valueNGF" />

                                                                                                    </div>
                                                                                                    <div id="costNGF">
                                                                                                         <input type="number" class="form-control" placeholder="costNGF" step="0.01" name="costNGF" />
                                                                                                    </div>
                                                                                                       <input type="hidden" id="counter" name="inputCounter" />
                                                                                                </div>
                                                                                            </div>
                                                                                                         <hr/>
                                                                                                          <br />
                                                                                                                       <button class="btn btn-danger" onclick="deleteOption(${blockCounter})" 	type="button">Löschen</button>
                                                                                                          <hr />
                                                                                                          <br />

                                                                                            `;

                    blockCounter++;

                    return block;
                }

                function addInputs(block) {

                    let d = document.createElement('input');
                    d.setAttribute('name', 'costNGF');
                    d.setAttribute('placeholder', 'costNGF');
                    d.setAttribute('class', 'form-control');

                    let x = document.createElement('input');
                    x.setAttribute('name', 'valueNGF');
                    x.setAttribute('placeholder', 'valueNGF');
                    x.setAttribute('class', 'form-control');
                    const div1 = block.querySelector('#valueNGF');
                    const div2 = block.querySelector('#costNGF');

                    div1.appendChild(x);

                    div2.appendChild(d);

                    var counter = document.querySelectorAll('#counter');
                    counter[counter.length - 1].value = block.querySelectorAll("#valueNGF  input").length;
                };

            })

        </script>


    }
}
