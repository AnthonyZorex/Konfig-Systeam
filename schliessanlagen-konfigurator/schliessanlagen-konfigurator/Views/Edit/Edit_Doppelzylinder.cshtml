@model schliessanlagen_konfigurator.Models.ProfilDopelZylinder.Profil_Doppelzylinder;

@{
    ViewData["Title"] = $"Edit/{Model.Id}";
    int count = -1;
    int f = -1;
    int r = -1;
}
@if (User.IsInRole("admin"))
{
    <h1>Edit</h1>
    <hr />
    <div class="row" style="justify-content: center;">
        <div class="col-md-10">
            <form asp-action="Save" enctype="multipart/form-data" asp-controller="Home">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                @Html.HiddenFor(x => x.Id)
                <div class="form-group">

                    <input id="VorhanType" asp-for="schliessanlagenId" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="companyName" class="control-label"></label>
                    <input required asp-for="companyName" class="form-control" />
                    <span asp-validation-for="companyName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="NameSystem" class="control-label"></label>
                    <input required asp-for="NameSystem" class="form-control" />
                    <span asp-validation-for="NameSystem" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="description" class="control-label"></label>
                    <textarea asp-for="description" required class="form-control" id="exampleFormControlTextarea1"></textarea>
                    <span asp-validation-for="description" class="text-danger"></span>
                </div>
               
                <div class="form-group">
                    <label asp-for="Price" class="control-label"></label>
                    <input asp-for="Price" type="number" step="0.001" class="form-control" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="ImageName" class="control-label"></label>
                    <input asp-for="ImageName" class="form-control" />
                    <span asp-validation-for="ImageName" class="text-danger"></span>
                </div>
                <label asp-for="ImageFile" class="control-label"></label>
                <hr />
                <h1>
                    Aussen & Innen <input id="addAussen_Innen" class="btn btn-success" type="button" value="+" /><input id="addAussen_Innen_remove" class="btn btn-danger" type="button" value="-" />     
                </h1>
                <div id="Aussen_Innen_ProfilDopel">

                    <div id="AussenProfilDopel">
                        @foreach (var list in @ViewBag.Size)
                        {
                            <input class="form-control" name="SizeAus" id="aus" value="@list.aussen" />
                            <input class="form-control" name="costSizeAussen" type="number" step="0.01" id="ausCost" value="@list.costSizeAussen" />
                        }
                    </div>
                    <div id="InnenProfilDopel">
                        @foreach (var list in @ViewBag.Size)
                        {
                            <input class="form-control" name="SizeInen" id="inter" value="@list.Intern" />
                            <input class="form-control" name="costSizeIntern" step="0.01" type="number" id="interCost" value="@list.costSizeIntern" />
                        }
                    </div>
                   
                </div>

                <div id="productOptions">
                    @if (ViewBag.optionV == true)
                    {
                        @foreach (var options in ViewBag.Options)
                        {
                            r++;
                            <div class="input-block">
                                <h2>Options</h2>
                                <div class="form-group">
                                    <label class="control-label">Options Name</label>
                                    <input name="Options" value="@options.Name" id="opt" class="form-control" />
                                </div>
                                <div class="form-group">
                                    <label class="control-label">Description</label>
                                    <input name="Descriptions" value="@options.Description" class="form-control" />
                                </div>

                                <h1>Value & Cost </h1>
                                <div id="Aussen_Innen_ProfilDopel">
                                    <div id="valueNGF" class="form-group">

                                        @for (int i = 0; i < ViewBag.CountOptions[r]; i++)
                                        {
                                            count++;
                                            <input type="text" placeholder="valueNGF" name="valueNGF" value="@ViewBag.OptionValue[count].Value" class="form-control" />
                                        }
                                    </div>
                                    <div class="form-group" id="costNGF">

                                        @for (int i = 0; i < ViewBag.CountOptions[r]; i++)
                                        {
                                            f++;
                                            <input type="text" placeholder="costNGF" @* step="0,01" *@ name="costNGF" value="@ViewBag.OptionValue[f].Cost" class="form-control" />
                                        }
                                    </div>
                                    <input type="hidden" id="counter" name="inputCounter" />
                                </div>
                            </div>
                        }
                    }
                </div>
                <hr />
                <button id="createBlockBtn" type="button" class="btn btn-success">Add Options</button>
                <button id="addInputBtn" type="button" class="btn btn-success">+</button>
                <button id="RemoveInputBtn" type="button" class="btn btn-danger">-</button>
                <hr />
                <h2>Key Inform</h2>
                @foreach (var list in ViewBag.KeyCost)
                {
                    <div class="form-group">
                        <label class="control-label">System Name</label>
                        <input required name="NSysteam" value="@list.NameSysteam" id="opt" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">KeyKost</label>
                        <input required name="keyCost" value="@list.Price" id="opt" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Desctiptions Systeam</label>
                        <textarea required name="descriptionsSysteam" class="form-control" id="exampleFormControlTextarea2">@list.DesctiptionsSysteam</textarea>
                    </div>
                }
                <hr />
                <input type="submit" value="Save" class="btn btn-primary" />
            </form>
        </div>
    </div>
    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    @section Scripts 
    {
   
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script>

            tinymce.init({
                selector: '#exampleFormControlTextarea1'
            });

            tinymce.init({
                selector: '#exampleFormControlTextarea2'
            });

            let plusAussen_Innen = document.getElementById('addAussen_Innen');
            let removeAussen_Innen = document.getElementById('addAussen_Innen_remove');

            let docInnen = document.getElementById('InnenProfilDopel');
            let docAussen = document.getElementById('AussenProfilDopel');

            let selectedInputs = [];

            let allInnen = document.querySelectorAll("#inter");
            let allAussen = document.querySelectorAll("#aus");

            let aussenCost = document.querySelectorAll("#ausCost");
            let InternCost = document.querySelectorAll("#interCost");

            allAussen.forEach((item) => {

                item.addEventListener("keydown", (event) => 
                {
                    if (event.key === 'Control') 
                    {
                       selectedInputs.push(item);
                    }
                });


                item.addEventListener('change', (event) => 
                {
                    selectedInputs.forEach((x) => {
                        x.value = event.target.value;
                    });
                    selectedInputs = [];
                });

            });


            aussenCost.forEach((item) => {

                item.addEventListener("keydown", (event) => 
                {
                        item.addEventListener("click", () => 
                        {
                            selectedInputs.push(item);
                        })
                });
                

                item.addEventListener('change', (event) => {

                    selectedInputs.forEach((x) => 
                    {
                        x.value = event.target.value;
                    });
                    selectedInputs = [];
                });

            });


            allInnen.forEach((item) => {

                item.addEventListener("keydown", (event) => {
                    if (event.key === 'Control') {
                        selectedInputs.push(item);
                    }
                });


                item.addEventListener('change', (event) => {
                    selectedInputs.forEach((x) => {
                        x.value = event.target.value;
                    });
                    selectedInputs = [];
                });

            });


            InternCost.forEach((item) => {

                item.addEventListener("keydown", (event) => {
                    item.addEventListener("click", () => {
                        selectedInputs.push(item);
                    })
                });


                item.addEventListener('change', (event) => {

                    selectedInputs.forEach((x) => {
                        x.value = event.target.value;
                    });
                    selectedInputs = [];
                });

            });

           

            window.addEventListener('load', function () {
                const blocks = document.querySelectorAll('.input-block');
                for (let i = 0; i < blocks.length; i++) {
                    let counterBlock = blocks[i].querySelectorAll("#valueNGF  input");

                    let counter = blocks[i].querySelectorAll("#counter");

                    counter[0].value = counterBlock.length;

                    console.log(counter[0].value);
                }
            });


            let costNGF = document.getElementById('costNGF');
            let valueNGF = document.getElementById('valueNGF');

            let productOptions = document.getElementById('productOptions');
            let addOptions = document.getElementById('addOptions');

            plusAussen_Innen.addEventListener('click', () => {

                let d = document.createElement('input');
                d.setAttribute('name', 'SizeAus');
                d.setAttribute('placeholder', 'Aussen');
                d.setAttribute('class', 'form-control');
                d.id = 'aus';

                let costAussen = document.createElement('input');
                costAussen.setAttribute('name', 'costSizeAussen');
                costAussen.setAttribute('placeholder', 'costAussen');
                costAussen.setAttribute('class', 'form-control');
                costAussen.setAttribute('step', '0.01');
                costAussen.setAttribute('type', 'number');
                costAussen.id = 'ausCost';

                let x = document.createElement('input');
                x.setAttribute('name', 'SizeInen');
                x.setAttribute('placeholder', 'Innen');
                x.id = 'inter';
                x.setAttribute('class', 'form-control');

                let costInter = document.createElement('input');
                costInter.setAttribute('name', 'costSizeIntern');
                costInter.setAttribute('placeholder', 'costInnen');
                costInter.id = 'interCost';
                costInter.setAttribute('class', 'form-control');
                costInter.setAttribute('step', '0.01');
                costInter.setAttribute('type', 'number');
                docAussen.append(d, costAussen);
                docInnen.append(x, costInter);

            });
            removeAussen_Innen.addEventListener('click', () => {

                let d = document.querySelectorAll('#aus');

                let costAussen = document.querySelectorAll('#ausCost');

                let x = document.querySelectorAll('#inter');
                let costInter = document.querySelectorAll('#interCost');

                docAussen.removeChild(costAussen[costAussen.length - 1]);
                docAussen.removeChild(d[d.length - 1]);

                docInnen.removeChild(x[x.length - 1]);
                docInnen.removeChild(costInter[costInter.length - 1]);
            });

            document.addEventListener("DOMContentLoaded", function () {
                const container = document.getElementById('productOptions');
                const createBlockBtn = document.getElementById('createBlockBtn');
                const addInputBtn = document.getElementById('addInputBtn');
                const RemoveInputBtn = document.getElementById('RemoveInputBtn');

                let blockCounter = document.querySelectorAll('.input-block').length > 0 ? document.querySelectorAll('.input-block').length : 1;

                createBlockBtn.addEventListener('click', function () {
                    const block = createBlock();
                    container.appendChild(block);
                });

                addInputBtn.addEventListener('click', function () {
                    const blocks = document.querySelectorAll('.input-block');
                    const lastBlock = blocks[blocks.length - 1];

                    if (lastBlock) {
                        addInputs(lastBlock);
                    } else {
                        alert('Сначала создайте блок');
                    }
                });

                RemoveInputBtn.addEventListener('click', function () {
                    const blocks = document.querySelectorAll('.input-block');
                    const lastBlock = blocks[blocks.length - 1];

                    let inputProductValue = lastBlock.querySelectorAll("#valueNGF  input");
                    let inputProductPrice = lastBlock.querySelectorAll("#costNGF  input");

                    if (lastBlock) {
                        if (inputProductValue.length < 2) {
                            productOptions.removeChild(lastBlock);
                        }
                        else {
                            inputProductValue[inputProductValue.length - 1].parentNode.removeChild(inputProductValue[inputProductValue.length - 1]);
                            inputProductPrice[inputProductPrice.length - 1].parentNode.removeChild(inputProductPrice[inputProductPrice.length - 1]);
                        }
                    }
                    else {
                        alert('Сначала создайте блок');
                    }
                });

                function createBlock() {
                    const block = document.createElement('div');
                    block.classList.add('input-block');
                    block.id = `block-${blockCounter}`;
                    block.innerHTML = `<div>
                                                                                                <h1>Options</h1>
                                                                                                <label>Name</label>
                                                                                                <input class="form-control" type="text" name="Options" />
                                                                                                <div>
                                                                                                    <p></p>
                                                                                                    <input name="postedFile" type="file" class="btn btn-success" />
                                                                                                    <p></p>
                                                                                                </div>
                                                                                                <label>Descriptions</label>
                                                                                                <input class="form-control" type="text" name="Descriptions" />
                                                                                                <h1>Value & Cost </h1>
                                                                                                <div id="Aussen_Innen_ProfilDopel">
                                                                                                    <div id="valueNGF">
                                                                                                        <input type="text" placeholder="valueNGF" name="valueNGF" />

                                                                                                    </div>
                                                                                                    <div id="costNGF">
                                                                                                                <input type="number" placeholder="costNGF" step="0.01" name="costNGF" />
                                                                                                    </div>
                                                                                                                            <input type="hidden" id="counter" name="inputCounter" />
                                                                                                </div>
                                                                                            </div>`;

                    blockCounter++;

                    return block;
                }

                function addInputs(block) {

                    let d = document.createElement('input');
                    d.setAttribute('name', 'costNGF');
                    d.setAttribute('placeholder', 'costNGF');

                    let x = document.createElement('input');
                    x.setAttribute('name', 'valueNGF');
                    x.setAttribute('placeholder', 'valueNGF');

                    const div1 = block.querySelector('#valueNGF');
                    const div2 = block.querySelector('#costNGF');

                    div1.appendChild(x);

                    div2.appendChild(d);

                    var counter = document.querySelectorAll('#counter');
                    counter[counter.length - 1].value = block.querySelectorAll("#valueNGF  input").length;
                };

            })

        </script>


    }
}
