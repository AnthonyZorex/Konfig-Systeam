@model schliessanlagen_konfigurator.Models.Orders;
@using Microsoft.AspNetCore.Http;

@{
    ViewData["Title"] = "Konfigurator";
}

<div>
    <div id="konfigMenu">
        <button type="button" class="btn btn-danger">1. Schließplan erstellen</button>
        @if (User.IsInRole("client") || User.IsInRole("admin"))
        {
            <button type="button" class="btn btn-secondary"><a href="@Url.Action("System_Auswählen","Konfigurator",new{userName = @ViewBag.UserNameItem , isNewKonfig = true} )">2. System auswählen</a></button>
        }
      @*   <button type="button" class="btn btn-secondary">3. Parameter einstellen</button> *@
    </div>
    <div style="display:flex;gap: 20px;box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;align-items: center;">
        <button onclick="hilfe()" id="hilfeImg" style="border:none"><img src="/Image/help.png" width="60" hight="60" /></button>
        <h2>Füllen Sie den Konfigurator mit Daten aus!</h2>
    </div>
  
    <form asp-action="SaveOrder" enctype="multipart/form-data" id="content" asp-controller="Konfigurator">
  
        @Html.HiddenFor(m => m.userKey)
        <input type="hidden" value="@ViewBag.UserNameItem" name="userName" />

    <div id="InformBar">
        <div id="blockSclussel" >
            <div id="sclusselInfo">
                <div id="schlussel">
                    <h3>Schlüssel</h3>
                </div>

                    <div id ="schlussel2">
                        <input id="removeButton" type="button" value="-">
                        <input id="addButton" type="button" value="+">
                </div>
            </div>
            <div id="itemKeyBlock">
                <div  class="TexCount">
                        <input type="text" required style="position: relative;" name="FurNameKey" value="1" />
                    <div id="TexInputKey">
                       
                            <input id="inputS" required name="NameKey"  onchange="chekedNameArienKey(event.target.value,1)" placeholder="Name des Schlüssels" type="text" />
                    </div>
                    <div>
                            <input id="inputCount" required name="CountKey" value="1" type="text" />
                    </div>
                </div>
             
            </div>
        </div>
        <div>
            <div id="sclusselInfo2">
                <div id="schlussel">
                    <h5>Pos</h5>   
                </div>
                    <div id="schlussel">
                        <h5 style="margin-left: 60px;">Türbezeichnung</h5>
               </div>
                    <div id="schlussel" style="margin-left:120px">
                        <h5>Zylindertyp</h5>
               </div>

                    <div id="schlussel" style="text-align: center;margin-left:60px">
                        <h5>Zylinderlänge mm</h5>
                    </div>
                <div id="schlussel3">
                        <h5>Stück</h5>
                </div>
            </div>
            <div>
                <div id="turInfo">
                        <div id="BlockTur-1">
                        <div class="TexCountTur">
                            <div id="ItemTur">
                                    <div id="position">
                                    <h6 id="counterTur">1</h6>
                                </div>
                                            <div>
                                        <input id="inputTur" required name="Turname" onchange="chekedNameArientiren(event.target.value,1)" placeholder="Name der Tür" />
                                            </div>
                            </div>
                                    <div>

                                    <img  id="typeSylinder" src="/Image/doppelzylinder.png" height="25" width="40" />
                                    
                                    </div>

                                <div id="SelectTurItem">
                                    <select id="TypeSelectTurType" onchange="selectParam(event.target.value,1)" name="ZylinderId">
                                    @foreach (var list in ViewBag.Zylinder_Typ)
                                    {
                                        <option>@list.nameType</option>
                                    }
                                </select>
                            </div>
                                   
                            <div id="SelectTurItem">
                                     <select id="TypeSelectTurItem" class="aussen" name="aussen">
                                     @foreach (var list in ViewBag.DoppelAussen)
                                    {
                                        <option id="OptionA">@list</option>
                                    }
                                </select>
                                    
                            </div>
                            <div id="SelectTurItem">
                                        <select id="TypeSelectTurItem" class="Innen" name="innen">
                                    @foreach (var list in ViewBag.DoppelIntern)
                                    {
                                       <option id="OptionI">@list</option>
                                    }
                                </select>
                            </div>
                                <div id="chekerTur">
                                     <button type="button" onclick="Minus(1)">-</button>
                                    <input id="infoButten"  value="1"   type="text" name="CountTur" />
                                    <button type="button" onclick="Plus(1)">+</button>
                                </div>
                        </div>
                    </div>
                <div id="InfoValue">
                            <div class="horizontal" id="1horizontal">
                                <div class="checkboxContainer">
                                    <input type="checkbox" style="" id="1checkbox1">
                                    <input type="hidden"  value="false" id="I1checkbox1">
                                </div>
                    </div>
                </div>
                </div>
            </div>
                <div id="add_And_Minus">

                    <select id="countTurSelect">
                       
                    </select>

                    <input id="removeButtonTur" type="button" value="-">
                    <input id="addButtonTur" type="button" value="+">
                </div>
        </div>
    </div>
        <input type="text" name="IsOppen" style="display:none" id="vBool" />
        <input type="button" onclick="(printDiv())" class="btn btn-success" id="input" value="Print" />
        <input type="submit"  onclick="(bolleanCheked())" class="btn btn-success" id="input" value="Weiter" />
    </form>

    <div id="myModal" class="modalLessen">
        <div class="modal-contentLessen ">
            <span class="clostHilfeModel">&times;</span>
            <br />
            <h2 id="hilfeText">Hier den Namen der Türen eingeben!</h2>
            <hr/>
            <div id="modelProgress">
                <button id="hilfeNext" onclick="back()"> < </button>
                <div id="circle">
                    <div id="circle2" class="c1">
                    </div>
                </div>

                <div id="circle">
                    <div id="circle2" class="c2">
                    </div>
                </div>

                <div id="circle">
                    <div id="circle2" class="c3">
                    </div>
                </div>

                <div id="circle">
                    <div id="circle2" class="c4">
                    </div>
                </div>

                <div id="circle">
                    <div id="circle2" class="c5">
                    </div>
                </div>
                <div id="circle">
                    <div id="circle2" class="c6">
                    </div>
                </div>

                <div id="circle">
                    <div id="circle2" class="c7">
                    </div>
                </div>

                <div id="circle">
                    <div id="circle2" class="c8">
                    </div>
                </div>
                <div id="circle">
                    <div id="circle2" class="c9">
                    </div>
                </div>
                <button id="hilfeBack" onclick="next()"> > </button>
            </div>
        </div>
        <div class="arrow-down"></div>
    </div>
        <div id="myModalI" class="modalI">
            <div class="modal-contentI ">
                <span class="closI">&times;</span>
            <h2>Beginnen Sie hier mit dem Ausfüllen des Konfigurators!</h2>
            </div>
        </div>
</div>

<script>

    function printDiv() 
    {
        var printContents = document.getElementById("InformBar").innerHTML;
        var originalContents = document.body.innerHTML;

        document.body.innerHTML = printContents;

        window.print();

        document.body.innerHTML = originalContents;
    }

    let blockCount = document.querySelectorAll(".TexCount").length;
    let blockTur = document.querySelectorAll("#inputTur").length;

    let DoppelAussenSize = @Html.Raw(ViewBag.SizeDoppelAussen);
    let DoppelInternSize = @Html.Raw(ViewBag.SizeDoppelIntern);

    let KnayfAussenSize = @Html.Raw(ViewBag.SizeKnayfAussen);
    let KnayfInternSize = @Html.Raw(ViewBag.SizeKnayfIntern);
    
    let HalbSize = @Html.Raw(ViewBag.SizeHalb);
    let data = JSON.parse(localStorage.getItem(`${blockTur}checkbox${blockCount}`));
    let h = 0;
    
    let circle2 = document.querySelectorAll("#circle2");

    let closeHilfe = document.getElementsByClassName("clostHilfeModel")[0];

    let boolArray = [];

    const scroll1 = document.getElementById('itemKeyBlock');
    const scroll2 = document.getElementById('InfoValue');

    // Функция для синхронизации прокрутки
    function syncScroll(source, target) {
        target.scrollLeft = source.scrollLeft;
    }

    // Добавление обработчиков событий прокрутки для обоих элементов
    scroll1.addEventListener('scroll', () => syncScroll(scroll1, scroll2));
    scroll2.addEventListener('scroll', () => syncScroll(scroll2, scroll1));

    let countTurSelect = document.getElementById("countTurSelect");

    document.addEventListener('DOMContentLoaded', (event) => {
        var modal = document.getElementById("myModal");
        modal.style.display = "none";

        for (let i = 1;i<circle2.length ;i++) 
        {
            circle2[i].style.background = "white";
        }

        for (let i = 1; i < 200; i++) 
        {
            let option = document.createElement("option");
            
            option.innerText = i;
            option.value = i;

            countTurSelect.append(option);
        }

    });
   
    let circlestep = 0;
    let hilfeText = document.getElementById("hilfeText");

    function next() 
    {
        let modalcontent = document.getElementsByClassName("modal-contentLessen")[0];
        let modalArrow = document.getElementsByClassName("arrow-down")[0];

        if (circlestep < 8) 
        {
            circle2[circlestep].style.background = "white";
            circlestep++;
            circle2[circlestep].style.background = "red";
            
            switch (circlestep) 
            {
                case 0:
                {
                        hilfeText.innerText = "Hier den Namen der Türen eingeben!";
                        hilfeText.innerHTML = "Hier den Namen der Türen eingeben!";
                        modalcontent.style.marginLeft = "300px";
                        modalArrow.style.marginLeft = "400px";
                        modalcontent.style.marginTop = "280px";
                    break;
                }
                case 1: 
                {
                        hilfeText.innerText = "Wählen Sie den Zylindertyp aus!";
                        hilfeText.innerHTML = "Wählen Sie den Zylindertyp aus!";
                        modalcontent.style.marginTop = "280px";
                        modalcontent.style.marginLeft = "600px";
                        modalArrow.style.marginLeft = "700px";
                    break;
                }
                case 2: 
                {
                        hilfeText.innerText = "Wählen Sie die Außenabmessung des Zylinders aus!";
                        hilfeText.innerHTML = "Wählen Sie die Außenabmessung des Zylinders aus!";
                        modalcontent.style.marginTop = "240px";
                        modalcontent.style.marginLeft = "700px";
                        modalArrow.style.marginLeft = "850px";
                    break;
                }
                 case 3:
                 {
                        hilfeText.innerText = "Wählen Sie die Innenabmessung des Zylinders aus!";
                        hilfeText.innerHTML = "Wählen Sie die Innenabmessung des Zylinders aus!";
                        modalcontent.style.marginTop = "240px";
                        modalcontent.style.marginLeft = "700px";
                        modalArrow.style.marginLeft = "890px";
                    break;
                }
                 case 4:
                 {
                        hilfeText.innerText = "Geben Sie die Anzahl der Schlösser ein!";
                        hilfeText.innerHTML = "Geben Sie die Anzahl der Schlösser ein!";
                        modalcontent.style.marginTop = "280px";
                        modalcontent.style.marginLeft = "800px";
                        modalArrow.style.marginLeft = "1025px";
                    break;
                }
                case 5: 
                {
                        hilfeText.innerText = "Wählen Sie hier aus, was dieser Schlüssel öffnet!";
                        hilfeText.innerHTML = "Wählen Sie hier aus, was dieser Schlüssel öffnet!";
                        modalcontent.style.marginTop = "250px";
                        modalcontent.style.marginLeft = "950px";
                        modalArrow.style.marginLeft = "1130px";
                    break;
                }
                case 6: 
                {
                        hilfeText.innerText = "Geben Sie die Anzahl der Schlüssel ein!";
                        hilfeText.innerHTML = "Geben Sie die Anzahl der Schlüssel ein!";
                        modalcontent.style.marginTop = "230px";
                        modalcontent.style.marginLeft = "950px";
                        modalArrow.style.marginLeft = "1130px";
                    break;
                }
                case 7: 
                {
                        hilfeText.innerText = "Geben Sie den Namen des Schlüssels ein!";
                        hilfeText.innerHTML = "Geben Sie den Namen des Schlüssels ein!";
                        modalcontent.style.marginTop = "80px";
                        modalcontent.style.marginLeft = "950px";
                        modalArrow.style.marginLeft = "1130px";
                    break;
                }
                case 8:
                {
                        hilfeText.innerText = "Geben Sie ein, wem der Schlüssel gehört!";
                        hilfeText.innerHTML = "Geben Sie ein, wem der Schlüssel gehört!";
                        modalcontent.style.marginTop = "40px";
                        modalcontent.style.marginLeft = "950px";
                        modalArrow.style.marginLeft = "1130px";
                        break;
                }
            }
        }
    }
    function back() 
    {
        let modalcontent = document.getElementsByClassName("modal-contentLessen")[0];
        let modalArrow = document.getElementsByClassName("arrow-down")[0];
        if (circlestep > 0) 
        {
            circle2[circlestep].style.background = "white";
            circlestep--;
            circle2[circlestep].style.background = "red";

            switch (circlestep) 
            {
                case 0:
                    {
                        hilfeText.innerText = "Hier den Namen der Türen eingeben!";
                        hilfeText.innerHTML = "Hier den Namen der Türen eingeben!";
                        modalcontent.style.marginLeft = "300px";
                        modalArrow.style.marginLeft = "400px";
                        modalcontent.style.marginTop = "280px";
                        break;
                    }
                case 1:
                    {
                        hilfeText.innerText = "Wählen Sie den Zylindertyp aus!";
                        hilfeText.innerHTML = "Wählen Sie den Zylindertyp aus!";
                        modalcontent.style.marginTop = "280px";
                        modalcontent.style.marginLeft = "600px";
                        modalArrow.style.marginLeft = "700px";
                        break;
                    }
                case 2:
                    {
                        hilfeText.innerText = "Wählen Sie die Außenabmessung des Zylinders aus!";
                        hilfeText.innerHTML = "Wählen Sie die Außenabmessung des Zylinders aus!";
                        modalcontent.style.marginTop = "240px";
                        modalcontent.style.marginLeft = "700px";
                        modalArrow.style.marginLeft = "850px";
                        break;
                    }
                case 3:
                    {
                        hilfeText.innerText = "Wählen Sie die Innenabmessung des Zylinders aus!";
                        hilfeText.innerHTML = "Wählen Sie die Innenabmessung des Zylinders aus!";
                        modalcontent.style.marginTop = "240px";
                        modalcontent.style.marginLeft = "700px";
                        modalArrow.style.marginLeft = "890px";
                        break;
                    }
                case 4:
                    {
                        hilfeText.innerText = "Geben Sie die Anzahl der Schlösser ein!";
                        hilfeText.innerHTML = "Geben Sie die Anzahl der Schlösser ein!";
                        modalcontent.style.marginTop = "280px";
                        modalcontent.style.marginLeft = "800px";
                        modalArrow.style.marginLeft = "1025px";
                        break;
                    }
                case 5:
                    {
                        hilfeText.innerText = "Wählen Sie hier aus, was dieser Schlüssel öffnet!";
                        hilfeText.innerHTML = "Wählen Sie hier aus, was dieser Schlüssel öffnet!";
                        modalcontent.style.marginTop = "250px";
                        modalcontent.style.marginLeft = "950px";
                        modalArrow.style.marginLeft = "1130px";
                        break;
                    }
                case 6:
                    {
                        hilfeText.innerText = "Geben Sie die Anzahl der Schlüssel ein!";
                        hilfeText.innerHTML = "Geben Sie die Anzahl der Schlüssel ein!";
                        modalcontent.style.marginTop = "230px";
                        modalcontent.style.marginLeft = "950px";
                        modalArrow.style.marginLeft = "1130px";
                        break;
                    }
                case 7:
                    {
                        hilfeText.innerText = "Geben Sie den Namen des Schlüssels ein!";
                        hilfeText.innerHTML = "Geben Sie den Namen des Schlüssels ein!";
                        modalcontent.style.marginTop = "80px";
                        modalcontent.style.marginLeft = "950px";
                        modalArrow.style.marginLeft = "1130px";
                        break;
                    }
                case 8:
                {
                        hilfeText.innerText = "Geben Sie ein, wem der Schlüssel gehört!";
                        hilfeText.innerHTML = "Geben Sie ein, wem der Schlüssel gehört!";
                        modalcontent.style.marginTop = "40px";
                        modalcontent.style.marginLeft = "950px";
                        modalArrow.style.marginLeft = "1130px";
                        break;
                }
            }
        }
    }

    closeHilfe.addEventListener("click", () => {
        var modal = document.getElementById("myModal");
        modal.style.display = "none";
    })

    function openModal() {
        var modal = document.getElementById("myModal");
        modal.style.display = "block";
    }
    
    

    function hilfe() 
    {
        openModal();
    }

    function bolleanCheked() 
    {
        let dorCounter = document.querySelectorAll("#inputTur");
        let keyCounter = document.querySelectorAll("#inputS");
        let boolV = document.getElementById('vBool');

        for (let i = 0; i < keyCounter.length; i++) 
        {
            h++;
            let w = 0;
            for (let j = 0; j < dorCounter.length; j++) 
            {
                w++;
                let chekbox = document.getElementById(`I${w}checkbox${h}`);
  
                boolArray.push(chekbox.value);
            }
        }
        boolV.value = boolArray;
    }

    function chekedNameArientiren(value,id) 
    {
        let allKeyName = document.querySelectorAll("#inputS");
       
        let cheker = 1;
        for (let i = 0; i < allKeyName.length; i++) 
        {
            if (allKeyName[i].value == value) 
            {
                let checkbox = document.getElementById(`${id}checkbox${cheker}`);
                checkbox.checked = true;
                let Icheckbox = document.getElementById(`I${id}checkbox${cheker}`);
                Icheckbox.value = true;
            }
            cheker++;
        }
       
    }
    function chekedNameArienKey(value,id) 
    {
        let allTurName = document.querySelectorAll("#inputTur");
        let cheker = 1;

        for (let i = 0; i < allTurName.length; i++) 
        {
            if (allTurName[i].value == value) 
            {
                let checkbox = document.getElementById(`${cheker}checkbox${id}`);
                checkbox.checked = true;
                let Icheckbox = document.getElementById(`I${cheker}checkbox${id}`);
                Icheckbox.value = true;
             
            }
            cheker++;
        }
    }
    function Plus(turNumber) 
    {
        let BlockTur = document.querySelector(`#BlockTur-${turNumber}`);
        let countTur = BlockTur.querySelector("#infoButten");
        let count = countTur.value;
        count++;
        countTur.value = count;
    }
    function Minus(turNumber) 
    {
        let BlockTur = document.querySelector(`#BlockTur-${turNumber}`);
        let countTur = BlockTur.querySelector("#infoButten");
        let count = countTur.value;
        count--;
        countTur.value = count;
    }
    function selectParam(value,turNumber) 
    {
        let BlockTur = document.querySelector(`#BlockTur-${turNumber}`);

        let Aussen = BlockTur.querySelector(".aussen");
        let Intern = BlockTur.querySelector(".Innen");
        let Option = BlockTur.querySelector(".Option");
        
        let TypeSylinder = BlockTur.querySelector("#typeSylinder");

        console.log(TypeSylinder);

        let Aitems = Aussen.querySelectorAll("#OptionA");
        let Iitems = Intern.querySelectorAll("#OptionI");
        
        Aitems.forEach(function (items) 
        {
            items.parentNode.removeChild(items);
        });

        Iitems.forEach(function (items) 
        {
            items.parentNode.removeChild(items);
        });


        if (value == "Doppelzylinder") 
        {
            for (let i = 0; i < DoppelAussenSize.length; i++) 
            {
                let option = document.createElement("option");
                option.id = "OptionA";
                option.innerHTML = DoppelAussenSize[i];
                option.innerText = DoppelAussenSize[i];
                Aussen.appendChild(option);
               
            }
            for (let i = 0; i < DoppelInternSize.length; i++) 
            {
                let option = document.createElement("option");
                option.id = "OptionI";
                option.innerHTML = DoppelInternSize[i];
                option.innerText = DoppelInternSize[i];
                Intern.appendChild(option);
            }
           
            TypeSylinder.src = "/Image/doppelzylinder.png";
        }
        if (value == "Halbzylinder") 
        {
            for (let i = 0; i < HalbSize.length; i++) 
            {
                let option = document.createElement("option");
                option.id = "OptionA";
                option.innerHTML = HalbSize[i];
                option.innerText = HalbSize[i];
                Aussen.appendChild(option);
            }
          
            TypeSylinder.src = "/Image/halbzylinder.png";
        }
        if (value == "Knaufzylinder") 
        {
            for (let i = 0; i < KnayfAussenSize.length; i++) 
            {
                let option = document.createElement("option");
                option.id = "OptionA";
                option.innerHTML = KnayfAussenSize[i];
                option.innerText = KnayfAussenSize[i];
                Aussen.appendChild(option);
            }
            for (let i = 0; i < KnayfInternSize.length; i++) 
            {
                let option = document.createElement("option");
                option.id = "OptionI";
                option.innerHTML = KnayfInternSize[i];
                option.innerText = KnayfInternSize[i];
                Intern.appendChild(option);
            }
          
            TypeSylinder.src = "/Image/knaufzylinder.png";

        }
        if (value == "Hebelzylinder") 
        {
           
            TypeSylinder.src = "/Image/briefkastenzylinder.png";
        }
        if (value == "Vorhangschloss") 
        {
            TypeSylinder.src = "/Image/vorhangschloss.png";
        }
        if (value == "Aussenzylinder") 
        {
          
            TypeSylinder.src = "/Image/aussenzylinder.png";
        }

    }

    function createCustomCheckbox(id) 
    {
        
        var checkbox = document.getElementById(id);
        var checkboxValue = false;

        if (!localStorage.getItem(id)) 
        {
            localStorage.setItem(id, 'false');
        }
     
        var savedValue = localStorage.getItem(id);

        if (savedValue !== null) 
        {
   
            checkbox.checked = (savedValue === 'true'); 
            checkboxValue = checkbox.checked;

        }

        checkbox.addEventListener('change', function () 
        {
         
            localStorage.setItem(id, this.checked);
           
            checkboxValue = this.checked;

            let switches = document.getElementById(`I${id}`);
         
            if (switches !== null)
                switches.value = String(this.checked);

        });
    }

    function foo() {
        localStorage.clear();
        createCustomCheckbox(`${blockTur}checkbox${blockCount}`);
    }

    window.onload = foo()

    function removeBlockTur() 
    {
                let blockToRemove = document.getElementById('BlockTur-' + blockTur);
                    
                if (blockToRemove) 
                {
                       blockToRemove.remove();

                       let Horizontal = document.getElementById(`${blockTur}horizontal`);
                            
                       Horizontal.remove();

                       blockTur--;
                }
    }

        function addBlockTur() {
        blockTur++;

        let newBlock = document.createElement('div');
        newBlock.id = 'BlockTur-' + blockTur;
        newBlock.innerHTML = `  <div class="TexCountTur">
                                <div id="ItemTur">
                                    <div id="position">
                                       <h6 id="counterTur">${blockTur}</h6>
                                    </div>

                                    <div>
                                              <input id="inputTur" required  onchange="chekedNameArientiren(event.target.value,${blockTur})" name="Turname" placeholder="Name der Tür" />
                                    </div>

                                        <div>

                                             <img  id="typeSylinder" src="/Image/doppelzylinder.png" height="25" width="40"  />

                                        </div>
                                </div>
                                     
                                <div id="SelectTurItem">
                                        <select id="TypeSelectTurType"  onchange="selectParam(event.target.value,${blockTur})" name="ZylinderId">
                                    @foreach (var list in ViewBag.Zylinder_Typ)
                                    {
                                      <option>@list.nameType</option>
                                    }
                                    </select>
                                </div>
                                     
                                <div id="SelectTurItem">
                                        <select id="TypeSelectTurItem"  class="aussen" name="aussen">
                                        @foreach (var list in ViewBag.DoppelAussen)
                                        {
                                          <option id="OptionA">@list</option>
                                        }
                                    </select>
                                </div>
                                <div id="SelectTurItem">
                                            <select id="TypeSelectTurItem" class="Innen" name="innen">
                                         @foreach (var list in ViewBag.DoppelIntern)
                                         {
                                               <option id="OptionI">@list</option>
                                         }
                                    </select>
                                </div>
                                           <div id="chekerTur">
                                            <button type="button" onclick="Minus(${blockTur})">-</button>
                                        <input id="infoButten"  value="1" type="text" name="CountTur" />
                                           <button type="button" onclick="Plus(${blockTur})">+</button>
                                    </div>
                            </div>
                              
                `;

            document.getElementById('BlockTur-1').appendChild(newBlock);

            let horizont = document.createElement('div');
            horizont.id = `${blockTur}horizontal`;
            horizont.classList.add('horizontal');

            for (let i = 1; i <= blockCount; i++) 
            {

                let newBlockTur = document.createElement('div');
               
                newBlockTur.innerHTML = ` <input type="checkbox" id=${blockTur}checkbox${i}>
                <input type="hidden" value="false" id="I${blockTur}checkbox${i}">`;

                newBlockTur.id = `${blockTur}.checkboxContainer${i}`;

                newBlockTur.classList.add('checkboxContainer');

                horizont.appendChild(newBlockTur);

                document.getElementById('InfoValue').appendChild(horizont);

                createCustomCheckbox(`${blockTur}checkbox${i}`);
            }
    }
        function removeBlock() 
        {
            let blockToRemove = document.getElementById('TexCount-' + blockCount);
        
            if (blockToRemove) 
            {
                blockToRemove.remove();
                if (blockTur > 1) 
                {
                    for (let f = 1; f <= blockTur;) 
                    {
                            let blockToRemoveTurValue = document.getElementById(`${f}.checkboxContainer${blockCount}`);
                            blockToRemoveTurValue.remove();
  
                        f++;
 
                    }
                       
                }

                    else 
                    {
                        let blockToRemoveTurValue = document.getElementById(`${blockTur}.checkboxContainer${blockCount}`);
                        blockToRemoveTurValue.remove();
                    }

            blockCount--;
            }
              
        }

    function addBlock() 
    {
        blockCount++;
    
        let newBlock = document.createElement('div');
        newBlock.id = 'TexCount-' + blockCount;
        newBlock.innerHTML = `
                               <div  class="TexCount">
                                     <input type="text" required  name="FurNameKey" style="position: relative;" value="${blockCount}" />
                            <div id="TexInputKey">
                                    <input id="inputS" required name="NameKey" onchange="chekedNameArienKey(event.target.value,${blockCount})" placeholder="Name des Schlüssels" type="text" />
                            </div>
                            <div>
                                         <input id="inputCount" required name="CountKey" value="1" type="text" />
                            </div>
                        </div>

            `;
        document.getElementById('itemKeyBlock').appendChild(newBlock);
      
        let horizont = document.getElementById(`${blockTur}horizontal`);

        for (let i = 1; i <= blockTur; i++) 
        {
          
            let newBlockTur = document.createElement('div');

            newBlockTur.innerHTML = ` <input type="checkbox" id=${i}checkbox${blockCount}>
                                    <input type="hidden"  value="false" id="I${i}checkbox${blockCount}">`;

            newBlockTur.id = `${i}.checkboxContainer${blockCount}`;

            newBlockTur.classList.add('checkboxContainer');

            document.getElementById(`${i}horizontal`).appendChild(newBlockTur);

            document.getElementById('InfoValue').appendChild(horizont);

            createCustomCheckbox(`${i}checkbox${blockCount}`);
        }

    }

        document.getElementById('removeButton').addEventListener('click', removeBlock);
        document.getElementById('addButton').addEventListener('click', addBlock);

    document.getElementById('removeButtonTur').addEventListener('click', removeBlockTur);
    document.getElementById('addButtonTur').addEventListener('click', addBlockTur);
    
</script>